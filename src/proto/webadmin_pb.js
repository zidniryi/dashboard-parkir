// source: webadmin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.Webadmin.AdminRolesList', null, global);
goog.exportSymbol('proto.Webadmin.AdminRolesRequest', null, global);
goog.exportSymbol('proto.Webadmin.AdminRolesResponse', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserAddList', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserAddRequest', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserAddResponse', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserDeleteRequest', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserDeleteResponse', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserEditList', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserEditRequest', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserEditResponse', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserResetPasswordList', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserResetPasswordRequest', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserResetPasswordResponse', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserToggleRequest', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserToggleResponse', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserViewList', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.AdminUserViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.CategoriesList', null, global);
goog.exportSymbol('proto.Webadmin.CategoriesRequest', null, global);
goog.exportSymbol('proto.Webadmin.CategoriesResponse', null, global);
goog.exportSymbol('proto.Webadmin.CategoryAddList', null, global);
goog.exportSymbol('proto.Webadmin.CategoryAddRequest', null, global);
goog.exportSymbol('proto.Webadmin.CategoryAddResponse', null, global);
goog.exportSymbol('proto.Webadmin.CategoryEditList', null, global);
goog.exportSymbol('proto.Webadmin.CategoryEditRequest', null, global);
goog.exportSymbol('proto.Webadmin.CategoryEditResponse', null, global);
goog.exportSymbol('proto.Webadmin.CategoryToggleRequest', null, global);
goog.exportSymbol('proto.Webadmin.CategoryToggleResponse', null, global);
goog.exportSymbol('proto.Webadmin.CategoryViewList', null, global);
goog.exportSymbol('proto.Webadmin.CategoryViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.CategoryViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.CheckSessionRequest', null, global);
goog.exportSymbol('proto.Webadmin.CheckSessionResponse', null, global);
goog.exportSymbol('proto.Webadmin.CitiesList', null, global);
goog.exportSymbol('proto.Webadmin.CitiesRequest', null, global);
goog.exportSymbol('proto.Webadmin.CitiesResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientAddList', null, global);
goog.exportSymbol('proto.Webadmin.ClientAddRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientAddResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientDeleteRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientDeleteResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientEditList', null, global);
goog.exportSymbol('proto.Webadmin.ClientEditRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientEditResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientRolesList', null, global);
goog.exportSymbol('proto.Webadmin.ClientRolesRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientRolesResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientToggleRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientToggleResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserAddList', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserAddRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserAddResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserDeleteRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserDeleteResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserEditList', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserEditRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserEditResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserResetPasswordList', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserResetPasswordRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserResetPasswordResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserToggleRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserToggleResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserViewList', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientUserViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientViewList', null, global);
goog.exportSymbol('proto.Webadmin.ClientViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.ClientsList', null, global);
goog.exportSymbol('proto.Webadmin.ClientsRequest', null, global);
goog.exportSymbol('proto.Webadmin.ClientsResponse', null, global);
goog.exportSymbol('proto.Webadmin.CountriesList', null, global);
goog.exportSymbol('proto.Webadmin.CountriesRequest', null, global);
goog.exportSymbol('proto.Webadmin.CountriesResponse', null, global);
goog.exportSymbol('proto.Webadmin.GateAddList', null, global);
goog.exportSymbol('proto.Webadmin.GateAddRequest', null, global);
goog.exportSymbol('proto.Webadmin.GateAddResponse', null, global);
goog.exportSymbol('proto.Webadmin.GateDeleteRequest', null, global);
goog.exportSymbol('proto.Webadmin.GateDeleteResponse', null, global);
goog.exportSymbol('proto.Webadmin.GateEditList', null, global);
goog.exportSymbol('proto.Webadmin.GateEditRequest', null, global);
goog.exportSymbol('proto.Webadmin.GateEditResponse', null, global);
goog.exportSymbol('proto.Webadmin.GateHardwareEditList', null, global);
goog.exportSymbol('proto.Webadmin.GateHardwareEditRequest', null, global);
goog.exportSymbol('proto.Webadmin.GateHardwareEditResponse', null, global);
goog.exportSymbol('proto.Webadmin.GateHardwareResetRequest', null, global);
goog.exportSymbol('proto.Webadmin.GateHardwareResetResponse', null, global);
goog.exportSymbol('proto.Webadmin.GateHardwareViewList', null, global);
goog.exportSymbol('proto.Webadmin.GateHardwareViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.GateHardwareViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.GateReportList', null, global);
goog.exportSymbol('proto.Webadmin.GateReportRequest', null, global);
goog.exportSymbol('proto.Webadmin.GateReportResponse', null, global);
goog.exportSymbol('proto.Webadmin.GateSettingEditList', null, global);
goog.exportSymbol('proto.Webadmin.GateSettingEditRequest', null, global);
goog.exportSymbol('proto.Webadmin.GateSettingEditResponse', null, global);
goog.exportSymbol('proto.Webadmin.GateSettingResetRequest', null, global);
goog.exportSymbol('proto.Webadmin.GateSettingResetResponse', null, global);
goog.exportSymbol('proto.Webadmin.GateSettingViewList', null, global);
goog.exportSymbol('proto.Webadmin.GateSettingViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.GateSettingViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.GateToggleRequest', null, global);
goog.exportSymbol('proto.Webadmin.GateToggleResponse', null, global);
goog.exportSymbol('proto.Webadmin.GateViewList', null, global);
goog.exportSymbol('proto.Webadmin.GateViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.GateViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.GenerateConfigRequest', null, global);
goog.exportSymbol('proto.Webadmin.GenerateConfigResponse', null, global);
goog.exportSymbol('proto.Webadmin.LogViewList', null, global);
goog.exportSymbol('proto.Webadmin.LogViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.LogViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.LoginList', null, global);
goog.exportSymbol('proto.Webadmin.LoginRequest', null, global);
goog.exportSymbol('proto.Webadmin.LoginResponse', null, global);
goog.exportSymbol('proto.Webadmin.LogoutRequest', null, global);
goog.exportSymbol('proto.Webadmin.LogoutResponse', null, global);
goog.exportSymbol('proto.Webadmin.MonitorList', null, global);
goog.exportSymbol('proto.Webadmin.MonitorRequest', null, global);
goog.exportSymbol('proto.Webadmin.MonitorResponse', null, global);
goog.exportSymbol('proto.Webadmin.MonitorServiceList', null, global);
goog.exportSymbol('proto.Webadmin.PlaceAddList', null, global);
goog.exportSymbol('proto.Webadmin.PlaceAddRequest', null, global);
goog.exportSymbol('proto.Webadmin.PlaceAddResponse', null, global);
goog.exportSymbol('proto.Webadmin.PlaceDeleteRequest', null, global);
goog.exportSymbol('proto.Webadmin.PlaceDeleteResponse', null, global);
goog.exportSymbol('proto.Webadmin.PlaceEditList', null, global);
goog.exportSymbol('proto.Webadmin.PlaceEditRequest', null, global);
goog.exportSymbol('proto.Webadmin.PlaceEditResponse', null, global);
goog.exportSymbol('proto.Webadmin.PlaceToggleRequest', null, global);
goog.exportSymbol('proto.Webadmin.PlaceToggleResponse', null, global);
goog.exportSymbol('proto.Webadmin.PlaceViewList', null, global);
goog.exportSymbol('proto.Webadmin.PlaceViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.PlaceViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.PlacesList', null, global);
goog.exportSymbol('proto.Webadmin.PlacesRequest', null, global);
goog.exportSymbol('proto.Webadmin.PlacesResponse', null, global);
goog.exportSymbol('proto.Webadmin.PriceEditList', null, global);
goog.exportSymbol('proto.Webadmin.PriceEditRequest', null, global);
goog.exportSymbol('proto.Webadmin.PriceEditResponse', null, global);
goog.exportSymbol('proto.Webadmin.PriceResetRequest', null, global);
goog.exportSymbol('proto.Webadmin.PriceResetResponse', null, global);
goog.exportSymbol('proto.Webadmin.PriceViewList', null, global);
goog.exportSymbol('proto.Webadmin.PriceViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.PriceViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.PrintInEditList', null, global);
goog.exportSymbol('proto.Webadmin.PrintInEditRequest', null, global);
goog.exportSymbol('proto.Webadmin.PrintInEditResponse', null, global);
goog.exportSymbol('proto.Webadmin.PrintInResetRequest', null, global);
goog.exportSymbol('proto.Webadmin.PrintInResetResponse', null, global);
goog.exportSymbol('proto.Webadmin.PrintInViewList', null, global);
goog.exportSymbol('proto.Webadmin.PrintInViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.PrintInViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.PrintOutEditList', null, global);
goog.exportSymbol('proto.Webadmin.PrintOutEditRequest', null, global);
goog.exportSymbol('proto.Webadmin.PrintOutEditResponse', null, global);
goog.exportSymbol('proto.Webadmin.PrintOutResetRequest', null, global);
goog.exportSymbol('proto.Webadmin.PrintOutResetResponse', null, global);
goog.exportSymbol('proto.Webadmin.PrintOutViewList', null, global);
goog.exportSymbol('proto.Webadmin.PrintOutViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.PrintOutViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.ProvincesList', null, global);
goog.exportSymbol('proto.Webadmin.ProvincesRequest', null, global);
goog.exportSymbol('proto.Webadmin.ProvincesResponse', null, global);
goog.exportSymbol('proto.Webadmin.TimeFormatsList', null, global);
goog.exportSymbol('proto.Webadmin.TimeFormatsRequest', null, global);
goog.exportSymbol('proto.Webadmin.TimeFormatsResponse', null, global);
goog.exportSymbol('proto.Webadmin.TransactionList', null, global);
goog.exportSymbol('proto.Webadmin.TransactionRequest', null, global);
goog.exportSymbol('proto.Webadmin.TransactionResponse', null, global);
goog.exportSymbol('proto.Webadmin.TypeAddList', null, global);
goog.exportSymbol('proto.Webadmin.TypeAddRequest', null, global);
goog.exportSymbol('proto.Webadmin.TypeAddResponse', null, global);
goog.exportSymbol('proto.Webadmin.TypeEditList', null, global);
goog.exportSymbol('proto.Webadmin.TypeEditRequest', null, global);
goog.exportSymbol('proto.Webadmin.TypeEditResponse', null, global);
goog.exportSymbol('proto.Webadmin.TypeToggleRequest', null, global);
goog.exportSymbol('proto.Webadmin.TypeToggleResponse', null, global);
goog.exportSymbol('proto.Webadmin.TypeViewList', null, global);
goog.exportSymbol('proto.Webadmin.TypeViewRequest', null, global);
goog.exportSymbol('proto.Webadmin.TypeViewResponse', null, global);
goog.exportSymbol('proto.Webadmin.TypesList', null, global);
goog.exportSymbol('proto.Webadmin.TypesRequest', null, global);
goog.exportSymbol('proto.Webadmin.TypesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.LoginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.LoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.LoginRequest.displayName = 'proto.Webadmin.LoginRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.LoginList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.LoginList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.LoginList.displayName = 'proto.Webadmin.LoginList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.LoginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.LoginResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.LoginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.LoginResponse.displayName = 'proto.Webadmin.LoginResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.LogoutRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.LogoutRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.LogoutRequest.displayName = 'proto.Webadmin.LogoutRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.LogoutResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.LogoutResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.LogoutResponse.displayName = 'proto.Webadmin.LogoutResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CheckSessionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CheckSessionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CheckSessionRequest.displayName = 'proto.Webadmin.CheckSessionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CheckSessionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CheckSessionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CheckSessionResponse.displayName = 'proto.Webadmin.CheckSessionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminUserViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserViewRequest.displayName = 'proto.Webadmin.AdminUserViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminUserViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserViewList.displayName = 'proto.Webadmin.AdminUserViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.AdminUserViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.AdminUserViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserViewResponse.displayName = 'proto.Webadmin.AdminUserViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserAddRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminUserAddRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserAddRequest.displayName = 'proto.Webadmin.AdminUserAddRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserAddList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminUserAddList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserAddList.displayName = 'proto.Webadmin.AdminUserAddList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserAddResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.AdminUserAddResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.AdminUserAddResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserAddResponse.displayName = 'proto.Webadmin.AdminUserAddResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminUserEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserEditRequest.displayName = 'proto.Webadmin.AdminUserEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserEditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminUserEditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserEditList.displayName = 'proto.Webadmin.AdminUserEditList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.AdminUserEditResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.AdminUserEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserEditResponse.displayName = 'proto.Webadmin.AdminUserEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserResetPasswordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminUserResetPasswordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserResetPasswordRequest.displayName = 'proto.Webadmin.AdminUserResetPasswordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserResetPasswordList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminUserResetPasswordList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserResetPasswordList.displayName = 'proto.Webadmin.AdminUserResetPasswordList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserResetPasswordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.AdminUserResetPasswordResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.AdminUserResetPasswordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserResetPasswordResponse.displayName = 'proto.Webadmin.AdminUserResetPasswordResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserToggleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminUserToggleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserToggleRequest.displayName = 'proto.Webadmin.AdminUserToggleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserToggleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminUserToggleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserToggleResponse.displayName = 'proto.Webadmin.AdminUserToggleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminUserDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserDeleteRequest.displayName = 'proto.Webadmin.AdminUserDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminUserDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminUserDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminUserDeleteResponse.displayName = 'proto.Webadmin.AdminUserDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientUserViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserViewRequest.displayName = 'proto.Webadmin.ClientUserViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientUserViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserViewList.displayName = 'proto.Webadmin.ClientUserViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.ClientUserViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.ClientUserViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserViewResponse.displayName = 'proto.Webadmin.ClientUserViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserAddRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientUserAddRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserAddRequest.displayName = 'proto.Webadmin.ClientUserAddRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserAddList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientUserAddList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserAddList.displayName = 'proto.Webadmin.ClientUserAddList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserAddResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.ClientUserAddResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.ClientUserAddResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserAddResponse.displayName = 'proto.Webadmin.ClientUserAddResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientUserEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserEditRequest.displayName = 'proto.Webadmin.ClientUserEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserEditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientUserEditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserEditList.displayName = 'proto.Webadmin.ClientUserEditList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.ClientUserEditResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.ClientUserEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserEditResponse.displayName = 'proto.Webadmin.ClientUserEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserResetPasswordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientUserResetPasswordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserResetPasswordRequest.displayName = 'proto.Webadmin.ClientUserResetPasswordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserResetPasswordList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientUserResetPasswordList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserResetPasswordList.displayName = 'proto.Webadmin.ClientUserResetPasswordList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserResetPasswordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.ClientUserResetPasswordResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.ClientUserResetPasswordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserResetPasswordResponse.displayName = 'proto.Webadmin.ClientUserResetPasswordResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserToggleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientUserToggleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserToggleRequest.displayName = 'proto.Webadmin.ClientUserToggleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserToggleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientUserToggleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserToggleResponse.displayName = 'proto.Webadmin.ClientUserToggleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientUserDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserDeleteRequest.displayName = 'proto.Webadmin.ClientUserDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientUserDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientUserDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientUserDeleteResponse.displayName = 'proto.Webadmin.ClientUserDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientViewRequest.displayName = 'proto.Webadmin.ClientViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientViewList.displayName = 'proto.Webadmin.ClientViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.ClientViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.ClientViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientViewResponse.displayName = 'proto.Webadmin.ClientViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientAddRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientAddRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientAddRequest.displayName = 'proto.Webadmin.ClientAddRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientAddList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientAddList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientAddList.displayName = 'proto.Webadmin.ClientAddList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientAddResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.ClientAddResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.ClientAddResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientAddResponse.displayName = 'proto.Webadmin.ClientAddResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientEditRequest.displayName = 'proto.Webadmin.ClientEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientEditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientEditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientEditList.displayName = 'proto.Webadmin.ClientEditList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.ClientEditResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.ClientEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientEditResponse.displayName = 'proto.Webadmin.ClientEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientToggleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientToggleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientToggleRequest.displayName = 'proto.Webadmin.ClientToggleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientToggleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientToggleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientToggleResponse.displayName = 'proto.Webadmin.ClientToggleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientDeleteRequest.displayName = 'proto.Webadmin.ClientDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientDeleteResponse.displayName = 'proto.Webadmin.ClientDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PlaceViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceViewRequest.displayName = 'proto.Webadmin.PlaceViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PlaceViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceViewList.displayName = 'proto.Webadmin.PlaceViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.PlaceViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.PlaceViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceViewResponse.displayName = 'proto.Webadmin.PlaceViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceAddRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PlaceAddRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceAddRequest.displayName = 'proto.Webadmin.PlaceAddRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceAddList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PlaceAddList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceAddList.displayName = 'proto.Webadmin.PlaceAddList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceAddResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.PlaceAddResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.PlaceAddResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceAddResponse.displayName = 'proto.Webadmin.PlaceAddResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PlaceEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceEditRequest.displayName = 'proto.Webadmin.PlaceEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceEditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PlaceEditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceEditList.displayName = 'proto.Webadmin.PlaceEditList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.PlaceEditResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.PlaceEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceEditResponse.displayName = 'proto.Webadmin.PlaceEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceToggleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PlaceToggleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceToggleRequest.displayName = 'proto.Webadmin.PlaceToggleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceToggleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PlaceToggleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceToggleResponse.displayName = 'proto.Webadmin.PlaceToggleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PlaceDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceDeleteRequest.displayName = 'proto.Webadmin.PlaceDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlaceDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PlaceDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlaceDeleteResponse.displayName = 'proto.Webadmin.PlaceDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateViewRequest.displayName = 'proto.Webadmin.GateViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateViewList.displayName = 'proto.Webadmin.GateViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.GateViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.GateViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateViewResponse.displayName = 'proto.Webadmin.GateViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateAddRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateAddRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateAddRequest.displayName = 'proto.Webadmin.GateAddRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateAddList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateAddList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateAddList.displayName = 'proto.Webadmin.GateAddList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateAddResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.GateAddResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.GateAddResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateAddResponse.displayName = 'proto.Webadmin.GateAddResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateEditRequest.displayName = 'proto.Webadmin.GateEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateEditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateEditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateEditList.displayName = 'proto.Webadmin.GateEditList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.GateEditResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.GateEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateEditResponse.displayName = 'proto.Webadmin.GateEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateToggleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateToggleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateToggleRequest.displayName = 'proto.Webadmin.GateToggleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateToggleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateToggleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateToggleResponse.displayName = 'proto.Webadmin.GateToggleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateDeleteRequest.displayName = 'proto.Webadmin.GateDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateDeleteResponse.displayName = 'proto.Webadmin.GateDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateSettingViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateSettingViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateSettingViewRequest.displayName = 'proto.Webadmin.GateSettingViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateSettingViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateSettingViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateSettingViewList.displayName = 'proto.Webadmin.GateSettingViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateSettingViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.GateSettingViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.GateSettingViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateSettingViewResponse.displayName = 'proto.Webadmin.GateSettingViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateSettingEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateSettingEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateSettingEditRequest.displayName = 'proto.Webadmin.GateSettingEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateSettingEditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateSettingEditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateSettingEditList.displayName = 'proto.Webadmin.GateSettingEditList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateSettingEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.GateSettingEditResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.GateSettingEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateSettingEditResponse.displayName = 'proto.Webadmin.GateSettingEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateSettingResetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateSettingResetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateSettingResetRequest.displayName = 'proto.Webadmin.GateSettingResetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateSettingResetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateSettingResetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateSettingResetResponse.displayName = 'proto.Webadmin.GateSettingResetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateHardwareViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateHardwareViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateHardwareViewRequest.displayName = 'proto.Webadmin.GateHardwareViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateHardwareViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateHardwareViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateHardwareViewList.displayName = 'proto.Webadmin.GateHardwareViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateHardwareViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.GateHardwareViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.GateHardwareViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateHardwareViewResponse.displayName = 'proto.Webadmin.GateHardwareViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateHardwareEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateHardwareEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateHardwareEditRequest.displayName = 'proto.Webadmin.GateHardwareEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateHardwareEditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateHardwareEditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateHardwareEditList.displayName = 'proto.Webadmin.GateHardwareEditList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateHardwareEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.GateHardwareEditResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.GateHardwareEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateHardwareEditResponse.displayName = 'proto.Webadmin.GateHardwareEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateHardwareResetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateHardwareResetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateHardwareResetRequest.displayName = 'proto.Webadmin.GateHardwareResetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateHardwareResetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateHardwareResetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateHardwareResetResponse.displayName = 'proto.Webadmin.GateHardwareResetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PriceViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PriceViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PriceViewRequest.displayName = 'proto.Webadmin.PriceViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PriceViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PriceViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PriceViewList.displayName = 'proto.Webadmin.PriceViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PriceViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.PriceViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.PriceViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PriceViewResponse.displayName = 'proto.Webadmin.PriceViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PriceEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PriceEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PriceEditRequest.displayName = 'proto.Webadmin.PriceEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PriceEditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PriceEditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PriceEditList.displayName = 'proto.Webadmin.PriceEditList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PriceEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.PriceEditResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.PriceEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PriceEditResponse.displayName = 'proto.Webadmin.PriceEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PriceResetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PriceResetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PriceResetRequest.displayName = 'proto.Webadmin.PriceResetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PriceResetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PriceResetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PriceResetResponse.displayName = 'proto.Webadmin.PriceResetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintInViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PrintInViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintInViewRequest.displayName = 'proto.Webadmin.PrintInViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintInViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PrintInViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintInViewList.displayName = 'proto.Webadmin.PrintInViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintInViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.PrintInViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.PrintInViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintInViewResponse.displayName = 'proto.Webadmin.PrintInViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintInEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PrintInEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintInEditRequest.displayName = 'proto.Webadmin.PrintInEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintInEditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PrintInEditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintInEditList.displayName = 'proto.Webadmin.PrintInEditList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintInEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.PrintInEditResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.PrintInEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintInEditResponse.displayName = 'proto.Webadmin.PrintInEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintInResetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PrintInResetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintInResetRequest.displayName = 'proto.Webadmin.PrintInResetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintInResetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PrintInResetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintInResetResponse.displayName = 'proto.Webadmin.PrintInResetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintOutViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PrintOutViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintOutViewRequest.displayName = 'proto.Webadmin.PrintOutViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintOutViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PrintOutViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintOutViewList.displayName = 'proto.Webadmin.PrintOutViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintOutViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.PrintOutViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.PrintOutViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintOutViewResponse.displayName = 'proto.Webadmin.PrintOutViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintOutEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PrintOutEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintOutEditRequest.displayName = 'proto.Webadmin.PrintOutEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintOutEditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PrintOutEditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintOutEditList.displayName = 'proto.Webadmin.PrintOutEditList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintOutEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.PrintOutEditResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.PrintOutEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintOutEditResponse.displayName = 'proto.Webadmin.PrintOutEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintOutResetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PrintOutResetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintOutResetRequest.displayName = 'proto.Webadmin.PrintOutResetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PrintOutResetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PrintOutResetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PrintOutResetResponse.displayName = 'proto.Webadmin.PrintOutResetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GenerateConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GenerateConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GenerateConfigRequest.displayName = 'proto.Webadmin.GenerateConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GenerateConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GenerateConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GenerateConfigResponse.displayName = 'proto.Webadmin.GenerateConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoryViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CategoryViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoryViewRequest.displayName = 'proto.Webadmin.CategoryViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoryViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CategoryViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoryViewList.displayName = 'proto.Webadmin.CategoryViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoryViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.CategoryViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.CategoryViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoryViewResponse.displayName = 'proto.Webadmin.CategoryViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoryAddRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CategoryAddRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoryAddRequest.displayName = 'proto.Webadmin.CategoryAddRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoryAddList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CategoryAddList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoryAddList.displayName = 'proto.Webadmin.CategoryAddList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoryAddResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.CategoryAddResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.CategoryAddResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoryAddResponse.displayName = 'proto.Webadmin.CategoryAddResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoryEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CategoryEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoryEditRequest.displayName = 'proto.Webadmin.CategoryEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoryEditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CategoryEditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoryEditList.displayName = 'proto.Webadmin.CategoryEditList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoryEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.CategoryEditResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.CategoryEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoryEditResponse.displayName = 'proto.Webadmin.CategoryEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoryToggleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CategoryToggleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoryToggleRequest.displayName = 'proto.Webadmin.CategoryToggleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoryToggleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CategoryToggleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoryToggleResponse.displayName = 'proto.Webadmin.CategoryToggleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypeViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TypeViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypeViewRequest.displayName = 'proto.Webadmin.TypeViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypeViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TypeViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypeViewList.displayName = 'proto.Webadmin.TypeViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypeViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.TypeViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.TypeViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypeViewResponse.displayName = 'proto.Webadmin.TypeViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypeAddRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TypeAddRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypeAddRequest.displayName = 'proto.Webadmin.TypeAddRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypeAddList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TypeAddList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypeAddList.displayName = 'proto.Webadmin.TypeAddList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypeAddResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.TypeAddResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.TypeAddResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypeAddResponse.displayName = 'proto.Webadmin.TypeAddResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypeEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TypeEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypeEditRequest.displayName = 'proto.Webadmin.TypeEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypeEditList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TypeEditList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypeEditList.displayName = 'proto.Webadmin.TypeEditList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypeEditResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.TypeEditResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.TypeEditResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypeEditResponse.displayName = 'proto.Webadmin.TypeEditResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypeToggleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TypeToggleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypeToggleRequest.displayName = 'proto.Webadmin.TypeToggleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypeToggleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TypeToggleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypeToggleResponse.displayName = 'proto.Webadmin.TypeToggleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TransactionRequest.displayName = 'proto.Webadmin.TransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TransactionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TransactionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TransactionList.displayName = 'proto.Webadmin.TransactionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.TransactionResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.TransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TransactionResponse.displayName = 'proto.Webadmin.TransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateReportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateReportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateReportRequest.displayName = 'proto.Webadmin.GateReportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateReportList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.GateReportList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateReportList.displayName = 'proto.Webadmin.GateReportList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.GateReportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.GateReportResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.GateReportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.GateReportResponse.displayName = 'proto.Webadmin.GateReportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminRolesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminRolesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminRolesRequest.displayName = 'proto.Webadmin.AdminRolesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminRolesList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.AdminRolesList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminRolesList.displayName = 'proto.Webadmin.AdminRolesList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.AdminRolesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.AdminRolesResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.AdminRolesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.AdminRolesResponse.displayName = 'proto.Webadmin.AdminRolesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientRolesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientRolesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientRolesRequest.displayName = 'proto.Webadmin.ClientRolesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientRolesList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientRolesList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientRolesList.displayName = 'proto.Webadmin.ClientRolesList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientRolesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.ClientRolesResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.ClientRolesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientRolesResponse.displayName = 'proto.Webadmin.ClientRolesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CategoriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoriesRequest.displayName = 'proto.Webadmin.CategoriesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoriesList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CategoriesList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoriesList.displayName = 'proto.Webadmin.CategoriesList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CategoriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.CategoriesResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.CategoriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CategoriesResponse.displayName = 'proto.Webadmin.CategoriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TypesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypesRequest.displayName = 'proto.Webadmin.TypesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypesList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TypesList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypesList.displayName = 'proto.Webadmin.TypesList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TypesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.TypesResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.TypesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TypesResponse.displayName = 'proto.Webadmin.TypesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CountriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CountriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CountriesRequest.displayName = 'proto.Webadmin.CountriesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CountriesList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CountriesList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CountriesList.displayName = 'proto.Webadmin.CountriesList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CountriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.CountriesResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.CountriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CountriesResponse.displayName = 'proto.Webadmin.CountriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ProvincesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ProvincesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ProvincesRequest.displayName = 'proto.Webadmin.ProvincesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ProvincesList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ProvincesList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ProvincesList.displayName = 'proto.Webadmin.ProvincesList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ProvincesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.ProvincesResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.ProvincesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ProvincesResponse.displayName = 'proto.Webadmin.ProvincesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CitiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CitiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CitiesRequest.displayName = 'proto.Webadmin.CitiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CitiesList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.CitiesList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CitiesList.displayName = 'proto.Webadmin.CitiesList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.CitiesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.CitiesResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.CitiesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.CitiesResponse.displayName = 'proto.Webadmin.CitiesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientsRequest.displayName = 'proto.Webadmin.ClientsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.ClientsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientsList.displayName = 'proto.Webadmin.ClientsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.ClientsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.ClientsResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.ClientsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.ClientsResponse.displayName = 'proto.Webadmin.ClientsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlacesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PlacesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlacesRequest.displayName = 'proto.Webadmin.PlacesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlacesList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.PlacesList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlacesList.displayName = 'proto.Webadmin.PlacesList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.PlacesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.PlacesResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.PlacesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.PlacesResponse.displayName = 'proto.Webadmin.PlacesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TimeFormatsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TimeFormatsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TimeFormatsRequest.displayName = 'proto.Webadmin.TimeFormatsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TimeFormatsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.TimeFormatsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TimeFormatsList.displayName = 'proto.Webadmin.TimeFormatsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.TimeFormatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.TimeFormatsResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.TimeFormatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.TimeFormatsResponse.displayName = 'proto.Webadmin.TimeFormatsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.LogViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.LogViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.LogViewRequest.displayName = 'proto.Webadmin.LogViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.LogViewList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.LogViewList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.LogViewList.displayName = 'proto.Webadmin.LogViewList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.LogViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.LogViewResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.LogViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.LogViewResponse.displayName = 'proto.Webadmin.LogViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.MonitorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.MonitorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.MonitorRequest.displayName = 'proto.Webadmin.MonitorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.MonitorServiceList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Webadmin.MonitorServiceList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.MonitorServiceList.displayName = 'proto.Webadmin.MonitorServiceList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.MonitorList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.MonitorList.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.MonitorList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.MonitorList.displayName = 'proto.Webadmin.MonitorList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Webadmin.MonitorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Webadmin.MonitorResponse.repeatedFields_, null);
};
goog.inherits(proto.Webadmin.MonitorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Webadmin.MonitorResponse.displayName = 'proto.Webadmin.MonitorResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.LoginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.LoginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.LoginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LoginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteip: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.LoginRequest}
 */
proto.Webadmin.LoginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.LoginRequest;
  return proto.Webadmin.LoginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.LoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.LoginRequest}
 */
proto.Webadmin.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.LoginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.LoginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.LoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LoginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string remoteip = 1;
 * @return {string}
 */
proto.Webadmin.LoginRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LoginRequest} returns this
 */
proto.Webadmin.LoginRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.Webadmin.LoginRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LoginRequest} returns this
 */
proto.Webadmin.LoginRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.Webadmin.LoginRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LoginRequest} returns this
 */
proto.Webadmin.LoginRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.LoginList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.LoginList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.LoginList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LoginList.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    role: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.LoginList}
 */
proto.Webadmin.LoginList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.LoginList;
  return proto.Webadmin.LoginList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.LoginList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.LoginList}
 */
proto.Webadmin.LoginList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.LoginList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.LoginList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.LoginList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LoginList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.LoginList.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LoginList} returns this
 */
proto.Webadmin.LoginList.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string adminid = 2;
 * @return {string}
 */
proto.Webadmin.LoginList.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LoginList} returns this
 */
proto.Webadmin.LoginList.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.Webadmin.LoginList.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LoginList} returns this
 */
proto.Webadmin.LoginList.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.Webadmin.LoginList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LoginList} returns this
 */
proto.Webadmin.LoginList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string role = 5;
 * @return {string}
 */
proto.Webadmin.LoginList.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LoginList} returns this
 */
proto.Webadmin.LoginList.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.LoginResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.LoginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.LoginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.LoginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LoginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.LoginList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.LoginResponse}
 */
proto.Webadmin.LoginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.LoginResponse;
  return proto.Webadmin.LoginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.LoginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.LoginResponse}
 */
proto.Webadmin.LoginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.LoginList;
      reader.readMessage(value,proto.Webadmin.LoginList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.LoginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.LoginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.LoginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LoginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.LoginList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.LoginResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LoginResponse} returns this
 */
proto.Webadmin.LoginResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated LoginList results = 2;
 * @return {!Array<!proto.Webadmin.LoginList>}
 */
proto.Webadmin.LoginResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.LoginList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.LoginList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.LoginList>} value
 * @return {!proto.Webadmin.LoginResponse} returns this
*/
proto.Webadmin.LoginResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.LoginList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.LoginList}
 */
proto.Webadmin.LoginResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.LoginList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.LoginResponse} returns this
 */
proto.Webadmin.LoginResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.LogoutRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.LogoutRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.LogoutRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LogoutRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteip: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sessionid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.LogoutRequest}
 */
proto.Webadmin.LogoutRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.LogoutRequest;
  return proto.Webadmin.LogoutRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.LogoutRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.LogoutRequest}
 */
proto.Webadmin.LogoutRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.LogoutRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.LogoutRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.LogoutRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LogoutRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string remoteip = 1;
 * @return {string}
 */
proto.Webadmin.LogoutRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogoutRequest} returns this
 */
proto.Webadmin.LogoutRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sessionid = 2;
 * @return {string}
 */
proto.Webadmin.LogoutRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogoutRequest} returns this
 */
proto.Webadmin.LogoutRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.LogoutRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogoutRequest} returns this
 */
proto.Webadmin.LogoutRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.LogoutResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.LogoutResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.LogoutResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LogoutResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.LogoutResponse}
 */
proto.Webadmin.LogoutResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.LogoutResponse;
  return proto.Webadmin.LogoutResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.LogoutResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.LogoutResponse}
 */
proto.Webadmin.LogoutResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.LogoutResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.LogoutResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.LogoutResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LogoutResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.LogoutResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogoutResponse} returns this
 */
proto.Webadmin.LogoutResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CheckSessionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CheckSessionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CheckSessionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CheckSessionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CheckSessionRequest}
 */
proto.Webadmin.CheckSessionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CheckSessionRequest;
  return proto.Webadmin.CheckSessionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CheckSessionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CheckSessionRequest}
 */
proto.Webadmin.CheckSessionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CheckSessionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CheckSessionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CheckSessionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CheckSessionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.CheckSessionRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CheckSessionRequest} returns this
 */
proto.Webadmin.CheckSessionRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.CheckSessionRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CheckSessionRequest} returns this
 */
proto.Webadmin.CheckSessionRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.CheckSessionRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CheckSessionRequest} returns this
 */
proto.Webadmin.CheckSessionRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CheckSessionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CheckSessionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CheckSessionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CheckSessionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CheckSessionResponse}
 */
proto.Webadmin.CheckSessionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CheckSessionResponse;
  return proto.Webadmin.CheckSessionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CheckSessionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CheckSessionResponse}
 */
proto.Webadmin.CheckSessionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CheckSessionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CheckSessionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CheckSessionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CheckSessionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.CheckSessionResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CheckSessionResponse} returns this
 */
proto.Webadmin.CheckSessionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    username: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    role: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserViewRequest}
 */
proto.Webadmin.AdminUserViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserViewRequest;
  return proto.Webadmin.AdminUserViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserViewRequest}
 */
proto.Webadmin.AdminUserViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewRequest} returns this
 */
proto.Webadmin.AdminUserViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.AdminUserViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewRequest} returns this
 */
proto.Webadmin.AdminUserViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.AdminUserViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewRequest} returns this
 */
proto.Webadmin.AdminUserViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.Webadmin.AdminUserViewRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewRequest} returns this
 */
proto.Webadmin.AdminUserViewRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.Webadmin.AdminUserViewRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewRequest} returns this
 */
proto.Webadmin.AdminUserViewRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string role = 6;
 * @return {string}
 */
proto.Webadmin.AdminUserViewRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewRequest} returns this
 */
proto.Webadmin.AdminUserViewRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    adminid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, ""),
    role: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lastlogin: jspb.Message.getFieldWithDefault(msg, 7, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserViewList}
 */
proto.Webadmin.AdminUserViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserViewList;
  return proto.Webadmin.AdminUserViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserViewList}
 */
proto.Webadmin.AdminUserViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastlogin(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLastlogin();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string adminid = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserViewList.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewList} returns this
 */
proto.Webadmin.AdminUserViewList.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.Webadmin.AdminUserViewList.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewList} returns this
 */
proto.Webadmin.AdminUserViewList.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.Webadmin.AdminUserViewList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewList} returns this
 */
proto.Webadmin.AdminUserViewList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string phone = 4;
 * @return {string}
 */
proto.Webadmin.AdminUserViewList.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewList} returns this
 */
proto.Webadmin.AdminUserViewList.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string email = 5;
 * @return {string}
 */
proto.Webadmin.AdminUserViewList.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewList} returns this
 */
proto.Webadmin.AdminUserViewList.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string role = 6;
 * @return {string}
 */
proto.Webadmin.AdminUserViewList.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewList} returns this
 */
proto.Webadmin.AdminUserViewList.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string lastlogin = 7;
 * @return {string}
 */
proto.Webadmin.AdminUserViewList.prototype.getLastlogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewList} returns this
 */
proto.Webadmin.AdminUserViewList.prototype.setLastlogin = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool isactive = 8;
 * @return {boolean}
 */
proto.Webadmin.AdminUserViewList.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.AdminUserViewList} returns this
 */
proto.Webadmin.AdminUserViewList.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.AdminUserViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.AdminUserViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserViewResponse}
 */
proto.Webadmin.AdminUserViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserViewResponse;
  return proto.Webadmin.AdminUserViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserViewResponse}
 */
proto.Webadmin.AdminUserViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.AdminUserViewList;
      reader.readMessage(value,proto.Webadmin.AdminUserViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.AdminUserViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserViewResponse} returns this
 */
proto.Webadmin.AdminUserViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated AdminUserViewList results = 2;
 * @return {!Array<!proto.Webadmin.AdminUserViewList>}
 */
proto.Webadmin.AdminUserViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.AdminUserViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.AdminUserViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.AdminUserViewList>} value
 * @return {!proto.Webadmin.AdminUserViewResponse} returns this
*/
proto.Webadmin.AdminUserViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.AdminUserViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.AdminUserViewList}
 */
proto.Webadmin.AdminUserViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.AdminUserViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.AdminUserViewResponse} returns this
 */
proto.Webadmin.AdminUserViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserAddRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserAddRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserAddRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserAddRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    username: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 6, ""),
    email: jspb.Message.getFieldWithDefault(msg, 7, ""),
    role: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserAddRequest}
 */
proto.Webadmin.AdminUserAddRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserAddRequest;
  return proto.Webadmin.AdminUserAddRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserAddRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserAddRequest}
 */
proto.Webadmin.AdminUserAddRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserAddRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserAddRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserAddRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserAddRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserAddRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddRequest} returns this
 */
proto.Webadmin.AdminUserAddRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.AdminUserAddRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddRequest} returns this
 */
proto.Webadmin.AdminUserAddRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.AdminUserAddRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddRequest} returns this
 */
proto.Webadmin.AdminUserAddRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.Webadmin.AdminUserAddRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddRequest} returns this
 */
proto.Webadmin.AdminUserAddRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.Webadmin.AdminUserAddRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddRequest} returns this
 */
proto.Webadmin.AdminUserAddRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string phone = 6;
 * @return {string}
 */
proto.Webadmin.AdminUserAddRequest.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddRequest} returns this
 */
proto.Webadmin.AdminUserAddRequest.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string email = 7;
 * @return {string}
 */
proto.Webadmin.AdminUserAddRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddRequest} returns this
 */
proto.Webadmin.AdminUserAddRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string role = 8;
 * @return {string}
 */
proto.Webadmin.AdminUserAddRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddRequest} returns this
 */
proto.Webadmin.AdminUserAddRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserAddList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserAddList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserAddList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserAddList.toObject = function(includeInstance, msg) {
  var f, obj = {
    adminid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 5, ""),
    email: jspb.Message.getFieldWithDefault(msg, 6, ""),
    role: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserAddList}
 */
proto.Webadmin.AdminUserAddList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserAddList;
  return proto.Webadmin.AdminUserAddList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserAddList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserAddList}
 */
proto.Webadmin.AdminUserAddList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserAddList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserAddList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserAddList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserAddList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string adminid = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserAddList.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddList} returns this
 */
proto.Webadmin.AdminUserAddList.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.Webadmin.AdminUserAddList.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddList} returns this
 */
proto.Webadmin.AdminUserAddList.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.Webadmin.AdminUserAddList.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddList} returns this
 */
proto.Webadmin.AdminUserAddList.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.Webadmin.AdminUserAddList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddList} returns this
 */
proto.Webadmin.AdminUserAddList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string phone = 5;
 * @return {string}
 */
proto.Webadmin.AdminUserAddList.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddList} returns this
 */
proto.Webadmin.AdminUserAddList.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string email = 6;
 * @return {string}
 */
proto.Webadmin.AdminUserAddList.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddList} returns this
 */
proto.Webadmin.AdminUserAddList.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string role = 7;
 * @return {string}
 */
proto.Webadmin.AdminUserAddList.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddList} returns this
 */
proto.Webadmin.AdminUserAddList.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.AdminUserAddResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserAddResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserAddResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserAddResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserAddResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.AdminUserAddList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserAddResponse}
 */
proto.Webadmin.AdminUserAddResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserAddResponse;
  return proto.Webadmin.AdminUserAddResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserAddResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserAddResponse}
 */
proto.Webadmin.AdminUserAddResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.AdminUserAddList;
      reader.readMessage(value,proto.Webadmin.AdminUserAddList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserAddResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserAddResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserAddResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserAddResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.AdminUserAddList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserAddResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserAddResponse} returns this
 */
proto.Webadmin.AdminUserAddResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated AdminUserAddList results = 2;
 * @return {!Array<!proto.Webadmin.AdminUserAddList>}
 */
proto.Webadmin.AdminUserAddResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.AdminUserAddList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.AdminUserAddList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.AdminUserAddList>} value
 * @return {!proto.Webadmin.AdminUserAddResponse} returns this
*/
proto.Webadmin.AdminUserAddResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.AdminUserAddList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.AdminUserAddList}
 */
proto.Webadmin.AdminUserAddResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.AdminUserAddList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.AdminUserAddResponse} returns this
 */
proto.Webadmin.AdminUserAddResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    targetadminid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 6, ""),
    email: jspb.Message.getFieldWithDefault(msg, 7, ""),
    role: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserEditRequest}
 */
proto.Webadmin.AdminUserEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserEditRequest;
  return proto.Webadmin.AdminUserEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserEditRequest}
 */
proto.Webadmin.AdminUserEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetadminid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTargetadminid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserEditRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditRequest} returns this
 */
proto.Webadmin.AdminUserEditRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.AdminUserEditRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditRequest} returns this
 */
proto.Webadmin.AdminUserEditRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.AdminUserEditRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditRequest} returns this
 */
proto.Webadmin.AdminUserEditRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string targetadminid = 4;
 * @return {string}
 */
proto.Webadmin.AdminUserEditRequest.prototype.getTargetadminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditRequest} returns this
 */
proto.Webadmin.AdminUserEditRequest.prototype.setTargetadminid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.Webadmin.AdminUserEditRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditRequest} returns this
 */
proto.Webadmin.AdminUserEditRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string phone = 6;
 * @return {string}
 */
proto.Webadmin.AdminUserEditRequest.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditRequest} returns this
 */
proto.Webadmin.AdminUserEditRequest.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string email = 7;
 * @return {string}
 */
proto.Webadmin.AdminUserEditRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditRequest} returns this
 */
proto.Webadmin.AdminUserEditRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string role = 8;
 * @return {string}
 */
proto.Webadmin.AdminUserEditRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditRequest} returns this
 */
proto.Webadmin.AdminUserEditRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserEditList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserEditList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserEditList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserEditList.toObject = function(includeInstance, msg) {
  var f, obj = {
    adminid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 3, ""),
    email: jspb.Message.getFieldWithDefault(msg, 4, ""),
    role: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserEditList}
 */
proto.Webadmin.AdminUserEditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserEditList;
  return proto.Webadmin.AdminUserEditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserEditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserEditList}
 */
proto.Webadmin.AdminUserEditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserEditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserEditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserEditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserEditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string adminid = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserEditList.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditList} returns this
 */
proto.Webadmin.AdminUserEditList.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.AdminUserEditList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditList} returns this
 */
proto.Webadmin.AdminUserEditList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string phone = 3;
 * @return {string}
 */
proto.Webadmin.AdminUserEditList.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditList} returns this
 */
proto.Webadmin.AdminUserEditList.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.Webadmin.AdminUserEditList.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditList} returns this
 */
proto.Webadmin.AdminUserEditList.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string role = 5;
 * @return {string}
 */
proto.Webadmin.AdminUserEditList.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditList} returns this
 */
proto.Webadmin.AdminUserEditList.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.AdminUserEditResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.AdminUserEditList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserEditResponse}
 */
proto.Webadmin.AdminUserEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserEditResponse;
  return proto.Webadmin.AdminUserEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserEditResponse}
 */
proto.Webadmin.AdminUserEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.AdminUserEditList;
      reader.readMessage(value,proto.Webadmin.AdminUserEditList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.AdminUserEditList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserEditResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserEditResponse} returns this
 */
proto.Webadmin.AdminUserEditResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated AdminUserEditList results = 2;
 * @return {!Array<!proto.Webadmin.AdminUserEditList>}
 */
proto.Webadmin.AdminUserEditResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.AdminUserEditList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.AdminUserEditList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.AdminUserEditList>} value
 * @return {!proto.Webadmin.AdminUserEditResponse} returns this
*/
proto.Webadmin.AdminUserEditResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.AdminUserEditList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.AdminUserEditList}
 */
proto.Webadmin.AdminUserEditResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.AdminUserEditList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.AdminUserEditResponse} returns this
 */
proto.Webadmin.AdminUserEditResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserResetPasswordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserResetPasswordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserResetPasswordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserResetPasswordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    targetadminid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserResetPasswordRequest}
 */
proto.Webadmin.AdminUserResetPasswordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserResetPasswordRequest;
  return proto.Webadmin.AdminUserResetPasswordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserResetPasswordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserResetPasswordRequest}
 */
proto.Webadmin.AdminUserResetPasswordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetadminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserResetPasswordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserResetPasswordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserResetPasswordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserResetPasswordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTargetadminid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserResetPasswordRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserResetPasswordRequest} returns this
 */
proto.Webadmin.AdminUserResetPasswordRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.AdminUserResetPasswordRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserResetPasswordRequest} returns this
 */
proto.Webadmin.AdminUserResetPasswordRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.AdminUserResetPasswordRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserResetPasswordRequest} returns this
 */
proto.Webadmin.AdminUserResetPasswordRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string targetadminid = 4;
 * @return {string}
 */
proto.Webadmin.AdminUserResetPasswordRequest.prototype.getTargetadminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserResetPasswordRequest} returns this
 */
proto.Webadmin.AdminUserResetPasswordRequest.prototype.setTargetadminid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserResetPasswordList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserResetPasswordList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserResetPasswordList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserResetPasswordList.toObject = function(includeInstance, msg) {
  var f, obj = {
    adminid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserResetPasswordList}
 */
proto.Webadmin.AdminUserResetPasswordList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserResetPasswordList;
  return proto.Webadmin.AdminUserResetPasswordList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserResetPasswordList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserResetPasswordList}
 */
proto.Webadmin.AdminUserResetPasswordList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserResetPasswordList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserResetPasswordList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserResetPasswordList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserResetPasswordList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string adminid = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserResetPasswordList.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserResetPasswordList} returns this
 */
proto.Webadmin.AdminUserResetPasswordList.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.Webadmin.AdminUserResetPasswordList.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserResetPasswordList} returns this
 */
proto.Webadmin.AdminUserResetPasswordList.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.AdminUserResetPasswordResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserResetPasswordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserResetPasswordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserResetPasswordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserResetPasswordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.AdminUserResetPasswordList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserResetPasswordResponse}
 */
proto.Webadmin.AdminUserResetPasswordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserResetPasswordResponse;
  return proto.Webadmin.AdminUserResetPasswordResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserResetPasswordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserResetPasswordResponse}
 */
proto.Webadmin.AdminUserResetPasswordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.AdminUserResetPasswordList;
      reader.readMessage(value,proto.Webadmin.AdminUserResetPasswordList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserResetPasswordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserResetPasswordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserResetPasswordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserResetPasswordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.AdminUserResetPasswordList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserResetPasswordResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserResetPasswordResponse} returns this
 */
proto.Webadmin.AdminUserResetPasswordResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated AdminUserResetPasswordList results = 2;
 * @return {!Array<!proto.Webadmin.AdminUserResetPasswordList>}
 */
proto.Webadmin.AdminUserResetPasswordResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.AdminUserResetPasswordList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.AdminUserResetPasswordList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.AdminUserResetPasswordList>} value
 * @return {!proto.Webadmin.AdminUserResetPasswordResponse} returns this
*/
proto.Webadmin.AdminUserResetPasswordResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.AdminUserResetPasswordList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.AdminUserResetPasswordList}
 */
proto.Webadmin.AdminUserResetPasswordResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.AdminUserResetPasswordList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.AdminUserResetPasswordResponse} returns this
 */
proto.Webadmin.AdminUserResetPasswordResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserToggleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserToggleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserToggleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserToggleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    targetadminid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserToggleRequest}
 */
proto.Webadmin.AdminUserToggleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserToggleRequest;
  return proto.Webadmin.AdminUserToggleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserToggleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserToggleRequest}
 */
proto.Webadmin.AdminUserToggleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetadminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserToggleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserToggleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserToggleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserToggleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTargetadminid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserToggleRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserToggleRequest} returns this
 */
proto.Webadmin.AdminUserToggleRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.AdminUserToggleRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserToggleRequest} returns this
 */
proto.Webadmin.AdminUserToggleRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.AdminUserToggleRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserToggleRequest} returns this
 */
proto.Webadmin.AdminUserToggleRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string targetadminid = 4;
 * @return {string}
 */
proto.Webadmin.AdminUserToggleRequest.prototype.getTargetadminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserToggleRequest} returns this
 */
proto.Webadmin.AdminUserToggleRequest.prototype.setTargetadminid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserToggleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserToggleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserToggleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserToggleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserToggleResponse}
 */
proto.Webadmin.AdminUserToggleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserToggleResponse;
  return proto.Webadmin.AdminUserToggleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserToggleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserToggleResponse}
 */
proto.Webadmin.AdminUserToggleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserToggleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserToggleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserToggleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserToggleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserToggleResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserToggleResponse} returns this
 */
proto.Webadmin.AdminUserToggleResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    targetadminid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserDeleteRequest}
 */
proto.Webadmin.AdminUserDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserDeleteRequest;
  return proto.Webadmin.AdminUserDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserDeleteRequest}
 */
proto.Webadmin.AdminUserDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetadminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTargetadminid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserDeleteRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserDeleteRequest} returns this
 */
proto.Webadmin.AdminUserDeleteRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.AdminUserDeleteRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserDeleteRequest} returns this
 */
proto.Webadmin.AdminUserDeleteRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.AdminUserDeleteRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserDeleteRequest} returns this
 */
proto.Webadmin.AdminUserDeleteRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string targetadminid = 4;
 * @return {string}
 */
proto.Webadmin.AdminUserDeleteRequest.prototype.getTargetadminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserDeleteRequest} returns this
 */
proto.Webadmin.AdminUserDeleteRequest.prototype.setTargetadminid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminUserDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminUserDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminUserDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminUserDeleteResponse}
 */
proto.Webadmin.AdminUserDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminUserDeleteResponse;
  return proto.Webadmin.AdminUserDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminUserDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminUserDeleteResponse}
 */
proto.Webadmin.AdminUserDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminUserDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminUserDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminUserDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminUserDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.AdminUserDeleteResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminUserDeleteResponse} returns this
 */
proto.Webadmin.AdminUserDeleteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    username: jspb.Message.getFieldWithDefault(msg, 5, ""),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    role: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserViewRequest}
 */
proto.Webadmin.ClientUserViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserViewRequest;
  return proto.Webadmin.ClientUserViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserViewRequest}
 */
proto.Webadmin.ClientUserViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewRequest} returns this
 */
proto.Webadmin.ClientUserViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientUserViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewRequest} returns this
 */
proto.Webadmin.ClientUserViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientUserViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewRequest} returns this
 */
proto.Webadmin.ClientUserViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.ClientUserViewRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewRequest} returns this
 */
proto.Webadmin.ClientUserViewRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string username = 5;
 * @return {string}
 */
proto.Webadmin.ClientUserViewRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewRequest} returns this
 */
proto.Webadmin.ClientUserViewRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.Webadmin.ClientUserViewRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewRequest} returns this
 */
proto.Webadmin.ClientUserViewRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string role = 7;
 * @return {string}
 */
proto.Webadmin.ClientUserViewRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewRequest} returns this
 */
proto.Webadmin.ClientUserViewRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 5, ""),
    email: jspb.Message.getFieldWithDefault(msg, 6, ""),
    role: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lastlogin: jspb.Message.getFieldWithDefault(msg, 8, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserViewList}
 */
proto.Webadmin.ClientUserViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserViewList;
  return proto.Webadmin.ClientUserViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserViewList}
 */
proto.Webadmin.ClientUserViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastlogin(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLastlogin();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserViewList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewList} returns this
 */
proto.Webadmin.ClientUserViewList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userid = 2;
 * @return {string}
 */
proto.Webadmin.ClientUserViewList.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewList} returns this
 */
proto.Webadmin.ClientUserViewList.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.Webadmin.ClientUserViewList.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewList} returns this
 */
proto.Webadmin.ClientUserViewList.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.Webadmin.ClientUserViewList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewList} returns this
 */
proto.Webadmin.ClientUserViewList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string phone = 5;
 * @return {string}
 */
proto.Webadmin.ClientUserViewList.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewList} returns this
 */
proto.Webadmin.ClientUserViewList.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string email = 6;
 * @return {string}
 */
proto.Webadmin.ClientUserViewList.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewList} returns this
 */
proto.Webadmin.ClientUserViewList.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string role = 7;
 * @return {string}
 */
proto.Webadmin.ClientUserViewList.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewList} returns this
 */
proto.Webadmin.ClientUserViewList.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string lastlogin = 8;
 * @return {string}
 */
proto.Webadmin.ClientUserViewList.prototype.getLastlogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewList} returns this
 */
proto.Webadmin.ClientUserViewList.prototype.setLastlogin = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool isactive = 9;
 * @return {boolean}
 */
proto.Webadmin.ClientUserViewList.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.ClientUserViewList} returns this
 */
proto.Webadmin.ClientUserViewList.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.ClientUserViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.ClientUserViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserViewResponse}
 */
proto.Webadmin.ClientUserViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserViewResponse;
  return proto.Webadmin.ClientUserViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserViewResponse}
 */
proto.Webadmin.ClientUserViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.ClientUserViewList;
      reader.readMessage(value,proto.Webadmin.ClientUserViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.ClientUserViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserViewResponse} returns this
 */
proto.Webadmin.ClientUserViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ClientUserViewList results = 2;
 * @return {!Array<!proto.Webadmin.ClientUserViewList>}
 */
proto.Webadmin.ClientUserViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.ClientUserViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.ClientUserViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.ClientUserViewList>} value
 * @return {!proto.Webadmin.ClientUserViewResponse} returns this
*/
proto.Webadmin.ClientUserViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.ClientUserViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.ClientUserViewList}
 */
proto.Webadmin.ClientUserViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.ClientUserViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.ClientUserViewResponse} returns this
 */
proto.Webadmin.ClientUserViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserAddRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserAddRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserAddRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserAddRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    username: jspb.Message.getFieldWithDefault(msg, 5, ""),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 7, ""),
    email: jspb.Message.getFieldWithDefault(msg, 8, ""),
    role: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserAddRequest}
 */
proto.Webadmin.ClientUserAddRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserAddRequest;
  return proto.Webadmin.ClientUserAddRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserAddRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserAddRequest}
 */
proto.Webadmin.ClientUserAddRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserAddRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserAddRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserAddRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserAddRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserAddRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddRequest} returns this
 */
proto.Webadmin.ClientUserAddRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientUserAddRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddRequest} returns this
 */
proto.Webadmin.ClientUserAddRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientUserAddRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddRequest} returns this
 */
proto.Webadmin.ClientUserAddRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.ClientUserAddRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddRequest} returns this
 */
proto.Webadmin.ClientUserAddRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string username = 5;
 * @return {string}
 */
proto.Webadmin.ClientUserAddRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddRequest} returns this
 */
proto.Webadmin.ClientUserAddRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.Webadmin.ClientUserAddRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddRequest} returns this
 */
proto.Webadmin.ClientUserAddRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string phone = 7;
 * @return {string}
 */
proto.Webadmin.ClientUserAddRequest.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddRequest} returns this
 */
proto.Webadmin.ClientUserAddRequest.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string email = 8;
 * @return {string}
 */
proto.Webadmin.ClientUserAddRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddRequest} returns this
 */
proto.Webadmin.ClientUserAddRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string role = 9;
 * @return {string}
 */
proto.Webadmin.ClientUserAddRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddRequest} returns this
 */
proto.Webadmin.ClientUserAddRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserAddList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserAddList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserAddList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserAddList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    password: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 6, ""),
    email: jspb.Message.getFieldWithDefault(msg, 7, ""),
    role: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserAddList}
 */
proto.Webadmin.ClientUserAddList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserAddList;
  return proto.Webadmin.ClientUserAddList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserAddList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserAddList}
 */
proto.Webadmin.ClientUserAddList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserAddList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserAddList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserAddList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserAddList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserAddList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddList} returns this
 */
proto.Webadmin.ClientUserAddList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userid = 2;
 * @return {string}
 */
proto.Webadmin.ClientUserAddList.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddList} returns this
 */
proto.Webadmin.ClientUserAddList.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.Webadmin.ClientUserAddList.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddList} returns this
 */
proto.Webadmin.ClientUserAddList.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.Webadmin.ClientUserAddList.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddList} returns this
 */
proto.Webadmin.ClientUserAddList.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.Webadmin.ClientUserAddList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddList} returns this
 */
proto.Webadmin.ClientUserAddList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string phone = 6;
 * @return {string}
 */
proto.Webadmin.ClientUserAddList.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddList} returns this
 */
proto.Webadmin.ClientUserAddList.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string email = 7;
 * @return {string}
 */
proto.Webadmin.ClientUserAddList.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddList} returns this
 */
proto.Webadmin.ClientUserAddList.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string role = 8;
 * @return {string}
 */
proto.Webadmin.ClientUserAddList.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddList} returns this
 */
proto.Webadmin.ClientUserAddList.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.ClientUserAddResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserAddResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserAddResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserAddResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserAddResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.ClientUserAddList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserAddResponse}
 */
proto.Webadmin.ClientUserAddResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserAddResponse;
  return proto.Webadmin.ClientUserAddResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserAddResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserAddResponse}
 */
proto.Webadmin.ClientUserAddResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.ClientUserAddList;
      reader.readMessage(value,proto.Webadmin.ClientUserAddList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserAddResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserAddResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserAddResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserAddResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.ClientUserAddList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserAddResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserAddResponse} returns this
 */
proto.Webadmin.ClientUserAddResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ClientUserAddList results = 2;
 * @return {!Array<!proto.Webadmin.ClientUserAddList>}
 */
proto.Webadmin.ClientUserAddResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.ClientUserAddList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.ClientUserAddList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.ClientUserAddList>} value
 * @return {!proto.Webadmin.ClientUserAddResponse} returns this
*/
proto.Webadmin.ClientUserAddResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.ClientUserAddList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.ClientUserAddList}
 */
proto.Webadmin.ClientUserAddResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.ClientUserAddList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.ClientUserAddResponse} returns this
 */
proto.Webadmin.ClientUserAddResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 7, ""),
    email: jspb.Message.getFieldWithDefault(msg, 8, ""),
    role: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserEditRequest}
 */
proto.Webadmin.ClientUserEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserEditRequest;
  return proto.Webadmin.ClientUserEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserEditRequest}
 */
proto.Webadmin.ClientUserEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserEditRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditRequest} returns this
 */
proto.Webadmin.ClientUserEditRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientUserEditRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditRequest} returns this
 */
proto.Webadmin.ClientUserEditRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientUserEditRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditRequest} returns this
 */
proto.Webadmin.ClientUserEditRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.ClientUserEditRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditRequest} returns this
 */
proto.Webadmin.ClientUserEditRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string userid = 5;
 * @return {string}
 */
proto.Webadmin.ClientUserEditRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditRequest} returns this
 */
proto.Webadmin.ClientUserEditRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.Webadmin.ClientUserEditRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditRequest} returns this
 */
proto.Webadmin.ClientUserEditRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string phone = 7;
 * @return {string}
 */
proto.Webadmin.ClientUserEditRequest.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditRequest} returns this
 */
proto.Webadmin.ClientUserEditRequest.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string email = 8;
 * @return {string}
 */
proto.Webadmin.ClientUserEditRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditRequest} returns this
 */
proto.Webadmin.ClientUserEditRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string role = 9;
 * @return {string}
 */
proto.Webadmin.ClientUserEditRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditRequest} returns this
 */
proto.Webadmin.ClientUserEditRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserEditList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserEditList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserEditList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserEditList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, ""),
    role: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserEditList}
 */
proto.Webadmin.ClientUserEditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserEditList;
  return proto.Webadmin.ClientUserEditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserEditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserEditList}
 */
proto.Webadmin.ClientUserEditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserEditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserEditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserEditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserEditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserEditList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditList} returns this
 */
proto.Webadmin.ClientUserEditList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userid = 2;
 * @return {string}
 */
proto.Webadmin.ClientUserEditList.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditList} returns this
 */
proto.Webadmin.ClientUserEditList.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.Webadmin.ClientUserEditList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditList} returns this
 */
proto.Webadmin.ClientUserEditList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string phone = 4;
 * @return {string}
 */
proto.Webadmin.ClientUserEditList.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditList} returns this
 */
proto.Webadmin.ClientUserEditList.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string email = 5;
 * @return {string}
 */
proto.Webadmin.ClientUserEditList.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditList} returns this
 */
proto.Webadmin.ClientUserEditList.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string role = 6;
 * @return {string}
 */
proto.Webadmin.ClientUserEditList.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditList} returns this
 */
proto.Webadmin.ClientUserEditList.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.ClientUserEditResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.ClientUserEditList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserEditResponse}
 */
proto.Webadmin.ClientUserEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserEditResponse;
  return proto.Webadmin.ClientUserEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserEditResponse}
 */
proto.Webadmin.ClientUserEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.ClientUserEditList;
      reader.readMessage(value,proto.Webadmin.ClientUserEditList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.ClientUserEditList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserEditResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserEditResponse} returns this
 */
proto.Webadmin.ClientUserEditResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ClientUserEditList results = 2;
 * @return {!Array<!proto.Webadmin.ClientUserEditList>}
 */
proto.Webadmin.ClientUserEditResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.ClientUserEditList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.ClientUserEditList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.ClientUserEditList>} value
 * @return {!proto.Webadmin.ClientUserEditResponse} returns this
*/
proto.Webadmin.ClientUserEditResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.ClientUserEditList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.ClientUserEditList}
 */
proto.Webadmin.ClientUserEditResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.ClientUserEditList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.ClientUserEditResponse} returns this
 */
proto.Webadmin.ClientUserEditResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserResetPasswordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserResetPasswordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserResetPasswordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserResetPasswordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserResetPasswordRequest}
 */
proto.Webadmin.ClientUserResetPasswordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserResetPasswordRequest;
  return proto.Webadmin.ClientUserResetPasswordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserResetPasswordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserResetPasswordRequest}
 */
proto.Webadmin.ClientUserResetPasswordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserResetPasswordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserResetPasswordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserResetPasswordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserResetPasswordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserResetPasswordRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserResetPasswordRequest} returns this
 */
proto.Webadmin.ClientUserResetPasswordRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientUserResetPasswordRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserResetPasswordRequest} returns this
 */
proto.Webadmin.ClientUserResetPasswordRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientUserResetPasswordRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserResetPasswordRequest} returns this
 */
proto.Webadmin.ClientUserResetPasswordRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.ClientUserResetPasswordRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserResetPasswordRequest} returns this
 */
proto.Webadmin.ClientUserResetPasswordRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string userid = 5;
 * @return {string}
 */
proto.Webadmin.ClientUserResetPasswordRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserResetPasswordRequest} returns this
 */
proto.Webadmin.ClientUserResetPasswordRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserResetPasswordList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserResetPasswordList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserResetPasswordList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserResetPasswordList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserResetPasswordList}
 */
proto.Webadmin.ClientUserResetPasswordList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserResetPasswordList;
  return proto.Webadmin.ClientUserResetPasswordList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserResetPasswordList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserResetPasswordList}
 */
proto.Webadmin.ClientUserResetPasswordList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserResetPasswordList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserResetPasswordList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserResetPasswordList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserResetPasswordList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserResetPasswordList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserResetPasswordList} returns this
 */
proto.Webadmin.ClientUserResetPasswordList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userid = 2;
 * @return {string}
 */
proto.Webadmin.ClientUserResetPasswordList.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserResetPasswordList} returns this
 */
proto.Webadmin.ClientUserResetPasswordList.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.Webadmin.ClientUserResetPasswordList.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserResetPasswordList} returns this
 */
proto.Webadmin.ClientUserResetPasswordList.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.ClientUserResetPasswordResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserResetPasswordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserResetPasswordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserResetPasswordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserResetPasswordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.ClientUserResetPasswordList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserResetPasswordResponse}
 */
proto.Webadmin.ClientUserResetPasswordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserResetPasswordResponse;
  return proto.Webadmin.ClientUserResetPasswordResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserResetPasswordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserResetPasswordResponse}
 */
proto.Webadmin.ClientUserResetPasswordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.ClientUserResetPasswordList;
      reader.readMessage(value,proto.Webadmin.ClientUserResetPasswordList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserResetPasswordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserResetPasswordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserResetPasswordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserResetPasswordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.ClientUserResetPasswordList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserResetPasswordResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserResetPasswordResponse} returns this
 */
proto.Webadmin.ClientUserResetPasswordResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ClientUserResetPasswordList results = 2;
 * @return {!Array<!proto.Webadmin.ClientUserResetPasswordList>}
 */
proto.Webadmin.ClientUserResetPasswordResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.ClientUserResetPasswordList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.ClientUserResetPasswordList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.ClientUserResetPasswordList>} value
 * @return {!proto.Webadmin.ClientUserResetPasswordResponse} returns this
*/
proto.Webadmin.ClientUserResetPasswordResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.ClientUserResetPasswordList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.ClientUserResetPasswordList}
 */
proto.Webadmin.ClientUserResetPasswordResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.ClientUserResetPasswordList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.ClientUserResetPasswordResponse} returns this
 */
proto.Webadmin.ClientUserResetPasswordResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserToggleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserToggleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserToggleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserToggleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserToggleRequest}
 */
proto.Webadmin.ClientUserToggleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserToggleRequest;
  return proto.Webadmin.ClientUserToggleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserToggleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserToggleRequest}
 */
proto.Webadmin.ClientUserToggleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserToggleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserToggleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserToggleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserToggleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserToggleRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserToggleRequest} returns this
 */
proto.Webadmin.ClientUserToggleRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientUserToggleRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserToggleRequest} returns this
 */
proto.Webadmin.ClientUserToggleRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientUserToggleRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserToggleRequest} returns this
 */
proto.Webadmin.ClientUserToggleRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.ClientUserToggleRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserToggleRequest} returns this
 */
proto.Webadmin.ClientUserToggleRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string userid = 5;
 * @return {string}
 */
proto.Webadmin.ClientUserToggleRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserToggleRequest} returns this
 */
proto.Webadmin.ClientUserToggleRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserToggleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserToggleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserToggleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserToggleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserToggleResponse}
 */
proto.Webadmin.ClientUserToggleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserToggleResponse;
  return proto.Webadmin.ClientUserToggleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserToggleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserToggleResponse}
 */
proto.Webadmin.ClientUserToggleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserToggleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserToggleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserToggleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserToggleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserToggleResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserToggleResponse} returns this
 */
proto.Webadmin.ClientUserToggleResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserDeleteRequest}
 */
proto.Webadmin.ClientUserDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserDeleteRequest;
  return proto.Webadmin.ClientUserDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserDeleteRequest}
 */
proto.Webadmin.ClientUserDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserDeleteRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserDeleteRequest} returns this
 */
proto.Webadmin.ClientUserDeleteRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientUserDeleteRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserDeleteRequest} returns this
 */
proto.Webadmin.ClientUserDeleteRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientUserDeleteRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserDeleteRequest} returns this
 */
proto.Webadmin.ClientUserDeleteRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.ClientUserDeleteRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserDeleteRequest} returns this
 */
proto.Webadmin.ClientUserDeleteRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string userid = 5;
 * @return {string}
 */
proto.Webadmin.ClientUserDeleteRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserDeleteRequest} returns this
 */
proto.Webadmin.ClientUserDeleteRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientUserDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientUserDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientUserDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientUserDeleteResponse}
 */
proto.Webadmin.ClientUserDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientUserDeleteResponse;
  return proto.Webadmin.ClientUserDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientUserDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientUserDeleteResponse}
 */
proto.Webadmin.ClientUserDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientUserDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientUserDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientUserDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientUserDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientUserDeleteResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientUserDeleteResponse} returns this
 */
proto.Webadmin.ClientUserDeleteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    city: jspb.Message.getFieldWithDefault(msg, 6, ""),
    province: jspb.Message.getFieldWithDefault(msg, 7, ""),
    country: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientViewRequest}
 */
proto.Webadmin.ClientViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientViewRequest;
  return proto.Webadmin.ClientViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientViewRequest}
 */
proto.Webadmin.ClientViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewRequest} returns this
 */
proto.Webadmin.ClientViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewRequest} returns this
 */
proto.Webadmin.ClientViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewRequest} returns this
 */
proto.Webadmin.ClientViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.ClientViewRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewRequest} returns this
 */
proto.Webadmin.ClientViewRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.Webadmin.ClientViewRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewRequest} returns this
 */
proto.Webadmin.ClientViewRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string city = 6;
 * @return {string}
 */
proto.Webadmin.ClientViewRequest.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewRequest} returns this
 */
proto.Webadmin.ClientViewRequest.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string province = 7;
 * @return {string}
 */
proto.Webadmin.ClientViewRequest.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewRequest} returns this
 */
proto.Webadmin.ClientViewRequest.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string country = 8;
 * @return {string}
 */
proto.Webadmin.ClientViewRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewRequest} returns this
 */
proto.Webadmin.ClientViewRequest.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    city: jspb.Message.getFieldWithDefault(msg, 4, ""),
    province: jspb.Message.getFieldWithDefault(msg, 5, ""),
    zipcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    country: jspb.Message.getFieldWithDefault(msg, 7, ""),
    totalplace: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientViewList}
 */
proto.Webadmin.ClientViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientViewList;
  return proto.Webadmin.ClientViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientViewList}
 */
proto.Webadmin.ClientViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalplace(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getZipcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTotalplace();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.ClientViewList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewList} returns this
 */
proto.Webadmin.ClientViewList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.ClientViewList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewList} returns this
 */
proto.Webadmin.ClientViewList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.Webadmin.ClientViewList.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewList} returns this
 */
proto.Webadmin.ClientViewList.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string city = 4;
 * @return {string}
 */
proto.Webadmin.ClientViewList.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewList} returns this
 */
proto.Webadmin.ClientViewList.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string province = 5;
 * @return {string}
 */
proto.Webadmin.ClientViewList.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewList} returns this
 */
proto.Webadmin.ClientViewList.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string zipcode = 6;
 * @return {string}
 */
proto.Webadmin.ClientViewList.prototype.getZipcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewList} returns this
 */
proto.Webadmin.ClientViewList.prototype.setZipcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string country = 7;
 * @return {string}
 */
proto.Webadmin.ClientViewList.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewList} returns this
 */
proto.Webadmin.ClientViewList.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double totalplace = 8;
 * @return {number}
 */
proto.Webadmin.ClientViewList.prototype.getTotalplace = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.ClientViewList} returns this
 */
proto.Webadmin.ClientViewList.prototype.setTotalplace = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional bool isactive = 9;
 * @return {boolean}
 */
proto.Webadmin.ClientViewList.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.ClientViewList} returns this
 */
proto.Webadmin.ClientViewList.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.ClientViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.ClientViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientViewResponse}
 */
proto.Webadmin.ClientViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientViewResponse;
  return proto.Webadmin.ClientViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientViewResponse}
 */
proto.Webadmin.ClientViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.ClientViewList;
      reader.readMessage(value,proto.Webadmin.ClientViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.ClientViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientViewResponse} returns this
 */
proto.Webadmin.ClientViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ClientViewList results = 2;
 * @return {!Array<!proto.Webadmin.ClientViewList>}
 */
proto.Webadmin.ClientViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.ClientViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.ClientViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.ClientViewList>} value
 * @return {!proto.Webadmin.ClientViewResponse} returns this
*/
proto.Webadmin.ClientViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.ClientViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.ClientViewList}
 */
proto.Webadmin.ClientViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.ClientViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.ClientViewResponse} returns this
 */
proto.Webadmin.ClientViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientAddRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientAddRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientAddRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientAddRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    address: jspb.Message.getFieldWithDefault(msg, 5, ""),
    city: jspb.Message.getFieldWithDefault(msg, 6, ""),
    province: jspb.Message.getFieldWithDefault(msg, 7, ""),
    zipcode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    country: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientAddRequest}
 */
proto.Webadmin.ClientAddRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientAddRequest;
  return proto.Webadmin.ClientAddRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientAddRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientAddRequest}
 */
proto.Webadmin.ClientAddRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipcode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientAddRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientAddRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientAddRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientAddRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getZipcode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientAddRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddRequest} returns this
 */
proto.Webadmin.ClientAddRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientAddRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddRequest} returns this
 */
proto.Webadmin.ClientAddRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientAddRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddRequest} returns this
 */
proto.Webadmin.ClientAddRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.Webadmin.ClientAddRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddRequest} returns this
 */
proto.Webadmin.ClientAddRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string address = 5;
 * @return {string}
 */
proto.Webadmin.ClientAddRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddRequest} returns this
 */
proto.Webadmin.ClientAddRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string city = 6;
 * @return {string}
 */
proto.Webadmin.ClientAddRequest.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddRequest} returns this
 */
proto.Webadmin.ClientAddRequest.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string province = 7;
 * @return {string}
 */
proto.Webadmin.ClientAddRequest.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddRequest} returns this
 */
proto.Webadmin.ClientAddRequest.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string zipcode = 8;
 * @return {string}
 */
proto.Webadmin.ClientAddRequest.prototype.getZipcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddRequest} returns this
 */
proto.Webadmin.ClientAddRequest.prototype.setZipcode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string country = 9;
 * @return {string}
 */
proto.Webadmin.ClientAddRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddRequest} returns this
 */
proto.Webadmin.ClientAddRequest.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientAddList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientAddList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientAddList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientAddList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    city: jspb.Message.getFieldWithDefault(msg, 4, ""),
    province: jspb.Message.getFieldWithDefault(msg, 5, ""),
    zipcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    country: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientAddList}
 */
proto.Webadmin.ClientAddList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientAddList;
  return proto.Webadmin.ClientAddList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientAddList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientAddList}
 */
proto.Webadmin.ClientAddList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientAddList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientAddList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientAddList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientAddList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getZipcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.ClientAddList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddList} returns this
 */
proto.Webadmin.ClientAddList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.ClientAddList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddList} returns this
 */
proto.Webadmin.ClientAddList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.Webadmin.ClientAddList.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddList} returns this
 */
proto.Webadmin.ClientAddList.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string city = 4;
 * @return {string}
 */
proto.Webadmin.ClientAddList.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddList} returns this
 */
proto.Webadmin.ClientAddList.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string province = 5;
 * @return {string}
 */
proto.Webadmin.ClientAddList.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddList} returns this
 */
proto.Webadmin.ClientAddList.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string zipcode = 6;
 * @return {string}
 */
proto.Webadmin.ClientAddList.prototype.getZipcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddList} returns this
 */
proto.Webadmin.ClientAddList.prototype.setZipcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string country = 7;
 * @return {string}
 */
proto.Webadmin.ClientAddList.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddList} returns this
 */
proto.Webadmin.ClientAddList.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.ClientAddResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientAddResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientAddResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientAddResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientAddResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.ClientAddList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientAddResponse}
 */
proto.Webadmin.ClientAddResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientAddResponse;
  return proto.Webadmin.ClientAddResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientAddResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientAddResponse}
 */
proto.Webadmin.ClientAddResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.ClientAddList;
      reader.readMessage(value,proto.Webadmin.ClientAddList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientAddResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientAddResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientAddResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientAddResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.ClientAddList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientAddResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientAddResponse} returns this
 */
proto.Webadmin.ClientAddResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ClientAddList results = 2;
 * @return {!Array<!proto.Webadmin.ClientAddList>}
 */
proto.Webadmin.ClientAddResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.ClientAddList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.ClientAddList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.ClientAddList>} value
 * @return {!proto.Webadmin.ClientAddResponse} returns this
*/
proto.Webadmin.ClientAddResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.ClientAddList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.ClientAddList}
 */
proto.Webadmin.ClientAddResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.ClientAddList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.ClientAddResponse} returns this
 */
proto.Webadmin.ClientAddResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    address: jspb.Message.getFieldWithDefault(msg, 6, ""),
    city: jspb.Message.getFieldWithDefault(msg, 7, ""),
    province: jspb.Message.getFieldWithDefault(msg, 8, ""),
    zipcode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    country: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientEditRequest}
 */
proto.Webadmin.ClientEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientEditRequest;
  return proto.Webadmin.ClientEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientEditRequest}
 */
proto.Webadmin.ClientEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipcode(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getZipcode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientEditRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditRequest} returns this
 */
proto.Webadmin.ClientEditRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientEditRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditRequest} returns this
 */
proto.Webadmin.ClientEditRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientEditRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditRequest} returns this
 */
proto.Webadmin.ClientEditRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.ClientEditRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditRequest} returns this
 */
proto.Webadmin.ClientEditRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.Webadmin.ClientEditRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditRequest} returns this
 */
proto.Webadmin.ClientEditRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string address = 6;
 * @return {string}
 */
proto.Webadmin.ClientEditRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditRequest} returns this
 */
proto.Webadmin.ClientEditRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string city = 7;
 * @return {string}
 */
proto.Webadmin.ClientEditRequest.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditRequest} returns this
 */
proto.Webadmin.ClientEditRequest.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string province = 8;
 * @return {string}
 */
proto.Webadmin.ClientEditRequest.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditRequest} returns this
 */
proto.Webadmin.ClientEditRequest.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string zipcode = 9;
 * @return {string}
 */
proto.Webadmin.ClientEditRequest.prototype.getZipcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditRequest} returns this
 */
proto.Webadmin.ClientEditRequest.prototype.setZipcode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string country = 10;
 * @return {string}
 */
proto.Webadmin.ClientEditRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditRequest} returns this
 */
proto.Webadmin.ClientEditRequest.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientEditList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientEditList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientEditList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientEditList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    city: jspb.Message.getFieldWithDefault(msg, 4, ""),
    province: jspb.Message.getFieldWithDefault(msg, 5, ""),
    zipcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    country: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientEditList}
 */
proto.Webadmin.ClientEditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientEditList;
  return proto.Webadmin.ClientEditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientEditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientEditList}
 */
proto.Webadmin.ClientEditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientEditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientEditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientEditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientEditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getZipcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.ClientEditList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditList} returns this
 */
proto.Webadmin.ClientEditList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.ClientEditList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditList} returns this
 */
proto.Webadmin.ClientEditList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.Webadmin.ClientEditList.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditList} returns this
 */
proto.Webadmin.ClientEditList.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string city = 4;
 * @return {string}
 */
proto.Webadmin.ClientEditList.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditList} returns this
 */
proto.Webadmin.ClientEditList.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string province = 5;
 * @return {string}
 */
proto.Webadmin.ClientEditList.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditList} returns this
 */
proto.Webadmin.ClientEditList.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string zipcode = 6;
 * @return {string}
 */
proto.Webadmin.ClientEditList.prototype.getZipcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditList} returns this
 */
proto.Webadmin.ClientEditList.prototype.setZipcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string country = 7;
 * @return {string}
 */
proto.Webadmin.ClientEditList.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditList} returns this
 */
proto.Webadmin.ClientEditList.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.ClientEditResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.ClientEditList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientEditResponse}
 */
proto.Webadmin.ClientEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientEditResponse;
  return proto.Webadmin.ClientEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientEditResponse}
 */
proto.Webadmin.ClientEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.ClientEditList;
      reader.readMessage(value,proto.Webadmin.ClientEditList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.ClientEditList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientEditResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientEditResponse} returns this
 */
proto.Webadmin.ClientEditResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ClientEditList results = 2;
 * @return {!Array<!proto.Webadmin.ClientEditList>}
 */
proto.Webadmin.ClientEditResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.ClientEditList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.ClientEditList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.ClientEditList>} value
 * @return {!proto.Webadmin.ClientEditResponse} returns this
*/
proto.Webadmin.ClientEditResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.ClientEditList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.ClientEditList}
 */
proto.Webadmin.ClientEditResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.ClientEditList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.ClientEditResponse} returns this
 */
proto.Webadmin.ClientEditResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientToggleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientToggleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientToggleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientToggleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientToggleRequest}
 */
proto.Webadmin.ClientToggleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientToggleRequest;
  return proto.Webadmin.ClientToggleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientToggleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientToggleRequest}
 */
proto.Webadmin.ClientToggleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientToggleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientToggleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientToggleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientToggleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientToggleRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientToggleRequest} returns this
 */
proto.Webadmin.ClientToggleRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientToggleRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientToggleRequest} returns this
 */
proto.Webadmin.ClientToggleRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientToggleRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientToggleRequest} returns this
 */
proto.Webadmin.ClientToggleRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.ClientToggleRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientToggleRequest} returns this
 */
proto.Webadmin.ClientToggleRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientToggleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientToggleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientToggleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientToggleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientToggleResponse}
 */
proto.Webadmin.ClientToggleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientToggleResponse;
  return proto.Webadmin.ClientToggleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientToggleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientToggleResponse}
 */
proto.Webadmin.ClientToggleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientToggleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientToggleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientToggleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientToggleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientToggleResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientToggleResponse} returns this
 */
proto.Webadmin.ClientToggleResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientDeleteRequest}
 */
proto.Webadmin.ClientDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientDeleteRequest;
  return proto.Webadmin.ClientDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientDeleteRequest}
 */
proto.Webadmin.ClientDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientDeleteRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientDeleteRequest} returns this
 */
proto.Webadmin.ClientDeleteRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientDeleteRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientDeleteRequest} returns this
 */
proto.Webadmin.ClientDeleteRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientDeleteRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientDeleteRequest} returns this
 */
proto.Webadmin.ClientDeleteRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.ClientDeleteRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientDeleteRequest} returns this
 */
proto.Webadmin.ClientDeleteRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientDeleteResponse}
 */
proto.Webadmin.ClientDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientDeleteResponse;
  return proto.Webadmin.ClientDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientDeleteResponse}
 */
proto.Webadmin.ClientDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientDeleteResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientDeleteResponse} returns this
 */
proto.Webadmin.ClientDeleteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    city: jspb.Message.getFieldWithDefault(msg, 7, ""),
    province: jspb.Message.getFieldWithDefault(msg, 8, ""),
    country: jspb.Message.getFieldWithDefault(msg, 9, ""),
    type: jspb.Message.getFieldWithDefault(msg, 10, ""),
    category: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceViewRequest}
 */
proto.Webadmin.PlaceViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceViewRequest;
  return proto.Webadmin.PlaceViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceViewRequest}
 */
proto.Webadmin.PlaceViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PlaceViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewRequest} returns this
 */
proto.Webadmin.PlaceViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PlaceViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewRequest} returns this
 */
proto.Webadmin.PlaceViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PlaceViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewRequest} returns this
 */
proto.Webadmin.PlaceViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.PlaceViewRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewRequest} returns this
 */
proto.Webadmin.PlaceViewRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PlaceViewRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewRequest} returns this
 */
proto.Webadmin.PlaceViewRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.Webadmin.PlaceViewRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewRequest} returns this
 */
proto.Webadmin.PlaceViewRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string city = 7;
 * @return {string}
 */
proto.Webadmin.PlaceViewRequest.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewRequest} returns this
 */
proto.Webadmin.PlaceViewRequest.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string province = 8;
 * @return {string}
 */
proto.Webadmin.PlaceViewRequest.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewRequest} returns this
 */
proto.Webadmin.PlaceViewRequest.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string country = 9;
 * @return {string}
 */
proto.Webadmin.PlaceViewRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewRequest} returns this
 */
proto.Webadmin.PlaceViewRequest.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string type = 10;
 * @return {string}
 */
proto.Webadmin.PlaceViewRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewRequest} returns this
 */
proto.Webadmin.PlaceViewRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string category = 11;
 * @return {string}
 */
proto.Webadmin.PlaceViewRequest.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewRequest} returns this
 */
proto.Webadmin.PlaceViewRequest.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clientname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    placename: jspb.Message.getFieldWithDefault(msg, 4, ""),
    address: jspb.Message.getFieldWithDefault(msg, 5, ""),
    city: jspb.Message.getFieldWithDefault(msg, 6, ""),
    province: jspb.Message.getFieldWithDefault(msg, 7, ""),
    zipcode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    country: jspb.Message.getFieldWithDefault(msg, 9, ""),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    type: jspb.Message.getFieldWithDefault(msg, 12, ""),
    category: jspb.Message.getFieldWithDefault(msg, 13, ""),
    gatein: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    gateout: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 16, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceViewList}
 */
proto.Webadmin.PlaceViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceViewList;
  return proto.Webadmin.PlaceViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceViewList}
 */
proto.Webadmin.PlaceViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlacename(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipcode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGatein(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGateout(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPlacename();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getZipcode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getGatein();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getGateout();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.PlaceViewList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string placeid = 2;
 * @return {string}
 */
proto.Webadmin.PlaceViewList.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string clientname = 3;
 * @return {string}
 */
proto.Webadmin.PlaceViewList.prototype.getClientname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setClientname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string placename = 4;
 * @return {string}
 */
proto.Webadmin.PlaceViewList.prototype.getPlacename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setPlacename = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string address = 5;
 * @return {string}
 */
proto.Webadmin.PlaceViewList.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string city = 6;
 * @return {string}
 */
proto.Webadmin.PlaceViewList.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string province = 7;
 * @return {string}
 */
proto.Webadmin.PlaceViewList.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string zipcode = 8;
 * @return {string}
 */
proto.Webadmin.PlaceViewList.prototype.getZipcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setZipcode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string country = 9;
 * @return {string}
 */
proto.Webadmin.PlaceViewList.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional double latitude = 10;
 * @return {number}
 */
proto.Webadmin.PlaceViewList.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double longitude = 11;
 * @return {number}
 */
proto.Webadmin.PlaceViewList.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional string type = 12;
 * @return {string}
 */
proto.Webadmin.PlaceViewList.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string category = 13;
 * @return {string}
 */
proto.Webadmin.PlaceViewList.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional double gatein = 14;
 * @return {number}
 */
proto.Webadmin.PlaceViewList.prototype.getGatein = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setGatein = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional double gateout = 15;
 * @return {number}
 */
proto.Webadmin.PlaceViewList.prototype.getGateout = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setGateout = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional bool isactive = 16;
 * @return {boolean}
 */
proto.Webadmin.PlaceViewList.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PlaceViewList} returns this
 */
proto.Webadmin.PlaceViewList.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.PlaceViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.PlaceViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceViewResponse}
 */
proto.Webadmin.PlaceViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceViewResponse;
  return proto.Webadmin.PlaceViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceViewResponse}
 */
proto.Webadmin.PlaceViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.PlaceViewList;
      reader.readMessage(value,proto.Webadmin.PlaceViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.PlaceViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PlaceViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceViewResponse} returns this
 */
proto.Webadmin.PlaceViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PlaceViewList results = 2;
 * @return {!Array<!proto.Webadmin.PlaceViewList>}
 */
proto.Webadmin.PlaceViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.PlaceViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.PlaceViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.PlaceViewList>} value
 * @return {!proto.Webadmin.PlaceViewResponse} returns this
*/
proto.Webadmin.PlaceViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.PlaceViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.PlaceViewList}
 */
proto.Webadmin.PlaceViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.PlaceViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.PlaceViewResponse} returns this
 */
proto.Webadmin.PlaceViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceAddRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceAddRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceAddRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceAddRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    address: jspb.Message.getFieldWithDefault(msg, 6, ""),
    city: jspb.Message.getFieldWithDefault(msg, 7, ""),
    province: jspb.Message.getFieldWithDefault(msg, 8, ""),
    zipcode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    country: jspb.Message.getFieldWithDefault(msg, 10, ""),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    type: jspb.Message.getFieldWithDefault(msg, 13, ""),
    category: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceAddRequest}
 */
proto.Webadmin.PlaceAddRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceAddRequest;
  return proto.Webadmin.PlaceAddRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceAddRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceAddRequest}
 */
proto.Webadmin.PlaceAddRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipcode(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceAddRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceAddRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceAddRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceAddRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getZipcode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PlaceAddRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PlaceAddRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PlaceAddRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.PlaceAddRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.Webadmin.PlaceAddRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string address = 6;
 * @return {string}
 */
proto.Webadmin.PlaceAddRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string city = 7;
 * @return {string}
 */
proto.Webadmin.PlaceAddRequest.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string province = 8;
 * @return {string}
 */
proto.Webadmin.PlaceAddRequest.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string zipcode = 9;
 * @return {string}
 */
proto.Webadmin.PlaceAddRequest.prototype.getZipcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setZipcode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string country = 10;
 * @return {string}
 */
proto.Webadmin.PlaceAddRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional double latitude = 11;
 * @return {number}
 */
proto.Webadmin.PlaceAddRequest.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double longitude = 12;
 * @return {number}
 */
proto.Webadmin.PlaceAddRequest.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional string type = 13;
 * @return {string}
 */
proto.Webadmin.PlaceAddRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string category = 14;
 * @return {string}
 */
proto.Webadmin.PlaceAddRequest.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddRequest} returns this
 */
proto.Webadmin.PlaceAddRequest.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceAddList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceAddList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceAddList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceAddList.toObject = function(includeInstance, msg) {
  var f, obj = {
    placeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    city: jspb.Message.getFieldWithDefault(msg, 4, ""),
    province: jspb.Message.getFieldWithDefault(msg, 5, ""),
    zipcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    country: jspb.Message.getFieldWithDefault(msg, 7, ""),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    type: jspb.Message.getFieldWithDefault(msg, 10, ""),
    category: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceAddList}
 */
proto.Webadmin.PlaceAddList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceAddList;
  return proto.Webadmin.PlaceAddList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceAddList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceAddList}
 */
proto.Webadmin.PlaceAddList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceAddList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceAddList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceAddList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceAddList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getZipcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string placeid = 1;
 * @return {string}
 */
proto.Webadmin.PlaceAddList.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddList} returns this
 */
proto.Webadmin.PlaceAddList.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.PlaceAddList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddList} returns this
 */
proto.Webadmin.PlaceAddList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.Webadmin.PlaceAddList.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddList} returns this
 */
proto.Webadmin.PlaceAddList.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string city = 4;
 * @return {string}
 */
proto.Webadmin.PlaceAddList.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddList} returns this
 */
proto.Webadmin.PlaceAddList.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string province = 5;
 * @return {string}
 */
proto.Webadmin.PlaceAddList.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddList} returns this
 */
proto.Webadmin.PlaceAddList.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string zipcode = 6;
 * @return {string}
 */
proto.Webadmin.PlaceAddList.prototype.getZipcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddList} returns this
 */
proto.Webadmin.PlaceAddList.prototype.setZipcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string country = 7;
 * @return {string}
 */
proto.Webadmin.PlaceAddList.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddList} returns this
 */
proto.Webadmin.PlaceAddList.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double latitude = 8;
 * @return {number}
 */
proto.Webadmin.PlaceAddList.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PlaceAddList} returns this
 */
proto.Webadmin.PlaceAddList.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double longitude = 9;
 * @return {number}
 */
proto.Webadmin.PlaceAddList.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PlaceAddList} returns this
 */
proto.Webadmin.PlaceAddList.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string type = 10;
 * @return {string}
 */
proto.Webadmin.PlaceAddList.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddList} returns this
 */
proto.Webadmin.PlaceAddList.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string category = 11;
 * @return {string}
 */
proto.Webadmin.PlaceAddList.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddList} returns this
 */
proto.Webadmin.PlaceAddList.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.PlaceAddResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceAddResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceAddResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceAddResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceAddResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.PlaceAddList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceAddResponse}
 */
proto.Webadmin.PlaceAddResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceAddResponse;
  return proto.Webadmin.PlaceAddResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceAddResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceAddResponse}
 */
proto.Webadmin.PlaceAddResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.PlaceAddList;
      reader.readMessage(value,proto.Webadmin.PlaceAddList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceAddResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceAddResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceAddResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceAddResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.PlaceAddList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PlaceAddResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceAddResponse} returns this
 */
proto.Webadmin.PlaceAddResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PlaceAddList results = 2;
 * @return {!Array<!proto.Webadmin.PlaceAddList>}
 */
proto.Webadmin.PlaceAddResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.PlaceAddList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.PlaceAddList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.PlaceAddList>} value
 * @return {!proto.Webadmin.PlaceAddResponse} returns this
*/
proto.Webadmin.PlaceAddResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.PlaceAddList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.PlaceAddList}
 */
proto.Webadmin.PlaceAddResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.PlaceAddList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.PlaceAddResponse} returns this
 */
proto.Webadmin.PlaceAddResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    address: jspb.Message.getFieldWithDefault(msg, 7, ""),
    city: jspb.Message.getFieldWithDefault(msg, 8, ""),
    province: jspb.Message.getFieldWithDefault(msg, 9, ""),
    zipcode: jspb.Message.getFieldWithDefault(msg, 10, ""),
    country: jspb.Message.getFieldWithDefault(msg, 11, ""),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    type: jspb.Message.getFieldWithDefault(msg, 14, ""),
    category: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceEditRequest}
 */
proto.Webadmin.PlaceEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceEditRequest;
  return proto.Webadmin.PlaceEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceEditRequest}
 */
proto.Webadmin.PlaceEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipcode(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getZipcode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string address = 7;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string city = 8;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string province = 9;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string zipcode = 10;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getZipcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setZipcode = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string country = 11;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional double latitude = 12;
 * @return {number}
 */
proto.Webadmin.PlaceEditRequest.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional double longitude = 13;
 * @return {number}
 */
proto.Webadmin.PlaceEditRequest.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional string type = 14;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string category = 15;
 * @return {string}
 */
proto.Webadmin.PlaceEditRequest.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditRequest} returns this
 */
proto.Webadmin.PlaceEditRequest.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceEditList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceEditList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceEditList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceEditList.toObject = function(includeInstance, msg) {
  var f, obj = {
    placeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    city: jspb.Message.getFieldWithDefault(msg, 4, ""),
    province: jspb.Message.getFieldWithDefault(msg, 5, ""),
    zipcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    country: jspb.Message.getFieldWithDefault(msg, 7, ""),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    type: jspb.Message.getFieldWithDefault(msg, 10, ""),
    category: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceEditList}
 */
proto.Webadmin.PlaceEditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceEditList;
  return proto.Webadmin.PlaceEditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceEditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceEditList}
 */
proto.Webadmin.PlaceEditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvince(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceEditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceEditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceEditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceEditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProvince();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getZipcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string placeid = 1;
 * @return {string}
 */
proto.Webadmin.PlaceEditList.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditList} returns this
 */
proto.Webadmin.PlaceEditList.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.PlaceEditList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditList} returns this
 */
proto.Webadmin.PlaceEditList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.Webadmin.PlaceEditList.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditList} returns this
 */
proto.Webadmin.PlaceEditList.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string city = 4;
 * @return {string}
 */
proto.Webadmin.PlaceEditList.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditList} returns this
 */
proto.Webadmin.PlaceEditList.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string province = 5;
 * @return {string}
 */
proto.Webadmin.PlaceEditList.prototype.getProvince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditList} returns this
 */
proto.Webadmin.PlaceEditList.prototype.setProvince = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string zipcode = 6;
 * @return {string}
 */
proto.Webadmin.PlaceEditList.prototype.getZipcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditList} returns this
 */
proto.Webadmin.PlaceEditList.prototype.setZipcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string country = 7;
 * @return {string}
 */
proto.Webadmin.PlaceEditList.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditList} returns this
 */
proto.Webadmin.PlaceEditList.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double latitude = 8;
 * @return {number}
 */
proto.Webadmin.PlaceEditList.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PlaceEditList} returns this
 */
proto.Webadmin.PlaceEditList.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double longitude = 9;
 * @return {number}
 */
proto.Webadmin.PlaceEditList.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PlaceEditList} returns this
 */
proto.Webadmin.PlaceEditList.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string type = 10;
 * @return {string}
 */
proto.Webadmin.PlaceEditList.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditList} returns this
 */
proto.Webadmin.PlaceEditList.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string category = 11;
 * @return {string}
 */
proto.Webadmin.PlaceEditList.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditList} returns this
 */
proto.Webadmin.PlaceEditList.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.PlaceEditResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.PlaceEditList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceEditResponse}
 */
proto.Webadmin.PlaceEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceEditResponse;
  return proto.Webadmin.PlaceEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceEditResponse}
 */
proto.Webadmin.PlaceEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.PlaceEditList;
      reader.readMessage(value,proto.Webadmin.PlaceEditList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.PlaceEditList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PlaceEditResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceEditResponse} returns this
 */
proto.Webadmin.PlaceEditResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PlaceEditList results = 2;
 * @return {!Array<!proto.Webadmin.PlaceEditList>}
 */
proto.Webadmin.PlaceEditResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.PlaceEditList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.PlaceEditList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.PlaceEditList>} value
 * @return {!proto.Webadmin.PlaceEditResponse} returns this
*/
proto.Webadmin.PlaceEditResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.PlaceEditList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.PlaceEditList}
 */
proto.Webadmin.PlaceEditResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.PlaceEditList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.PlaceEditResponse} returns this
 */
proto.Webadmin.PlaceEditResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceToggleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceToggleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceToggleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceToggleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceToggleRequest}
 */
proto.Webadmin.PlaceToggleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceToggleRequest;
  return proto.Webadmin.PlaceToggleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceToggleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceToggleRequest}
 */
proto.Webadmin.PlaceToggleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceToggleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceToggleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceToggleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceToggleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PlaceToggleRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceToggleRequest} returns this
 */
proto.Webadmin.PlaceToggleRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PlaceToggleRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceToggleRequest} returns this
 */
proto.Webadmin.PlaceToggleRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PlaceToggleRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceToggleRequest} returns this
 */
proto.Webadmin.PlaceToggleRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.PlaceToggleRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceToggleRequest} returns this
 */
proto.Webadmin.PlaceToggleRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PlaceToggleRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceToggleRequest} returns this
 */
proto.Webadmin.PlaceToggleRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceToggleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceToggleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceToggleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceToggleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceToggleResponse}
 */
proto.Webadmin.PlaceToggleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceToggleResponse;
  return proto.Webadmin.PlaceToggleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceToggleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceToggleResponse}
 */
proto.Webadmin.PlaceToggleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceToggleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceToggleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceToggleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceToggleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PlaceToggleResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceToggleResponse} returns this
 */
proto.Webadmin.PlaceToggleResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceDeleteRequest}
 */
proto.Webadmin.PlaceDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceDeleteRequest;
  return proto.Webadmin.PlaceDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceDeleteRequest}
 */
proto.Webadmin.PlaceDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PlaceDeleteRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceDeleteRequest} returns this
 */
proto.Webadmin.PlaceDeleteRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PlaceDeleteRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceDeleteRequest} returns this
 */
proto.Webadmin.PlaceDeleteRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PlaceDeleteRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceDeleteRequest} returns this
 */
proto.Webadmin.PlaceDeleteRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.PlaceDeleteRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceDeleteRequest} returns this
 */
proto.Webadmin.PlaceDeleteRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PlaceDeleteRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceDeleteRequest} returns this
 */
proto.Webadmin.PlaceDeleteRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlaceDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlaceDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlaceDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlaceDeleteResponse}
 */
proto.Webadmin.PlaceDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlaceDeleteResponse;
  return proto.Webadmin.PlaceDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlaceDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlaceDeleteResponse}
 */
proto.Webadmin.PlaceDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlaceDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlaceDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlaceDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlaceDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PlaceDeleteResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlaceDeleteResponse} returns this
 */
proto.Webadmin.PlaceDeleteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    name: jspb.Message.getFieldWithDefault(msg, 7, ""),
    location: jspb.Message.getFieldWithDefault(msg, 8, ""),
    access: jspb.Message.getFieldWithDefault(msg, 9, ""),
    type: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateViewRequest}
 */
proto.Webadmin.GateViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateViewRequest;
  return proto.Webadmin.GateViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateViewRequest}
 */
proto.Webadmin.GateViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccess(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAccess();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GateViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewRequest} returns this
 */
proto.Webadmin.GateViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GateViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewRequest} returns this
 */
proto.Webadmin.GateViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GateViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewRequest} returns this
 */
proto.Webadmin.GateViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GateViewRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewRequest} returns this
 */
proto.Webadmin.GateViewRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GateViewRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewRequest} returns this
 */
proto.Webadmin.GateViewRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gateid = 6;
 * @return {string}
 */
proto.Webadmin.GateViewRequest.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewRequest} returns this
 */
proto.Webadmin.GateViewRequest.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string name = 7;
 * @return {string}
 */
proto.Webadmin.GateViewRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewRequest} returns this
 */
proto.Webadmin.GateViewRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string location = 8;
 * @return {string}
 */
proto.Webadmin.GateViewRequest.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewRequest} returns this
 */
proto.Webadmin.GateViewRequest.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string access = 9;
 * @return {string}
 */
proto.Webadmin.GateViewRequest.prototype.getAccess = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewRequest} returns this
 */
proto.Webadmin.GateViewRequest.prototype.setAccess = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string type = 10;
 * @return {string}
 */
proto.Webadmin.GateViewRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewRequest} returns this
 */
proto.Webadmin.GateViewRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placename: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gatename: jspb.Message.getFieldWithDefault(msg, 6, ""),
    location: jspb.Message.getFieldWithDefault(msg, 7, ""),
    access: jspb.Message.getFieldWithDefault(msg, 8, ""),
    type: jspb.Message.getFieldWithDefault(msg, 9, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isgenerated: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    lastgenerated: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateViewList}
 */
proto.Webadmin.GateViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateViewList;
  return proto.Webadmin.GateViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateViewList}
 */
proto.Webadmin.GateViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlacename(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGatename(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccess(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsgenerated(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastgenerated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlacename();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGatename();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAccess();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsgenerated();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getLastgenerated();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.GateViewList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewList} returns this
 */
proto.Webadmin.GateViewList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string placeid = 2;
 * @return {string}
 */
proto.Webadmin.GateViewList.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewList} returns this
 */
proto.Webadmin.GateViewList.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string gateid = 3;
 * @return {string}
 */
proto.Webadmin.GateViewList.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewList} returns this
 */
proto.Webadmin.GateViewList.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientname = 4;
 * @return {string}
 */
proto.Webadmin.GateViewList.prototype.getClientname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewList} returns this
 */
proto.Webadmin.GateViewList.prototype.setClientname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placename = 5;
 * @return {string}
 */
proto.Webadmin.GateViewList.prototype.getPlacename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewList} returns this
 */
proto.Webadmin.GateViewList.prototype.setPlacename = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gatename = 6;
 * @return {string}
 */
proto.Webadmin.GateViewList.prototype.getGatename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewList} returns this
 */
proto.Webadmin.GateViewList.prototype.setGatename = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string location = 7;
 * @return {string}
 */
proto.Webadmin.GateViewList.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewList} returns this
 */
proto.Webadmin.GateViewList.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string access = 8;
 * @return {string}
 */
proto.Webadmin.GateViewList.prototype.getAccess = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewList} returns this
 */
proto.Webadmin.GateViewList.prototype.setAccess = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string type = 9;
 * @return {string}
 */
proto.Webadmin.GateViewList.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewList} returns this
 */
proto.Webadmin.GateViewList.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool isactive = 10;
 * @return {boolean}
 */
proto.Webadmin.GateViewList.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.GateViewList} returns this
 */
proto.Webadmin.GateViewList.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool isgenerated = 11;
 * @return {boolean}
 */
proto.Webadmin.GateViewList.prototype.getIsgenerated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.GateViewList} returns this
 */
proto.Webadmin.GateViewList.prototype.setIsgenerated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string lastgenerated = 12;
 * @return {string}
 */
proto.Webadmin.GateViewList.prototype.getLastgenerated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewList} returns this
 */
proto.Webadmin.GateViewList.prototype.setLastgenerated = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.GateViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.GateViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateViewResponse}
 */
proto.Webadmin.GateViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateViewResponse;
  return proto.Webadmin.GateViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateViewResponse}
 */
proto.Webadmin.GateViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.GateViewList;
      reader.readMessage(value,proto.Webadmin.GateViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.GateViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GateViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateViewResponse} returns this
 */
proto.Webadmin.GateViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated GateViewList results = 2;
 * @return {!Array<!proto.Webadmin.GateViewList>}
 */
proto.Webadmin.GateViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.GateViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.GateViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.GateViewList>} value
 * @return {!proto.Webadmin.GateViewResponse} returns this
*/
proto.Webadmin.GateViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.GateViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.GateViewList}
 */
proto.Webadmin.GateViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.GateViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.GateViewResponse} returns this
 */
proto.Webadmin.GateViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateAddRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateAddRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateAddRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateAddRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    location: jspb.Message.getFieldWithDefault(msg, 7, ""),
    access: jspb.Message.getFieldWithDefault(msg, 8, ""),
    type: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateAddRequest}
 */
proto.Webadmin.GateAddRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateAddRequest;
  return proto.Webadmin.GateAddRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateAddRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateAddRequest}
 */
proto.Webadmin.GateAddRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccess(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateAddRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateAddRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateAddRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateAddRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAccess();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GateAddRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddRequest} returns this
 */
proto.Webadmin.GateAddRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GateAddRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddRequest} returns this
 */
proto.Webadmin.GateAddRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GateAddRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddRequest} returns this
 */
proto.Webadmin.GateAddRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GateAddRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddRequest} returns this
 */
proto.Webadmin.GateAddRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GateAddRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddRequest} returns this
 */
proto.Webadmin.GateAddRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.Webadmin.GateAddRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddRequest} returns this
 */
proto.Webadmin.GateAddRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string location = 7;
 * @return {string}
 */
proto.Webadmin.GateAddRequest.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddRequest} returns this
 */
proto.Webadmin.GateAddRequest.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string access = 8;
 * @return {string}
 */
proto.Webadmin.GateAddRequest.prototype.getAccess = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddRequest} returns this
 */
proto.Webadmin.GateAddRequest.prototype.setAccess = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string type = 9;
 * @return {string}
 */
proto.Webadmin.GateAddRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddRequest} returns this
 */
proto.Webadmin.GateAddRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateAddList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateAddList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateAddList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateAddList.toObject = function(includeInstance, msg) {
  var f, obj = {
    gateid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: jspb.Message.getFieldWithDefault(msg, 3, ""),
    access: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateAddList}
 */
proto.Webadmin.GateAddList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateAddList;
  return proto.Webadmin.GateAddList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateAddList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateAddList}
 */
proto.Webadmin.GateAddList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccess(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateAddList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateAddList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateAddList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateAddList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAccess();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string gateid = 1;
 * @return {string}
 */
proto.Webadmin.GateAddList.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddList} returns this
 */
proto.Webadmin.GateAddList.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.GateAddList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddList} returns this
 */
proto.Webadmin.GateAddList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string location = 3;
 * @return {string}
 */
proto.Webadmin.GateAddList.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddList} returns this
 */
proto.Webadmin.GateAddList.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string access = 4;
 * @return {string}
 */
proto.Webadmin.GateAddList.prototype.getAccess = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddList} returns this
 */
proto.Webadmin.GateAddList.prototype.setAccess = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.Webadmin.GateAddList.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddList} returns this
 */
proto.Webadmin.GateAddList.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.GateAddResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateAddResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateAddResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateAddResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateAddResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.GateAddList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateAddResponse}
 */
proto.Webadmin.GateAddResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateAddResponse;
  return proto.Webadmin.GateAddResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateAddResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateAddResponse}
 */
proto.Webadmin.GateAddResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.GateAddList;
      reader.readMessage(value,proto.Webadmin.GateAddList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateAddResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateAddResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateAddResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateAddResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.GateAddList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GateAddResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateAddResponse} returns this
 */
proto.Webadmin.GateAddResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated GateAddList results = 2;
 * @return {!Array<!proto.Webadmin.GateAddList>}
 */
proto.Webadmin.GateAddResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.GateAddList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.GateAddList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.GateAddList>} value
 * @return {!proto.Webadmin.GateAddResponse} returns this
*/
proto.Webadmin.GateAddResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.GateAddList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.GateAddList}
 */
proto.Webadmin.GateAddResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.GateAddList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.GateAddResponse} returns this
 */
proto.Webadmin.GateAddResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    name: jspb.Message.getFieldWithDefault(msg, 7, ""),
    location: jspb.Message.getFieldWithDefault(msg, 8, ""),
    access: jspb.Message.getFieldWithDefault(msg, 9, ""),
    type: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateEditRequest}
 */
proto.Webadmin.GateEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateEditRequest;
  return proto.Webadmin.GateEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateEditRequest}
 */
proto.Webadmin.GateEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccess(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAccess();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GateEditRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditRequest} returns this
 */
proto.Webadmin.GateEditRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GateEditRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditRequest} returns this
 */
proto.Webadmin.GateEditRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GateEditRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditRequest} returns this
 */
proto.Webadmin.GateEditRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GateEditRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditRequest} returns this
 */
proto.Webadmin.GateEditRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GateEditRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditRequest} returns this
 */
proto.Webadmin.GateEditRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gateid = 6;
 * @return {string}
 */
proto.Webadmin.GateEditRequest.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditRequest} returns this
 */
proto.Webadmin.GateEditRequest.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string name = 7;
 * @return {string}
 */
proto.Webadmin.GateEditRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditRequest} returns this
 */
proto.Webadmin.GateEditRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string location = 8;
 * @return {string}
 */
proto.Webadmin.GateEditRequest.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditRequest} returns this
 */
proto.Webadmin.GateEditRequest.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string access = 9;
 * @return {string}
 */
proto.Webadmin.GateEditRequest.prototype.getAccess = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditRequest} returns this
 */
proto.Webadmin.GateEditRequest.prototype.setAccess = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string type = 10;
 * @return {string}
 */
proto.Webadmin.GateEditRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditRequest} returns this
 */
proto.Webadmin.GateEditRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateEditList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateEditList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateEditList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateEditList.toObject = function(includeInstance, msg) {
  var f, obj = {
    gateid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: jspb.Message.getFieldWithDefault(msg, 3, ""),
    access: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateEditList}
 */
proto.Webadmin.GateEditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateEditList;
  return proto.Webadmin.GateEditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateEditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateEditList}
 */
proto.Webadmin.GateEditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccess(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateEditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateEditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateEditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateEditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAccess();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string gateid = 1;
 * @return {string}
 */
proto.Webadmin.GateEditList.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditList} returns this
 */
proto.Webadmin.GateEditList.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.GateEditList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditList} returns this
 */
proto.Webadmin.GateEditList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string location = 3;
 * @return {string}
 */
proto.Webadmin.GateEditList.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditList} returns this
 */
proto.Webadmin.GateEditList.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string access = 4;
 * @return {string}
 */
proto.Webadmin.GateEditList.prototype.getAccess = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditList} returns this
 */
proto.Webadmin.GateEditList.prototype.setAccess = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.Webadmin.GateEditList.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditList} returns this
 */
proto.Webadmin.GateEditList.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.GateEditResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.GateEditList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateEditResponse}
 */
proto.Webadmin.GateEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateEditResponse;
  return proto.Webadmin.GateEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateEditResponse}
 */
proto.Webadmin.GateEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.GateEditList;
      reader.readMessage(value,proto.Webadmin.GateEditList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.GateEditList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GateEditResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateEditResponse} returns this
 */
proto.Webadmin.GateEditResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated GateEditList results = 2;
 * @return {!Array<!proto.Webadmin.GateEditList>}
 */
proto.Webadmin.GateEditResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.GateEditList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.GateEditList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.GateEditList>} value
 * @return {!proto.Webadmin.GateEditResponse} returns this
*/
proto.Webadmin.GateEditResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.GateEditList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.GateEditList}
 */
proto.Webadmin.GateEditResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.GateEditList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.GateEditResponse} returns this
 */
proto.Webadmin.GateEditResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateToggleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateToggleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateToggleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateToggleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateToggleRequest}
 */
proto.Webadmin.GateToggleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateToggleRequest;
  return proto.Webadmin.GateToggleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateToggleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateToggleRequest}
 */
proto.Webadmin.GateToggleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateToggleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateToggleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateToggleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateToggleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GateToggleRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateToggleRequest} returns this
 */
proto.Webadmin.GateToggleRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GateToggleRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateToggleRequest} returns this
 */
proto.Webadmin.GateToggleRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GateToggleRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateToggleRequest} returns this
 */
proto.Webadmin.GateToggleRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GateToggleRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateToggleRequest} returns this
 */
proto.Webadmin.GateToggleRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GateToggleRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateToggleRequest} returns this
 */
proto.Webadmin.GateToggleRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gateid = 6;
 * @return {string}
 */
proto.Webadmin.GateToggleRequest.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateToggleRequest} returns this
 */
proto.Webadmin.GateToggleRequest.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateToggleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateToggleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateToggleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateToggleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateToggleResponse}
 */
proto.Webadmin.GateToggleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateToggleResponse;
  return proto.Webadmin.GateToggleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateToggleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateToggleResponse}
 */
proto.Webadmin.GateToggleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateToggleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateToggleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateToggleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateToggleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GateToggleResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateToggleResponse} returns this
 */
proto.Webadmin.GateToggleResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateDeleteRequest}
 */
proto.Webadmin.GateDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateDeleteRequest;
  return proto.Webadmin.GateDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateDeleteRequest}
 */
proto.Webadmin.GateDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GateDeleteRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateDeleteRequest} returns this
 */
proto.Webadmin.GateDeleteRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GateDeleteRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateDeleteRequest} returns this
 */
proto.Webadmin.GateDeleteRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GateDeleteRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateDeleteRequest} returns this
 */
proto.Webadmin.GateDeleteRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GateDeleteRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateDeleteRequest} returns this
 */
proto.Webadmin.GateDeleteRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GateDeleteRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateDeleteRequest} returns this
 */
proto.Webadmin.GateDeleteRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gateid = 6;
 * @return {string}
 */
proto.Webadmin.GateDeleteRequest.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateDeleteRequest} returns this
 */
proto.Webadmin.GateDeleteRequest.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateDeleteResponse}
 */
proto.Webadmin.GateDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateDeleteResponse;
  return proto.Webadmin.GateDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateDeleteResponse}
 */
proto.Webadmin.GateDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GateDeleteResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateDeleteResponse} returns this
 */
proto.Webadmin.GateDeleteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateSettingViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateSettingViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateSettingViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateSettingViewRequest}
 */
proto.Webadmin.GateSettingViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateSettingViewRequest;
  return proto.Webadmin.GateSettingViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateSettingViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateSettingViewRequest}
 */
proto.Webadmin.GateSettingViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateSettingViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateSettingViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateSettingViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GateSettingViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewRequest} returns this
 */
proto.Webadmin.GateSettingViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GateSettingViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewRequest} returns this
 */
proto.Webadmin.GateSettingViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GateSettingViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewRequest} returns this
 */
proto.Webadmin.GateSettingViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GateSettingViewRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewRequest} returns this
 */
proto.Webadmin.GateSettingViewRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GateSettingViewRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewRequest} returns this
 */
proto.Webadmin.GateSettingViewRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gateid = 6;
 * @return {string}
 */
proto.Webadmin.GateSettingViewRequest.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewRequest} returns this
 */
proto.Webadmin.GateSettingViewRequest.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateSettingViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateSettingViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateSettingViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    gateid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    urlcore: jspb.Message.getFieldWithDefault(msg, 2, ""),
    urltcp: jspb.Message.getFieldWithDefault(msg, 3, ""),
    urlcontroller: jspb.Message.getFieldWithDefault(msg, 4, ""),
    camerausername: jspb.Message.getFieldWithDefault(msg, 5, ""),
    camerapassword: jspb.Message.getFieldWithDefault(msg, 6, ""),
    cameraipaddress: jspb.Message.getFieldWithDefault(msg, 7, ""),
    camerafolder: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateSettingViewList}
 */
proto.Webadmin.GateSettingViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateSettingViewList;
  return proto.Webadmin.GateSettingViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateSettingViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateSettingViewList}
 */
proto.Webadmin.GateSettingViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrlcore(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrltcp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrlcontroller(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCamerausername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCamerapassword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCameraipaddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCamerafolder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateSettingViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateSettingViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateSettingViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrlcore();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrltcp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUrlcontroller();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCamerausername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCamerapassword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCameraipaddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCamerafolder();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string gateid = 1;
 * @return {string}
 */
proto.Webadmin.GateSettingViewList.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewList} returns this
 */
proto.Webadmin.GateSettingViewList.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string urlcore = 2;
 * @return {string}
 */
proto.Webadmin.GateSettingViewList.prototype.getUrlcore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewList} returns this
 */
proto.Webadmin.GateSettingViewList.prototype.setUrlcore = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string urltcp = 3;
 * @return {string}
 */
proto.Webadmin.GateSettingViewList.prototype.getUrltcp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewList} returns this
 */
proto.Webadmin.GateSettingViewList.prototype.setUrltcp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string urlcontroller = 4;
 * @return {string}
 */
proto.Webadmin.GateSettingViewList.prototype.getUrlcontroller = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewList} returns this
 */
proto.Webadmin.GateSettingViewList.prototype.setUrlcontroller = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string camerausername = 5;
 * @return {string}
 */
proto.Webadmin.GateSettingViewList.prototype.getCamerausername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewList} returns this
 */
proto.Webadmin.GateSettingViewList.prototype.setCamerausername = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string camerapassword = 6;
 * @return {string}
 */
proto.Webadmin.GateSettingViewList.prototype.getCamerapassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewList} returns this
 */
proto.Webadmin.GateSettingViewList.prototype.setCamerapassword = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string cameraipaddress = 7;
 * @return {string}
 */
proto.Webadmin.GateSettingViewList.prototype.getCameraipaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewList} returns this
 */
proto.Webadmin.GateSettingViewList.prototype.setCameraipaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string camerafolder = 8;
 * @return {string}
 */
proto.Webadmin.GateSettingViewList.prototype.getCamerafolder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewList} returns this
 */
proto.Webadmin.GateSettingViewList.prototype.setCamerafolder = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.GateSettingViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateSettingViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateSettingViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateSettingViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.GateSettingViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateSettingViewResponse}
 */
proto.Webadmin.GateSettingViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateSettingViewResponse;
  return proto.Webadmin.GateSettingViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateSettingViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateSettingViewResponse}
 */
proto.Webadmin.GateSettingViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.GateSettingViewList;
      reader.readMessage(value,proto.Webadmin.GateSettingViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateSettingViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateSettingViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateSettingViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.GateSettingViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GateSettingViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingViewResponse} returns this
 */
proto.Webadmin.GateSettingViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated GateSettingViewList results = 2;
 * @return {!Array<!proto.Webadmin.GateSettingViewList>}
 */
proto.Webadmin.GateSettingViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.GateSettingViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.GateSettingViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.GateSettingViewList>} value
 * @return {!proto.Webadmin.GateSettingViewResponse} returns this
*/
proto.Webadmin.GateSettingViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.GateSettingViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.GateSettingViewList}
 */
proto.Webadmin.GateSettingViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.GateSettingViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.GateSettingViewResponse} returns this
 */
proto.Webadmin.GateSettingViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateSettingEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateSettingEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateSettingEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    urlcore: jspb.Message.getFieldWithDefault(msg, 7, ""),
    urltcp: jspb.Message.getFieldWithDefault(msg, 8, ""),
    urlcontroller: jspb.Message.getFieldWithDefault(msg, 9, ""),
    camerausername: jspb.Message.getFieldWithDefault(msg, 10, ""),
    camerapassword: jspb.Message.getFieldWithDefault(msg, 11, ""),
    cameraipaddress: jspb.Message.getFieldWithDefault(msg, 12, ""),
    camerafolder: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateSettingEditRequest}
 */
proto.Webadmin.GateSettingEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateSettingEditRequest;
  return proto.Webadmin.GateSettingEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateSettingEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateSettingEditRequest}
 */
proto.Webadmin.GateSettingEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrlcore(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrltcp(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrlcontroller(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCamerausername(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCamerapassword(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCameraipaddress(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCamerafolder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateSettingEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateSettingEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateSettingEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUrlcore();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUrltcp();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUrlcontroller();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCamerausername();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCamerapassword();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCameraipaddress();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCamerafolder();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gateid = 6;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string urlcore = 7;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getUrlcore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setUrlcore = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string urltcp = 8;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getUrltcp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setUrltcp = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string urlcontroller = 9;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getUrlcontroller = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setUrlcontroller = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string camerausername = 10;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getCamerausername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setCamerausername = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string camerapassword = 11;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getCamerapassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setCamerapassword = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string cameraipaddress = 12;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getCameraipaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setCameraipaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string camerafolder = 13;
 * @return {string}
 */
proto.Webadmin.GateSettingEditRequest.prototype.getCamerafolder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditRequest} returns this
 */
proto.Webadmin.GateSettingEditRequest.prototype.setCamerafolder = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateSettingEditList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateSettingEditList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateSettingEditList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingEditList.toObject = function(includeInstance, msg) {
  var f, obj = {
    gateid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    urlcore: jspb.Message.getFieldWithDefault(msg, 2, ""),
    urltcp: jspb.Message.getFieldWithDefault(msg, 3, ""),
    urlcontroller: jspb.Message.getFieldWithDefault(msg, 4, ""),
    camerausername: jspb.Message.getFieldWithDefault(msg, 5, ""),
    camerapassword: jspb.Message.getFieldWithDefault(msg, 6, ""),
    cameraipaddress: jspb.Message.getFieldWithDefault(msg, 7, ""),
    camerafolder: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateSettingEditList}
 */
proto.Webadmin.GateSettingEditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateSettingEditList;
  return proto.Webadmin.GateSettingEditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateSettingEditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateSettingEditList}
 */
proto.Webadmin.GateSettingEditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrlcore(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrltcp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrlcontroller(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCamerausername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCamerapassword(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCameraipaddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCamerafolder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateSettingEditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateSettingEditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateSettingEditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingEditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrlcore();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrltcp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUrlcontroller();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCamerausername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCamerapassword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCameraipaddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCamerafolder();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string gateid = 1;
 * @return {string}
 */
proto.Webadmin.GateSettingEditList.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditList} returns this
 */
proto.Webadmin.GateSettingEditList.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string urlcore = 2;
 * @return {string}
 */
proto.Webadmin.GateSettingEditList.prototype.getUrlcore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditList} returns this
 */
proto.Webadmin.GateSettingEditList.prototype.setUrlcore = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string urltcp = 3;
 * @return {string}
 */
proto.Webadmin.GateSettingEditList.prototype.getUrltcp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditList} returns this
 */
proto.Webadmin.GateSettingEditList.prototype.setUrltcp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string urlcontroller = 4;
 * @return {string}
 */
proto.Webadmin.GateSettingEditList.prototype.getUrlcontroller = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditList} returns this
 */
proto.Webadmin.GateSettingEditList.prototype.setUrlcontroller = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string camerausername = 5;
 * @return {string}
 */
proto.Webadmin.GateSettingEditList.prototype.getCamerausername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditList} returns this
 */
proto.Webadmin.GateSettingEditList.prototype.setCamerausername = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string camerapassword = 6;
 * @return {string}
 */
proto.Webadmin.GateSettingEditList.prototype.getCamerapassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditList} returns this
 */
proto.Webadmin.GateSettingEditList.prototype.setCamerapassword = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string cameraipaddress = 7;
 * @return {string}
 */
proto.Webadmin.GateSettingEditList.prototype.getCameraipaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditList} returns this
 */
proto.Webadmin.GateSettingEditList.prototype.setCameraipaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string camerafolder = 8;
 * @return {string}
 */
proto.Webadmin.GateSettingEditList.prototype.getCamerafolder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditList} returns this
 */
proto.Webadmin.GateSettingEditList.prototype.setCamerafolder = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.GateSettingEditResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateSettingEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateSettingEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateSettingEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.GateSettingEditList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateSettingEditResponse}
 */
proto.Webadmin.GateSettingEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateSettingEditResponse;
  return proto.Webadmin.GateSettingEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateSettingEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateSettingEditResponse}
 */
proto.Webadmin.GateSettingEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.GateSettingEditList;
      reader.readMessage(value,proto.Webadmin.GateSettingEditList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateSettingEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateSettingEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateSettingEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.GateSettingEditList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GateSettingEditResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingEditResponse} returns this
 */
proto.Webadmin.GateSettingEditResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated GateSettingEditList results = 2;
 * @return {!Array<!proto.Webadmin.GateSettingEditList>}
 */
proto.Webadmin.GateSettingEditResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.GateSettingEditList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.GateSettingEditList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.GateSettingEditList>} value
 * @return {!proto.Webadmin.GateSettingEditResponse} returns this
*/
proto.Webadmin.GateSettingEditResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.GateSettingEditList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.GateSettingEditList}
 */
proto.Webadmin.GateSettingEditResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.GateSettingEditList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.GateSettingEditResponse} returns this
 */
proto.Webadmin.GateSettingEditResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateSettingResetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateSettingResetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateSettingResetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingResetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateSettingResetRequest}
 */
proto.Webadmin.GateSettingResetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateSettingResetRequest;
  return proto.Webadmin.GateSettingResetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateSettingResetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateSettingResetRequest}
 */
proto.Webadmin.GateSettingResetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateSettingResetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateSettingResetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateSettingResetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingResetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GateSettingResetRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingResetRequest} returns this
 */
proto.Webadmin.GateSettingResetRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GateSettingResetRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingResetRequest} returns this
 */
proto.Webadmin.GateSettingResetRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GateSettingResetRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingResetRequest} returns this
 */
proto.Webadmin.GateSettingResetRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GateSettingResetRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingResetRequest} returns this
 */
proto.Webadmin.GateSettingResetRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GateSettingResetRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingResetRequest} returns this
 */
proto.Webadmin.GateSettingResetRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gateid = 6;
 * @return {string}
 */
proto.Webadmin.GateSettingResetRequest.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingResetRequest} returns this
 */
proto.Webadmin.GateSettingResetRequest.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateSettingResetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateSettingResetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateSettingResetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingResetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateSettingResetResponse}
 */
proto.Webadmin.GateSettingResetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateSettingResetResponse;
  return proto.Webadmin.GateSettingResetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateSettingResetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateSettingResetResponse}
 */
proto.Webadmin.GateSettingResetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateSettingResetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateSettingResetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateSettingResetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateSettingResetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GateSettingResetResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateSettingResetResponse} returns this
 */
proto.Webadmin.GateSettingResetResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateHardwareViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateHardwareViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateHardwareViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateHardwareViewRequest}
 */
proto.Webadmin.GateHardwareViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateHardwareViewRequest;
  return proto.Webadmin.GateHardwareViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateHardwareViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateHardwareViewRequest}
 */
proto.Webadmin.GateHardwareViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateHardwareViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateHardwareViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateHardwareViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GateHardwareViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareViewRequest} returns this
 */
proto.Webadmin.GateHardwareViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GateHardwareViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareViewRequest} returns this
 */
proto.Webadmin.GateHardwareViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GateHardwareViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareViewRequest} returns this
 */
proto.Webadmin.GateHardwareViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GateHardwareViewRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareViewRequest} returns this
 */
proto.Webadmin.GateHardwareViewRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GateHardwareViewRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareViewRequest} returns this
 */
proto.Webadmin.GateHardwareViewRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gateid = 6;
 * @return {string}
 */
proto.Webadmin.GateHardwareViewRequest.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareViewRequest} returns this
 */
proto.Webadmin.GateHardwareViewRequest.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateHardwareViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateHardwareViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateHardwareViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    gateid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    controller: jspb.Message.getFieldWithDefault(msg, 2, ""),
    camera: jspb.Message.getFieldWithDefault(msg, 3, ""),
    printer: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateHardwareViewList}
 */
proto.Webadmin.GateHardwareViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateHardwareViewList;
  return proto.Webadmin.GateHardwareViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateHardwareViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateHardwareViewList}
 */
proto.Webadmin.GateHardwareViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setController(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCamera(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrinter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateHardwareViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateHardwareViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateHardwareViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getController();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCamera();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrinter();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string gateid = 1;
 * @return {string}
 */
proto.Webadmin.GateHardwareViewList.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareViewList} returns this
 */
proto.Webadmin.GateHardwareViewList.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string controller = 2;
 * @return {string}
 */
proto.Webadmin.GateHardwareViewList.prototype.getController = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareViewList} returns this
 */
proto.Webadmin.GateHardwareViewList.prototype.setController = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string camera = 3;
 * @return {string}
 */
proto.Webadmin.GateHardwareViewList.prototype.getCamera = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareViewList} returns this
 */
proto.Webadmin.GateHardwareViewList.prototype.setCamera = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string printer = 4;
 * @return {string}
 */
proto.Webadmin.GateHardwareViewList.prototype.getPrinter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareViewList} returns this
 */
proto.Webadmin.GateHardwareViewList.prototype.setPrinter = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.GateHardwareViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateHardwareViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateHardwareViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateHardwareViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.GateHardwareViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateHardwareViewResponse}
 */
proto.Webadmin.GateHardwareViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateHardwareViewResponse;
  return proto.Webadmin.GateHardwareViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateHardwareViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateHardwareViewResponse}
 */
proto.Webadmin.GateHardwareViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.GateHardwareViewList;
      reader.readMessage(value,proto.Webadmin.GateHardwareViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateHardwareViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateHardwareViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateHardwareViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.GateHardwareViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GateHardwareViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareViewResponse} returns this
 */
proto.Webadmin.GateHardwareViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated GateHardwareViewList results = 2;
 * @return {!Array<!proto.Webadmin.GateHardwareViewList>}
 */
proto.Webadmin.GateHardwareViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.GateHardwareViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.GateHardwareViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.GateHardwareViewList>} value
 * @return {!proto.Webadmin.GateHardwareViewResponse} returns this
*/
proto.Webadmin.GateHardwareViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.GateHardwareViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.GateHardwareViewList}
 */
proto.Webadmin.GateHardwareViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.GateHardwareViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.GateHardwareViewResponse} returns this
 */
proto.Webadmin.GateHardwareViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateHardwareEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateHardwareEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateHardwareEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    controller: jspb.Message.getFieldWithDefault(msg, 7, ""),
    camera: jspb.Message.getFieldWithDefault(msg, 8, ""),
    printer: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateHardwareEditRequest}
 */
proto.Webadmin.GateHardwareEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateHardwareEditRequest;
  return proto.Webadmin.GateHardwareEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateHardwareEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateHardwareEditRequest}
 */
proto.Webadmin.GateHardwareEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setController(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCamera(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrinter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateHardwareEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateHardwareEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateHardwareEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getController();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCamera();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPrinter();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditRequest} returns this
 */
proto.Webadmin.GateHardwareEditRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditRequest} returns this
 */
proto.Webadmin.GateHardwareEditRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditRequest} returns this
 */
proto.Webadmin.GateHardwareEditRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditRequest} returns this
 */
proto.Webadmin.GateHardwareEditRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditRequest} returns this
 */
proto.Webadmin.GateHardwareEditRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gateid = 6;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditRequest.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditRequest} returns this
 */
proto.Webadmin.GateHardwareEditRequest.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string controller = 7;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditRequest.prototype.getController = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditRequest} returns this
 */
proto.Webadmin.GateHardwareEditRequest.prototype.setController = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string camera = 8;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditRequest.prototype.getCamera = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditRequest} returns this
 */
proto.Webadmin.GateHardwareEditRequest.prototype.setCamera = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string printer = 9;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditRequest.prototype.getPrinter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditRequest} returns this
 */
proto.Webadmin.GateHardwareEditRequest.prototype.setPrinter = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateHardwareEditList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateHardwareEditList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateHardwareEditList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareEditList.toObject = function(includeInstance, msg) {
  var f, obj = {
    gateid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    controller: jspb.Message.getFieldWithDefault(msg, 2, ""),
    camera: jspb.Message.getFieldWithDefault(msg, 3, ""),
    printer: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateHardwareEditList}
 */
proto.Webadmin.GateHardwareEditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateHardwareEditList;
  return proto.Webadmin.GateHardwareEditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateHardwareEditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateHardwareEditList}
 */
proto.Webadmin.GateHardwareEditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setController(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCamera(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrinter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateHardwareEditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateHardwareEditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateHardwareEditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareEditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getController();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCamera();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrinter();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string gateid = 1;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditList.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditList} returns this
 */
proto.Webadmin.GateHardwareEditList.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string controller = 2;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditList.prototype.getController = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditList} returns this
 */
proto.Webadmin.GateHardwareEditList.prototype.setController = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string camera = 3;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditList.prototype.getCamera = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditList} returns this
 */
proto.Webadmin.GateHardwareEditList.prototype.setCamera = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string printer = 4;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditList.prototype.getPrinter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditList} returns this
 */
proto.Webadmin.GateHardwareEditList.prototype.setPrinter = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.GateHardwareEditResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateHardwareEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateHardwareEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateHardwareEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.GateHardwareEditList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateHardwareEditResponse}
 */
proto.Webadmin.GateHardwareEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateHardwareEditResponse;
  return proto.Webadmin.GateHardwareEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateHardwareEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateHardwareEditResponse}
 */
proto.Webadmin.GateHardwareEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.GateHardwareEditList;
      reader.readMessage(value,proto.Webadmin.GateHardwareEditList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateHardwareEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateHardwareEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateHardwareEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.GateHardwareEditList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GateHardwareEditResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareEditResponse} returns this
 */
proto.Webadmin.GateHardwareEditResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated GateHardwareEditList results = 2;
 * @return {!Array<!proto.Webadmin.GateHardwareEditList>}
 */
proto.Webadmin.GateHardwareEditResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.GateHardwareEditList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.GateHardwareEditList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.GateHardwareEditList>} value
 * @return {!proto.Webadmin.GateHardwareEditResponse} returns this
*/
proto.Webadmin.GateHardwareEditResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.GateHardwareEditList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.GateHardwareEditList}
 */
proto.Webadmin.GateHardwareEditResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.GateHardwareEditList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.GateHardwareEditResponse} returns this
 */
proto.Webadmin.GateHardwareEditResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateHardwareResetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateHardwareResetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateHardwareResetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareResetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateHardwareResetRequest}
 */
proto.Webadmin.GateHardwareResetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateHardwareResetRequest;
  return proto.Webadmin.GateHardwareResetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateHardwareResetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateHardwareResetRequest}
 */
proto.Webadmin.GateHardwareResetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateHardwareResetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateHardwareResetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateHardwareResetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareResetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GateHardwareResetRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareResetRequest} returns this
 */
proto.Webadmin.GateHardwareResetRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GateHardwareResetRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareResetRequest} returns this
 */
proto.Webadmin.GateHardwareResetRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GateHardwareResetRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareResetRequest} returns this
 */
proto.Webadmin.GateHardwareResetRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GateHardwareResetRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareResetRequest} returns this
 */
proto.Webadmin.GateHardwareResetRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GateHardwareResetRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareResetRequest} returns this
 */
proto.Webadmin.GateHardwareResetRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gateid = 6;
 * @return {string}
 */
proto.Webadmin.GateHardwareResetRequest.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareResetRequest} returns this
 */
proto.Webadmin.GateHardwareResetRequest.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateHardwareResetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateHardwareResetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateHardwareResetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareResetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateHardwareResetResponse}
 */
proto.Webadmin.GateHardwareResetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateHardwareResetResponse;
  return proto.Webadmin.GateHardwareResetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateHardwareResetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateHardwareResetResponse}
 */
proto.Webadmin.GateHardwareResetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateHardwareResetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateHardwareResetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateHardwareResetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateHardwareResetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GateHardwareResetResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateHardwareResetResponse} returns this
 */
proto.Webadmin.GateHardwareResetResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PriceViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PriceViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PriceViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    priceid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PriceViewRequest}
 */
proto.Webadmin.PriceViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PriceViewRequest;
  return proto.Webadmin.PriceViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PriceViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PriceViewRequest}
 */
proto.Webadmin.PriceViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PriceViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PriceViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PriceViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPriceid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PriceViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceViewRequest} returns this
 */
proto.Webadmin.PriceViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PriceViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceViewRequest} returns this
 */
proto.Webadmin.PriceViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PriceViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceViewRequest} returns this
 */
proto.Webadmin.PriceViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string priceid = 4;
 * @return {string}
 */
proto.Webadmin.PriceViewRequest.prototype.getPriceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceViewRequest} returns this
 */
proto.Webadmin.PriceViewRequest.prototype.setPriceid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PriceViewRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceViewRequest} returns this
 */
proto.Webadmin.PriceViewRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PriceViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PriceViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PriceViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    priceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    free: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    duration1: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    price1: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    duration2: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    price2: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    duration3: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    price3: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    price4: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PriceViewList}
 */
proto.Webadmin.PriceViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PriceViewList;
  return proto.Webadmin.PriceViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PriceViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PriceViewList}
 */
proto.Webadmin.PriceViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFree(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration1(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice1(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration2(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice2(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration3(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice3(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice4(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PriceViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PriceViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PriceViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFree();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getDuration1();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPrice1();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getDuration2();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getPrice2();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getDuration3();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getPrice3();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getPrice4();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
};


/**
 * optional string priceid = 1;
 * @return {string}
 */
proto.Webadmin.PriceViewList.prototype.getPriceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceViewList} returns this
 */
proto.Webadmin.PriceViewList.prototype.setPriceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string placeid = 2;
 * @return {string}
 */
proto.Webadmin.PriceViewList.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceViewList} returns this
 */
proto.Webadmin.PriceViewList.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double free = 3;
 * @return {number}
 */
proto.Webadmin.PriceViewList.prototype.getFree = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceViewList} returns this
 */
proto.Webadmin.PriceViewList.prototype.setFree = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double duration1 = 4;
 * @return {number}
 */
proto.Webadmin.PriceViewList.prototype.getDuration1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceViewList} returns this
 */
proto.Webadmin.PriceViewList.prototype.setDuration1 = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double price1 = 5;
 * @return {number}
 */
proto.Webadmin.PriceViewList.prototype.getPrice1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceViewList} returns this
 */
proto.Webadmin.PriceViewList.prototype.setPrice1 = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double duration2 = 6;
 * @return {number}
 */
proto.Webadmin.PriceViewList.prototype.getDuration2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceViewList} returns this
 */
proto.Webadmin.PriceViewList.prototype.setDuration2 = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double price2 = 7;
 * @return {number}
 */
proto.Webadmin.PriceViewList.prototype.getPrice2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceViewList} returns this
 */
proto.Webadmin.PriceViewList.prototype.setPrice2 = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double duration3 = 8;
 * @return {number}
 */
proto.Webadmin.PriceViewList.prototype.getDuration3 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceViewList} returns this
 */
proto.Webadmin.PriceViewList.prototype.setDuration3 = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double price3 = 9;
 * @return {number}
 */
proto.Webadmin.PriceViewList.prototype.getPrice3 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceViewList} returns this
 */
proto.Webadmin.PriceViewList.prototype.setPrice3 = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double price4 = 10;
 * @return {number}
 */
proto.Webadmin.PriceViewList.prototype.getPrice4 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceViewList} returns this
 */
proto.Webadmin.PriceViewList.prototype.setPrice4 = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.PriceViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PriceViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PriceViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PriceViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.PriceViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PriceViewResponse}
 */
proto.Webadmin.PriceViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PriceViewResponse;
  return proto.Webadmin.PriceViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PriceViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PriceViewResponse}
 */
proto.Webadmin.PriceViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.PriceViewList;
      reader.readMessage(value,proto.Webadmin.PriceViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PriceViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PriceViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PriceViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.PriceViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PriceViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceViewResponse} returns this
 */
proto.Webadmin.PriceViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PriceViewList results = 2;
 * @return {!Array<!proto.Webadmin.PriceViewList>}
 */
proto.Webadmin.PriceViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.PriceViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.PriceViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.PriceViewList>} value
 * @return {!proto.Webadmin.PriceViewResponse} returns this
*/
proto.Webadmin.PriceViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.PriceViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.PriceViewList}
 */
proto.Webadmin.PriceViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.PriceViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.PriceViewResponse} returns this
 */
proto.Webadmin.PriceViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PriceEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PriceEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PriceEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    priceid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    free: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    duration1: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    price1: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    duration2: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    price2: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    duration3: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    price3: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    price4: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PriceEditRequest}
 */
proto.Webadmin.PriceEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PriceEditRequest;
  return proto.Webadmin.PriceEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PriceEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PriceEditRequest}
 */
proto.Webadmin.PriceEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFree(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration1(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice1(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration2(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice2(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration3(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice3(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice4(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PriceEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PriceEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PriceEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPriceid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFree();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getDuration1();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getPrice1();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getDuration2();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getPrice2();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getDuration3();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getPrice3();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getPrice4();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PriceEditRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PriceEditRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PriceEditRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string priceid = 4;
 * @return {string}
 */
proto.Webadmin.PriceEditRequest.prototype.getPriceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setPriceid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PriceEditRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double free = 6;
 * @return {number}
 */
proto.Webadmin.PriceEditRequest.prototype.getFree = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setFree = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double duration1 = 7;
 * @return {number}
 */
proto.Webadmin.PriceEditRequest.prototype.getDuration1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setDuration1 = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double price1 = 8;
 * @return {number}
 */
proto.Webadmin.PriceEditRequest.prototype.getPrice1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setPrice1 = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double duration2 = 9;
 * @return {number}
 */
proto.Webadmin.PriceEditRequest.prototype.getDuration2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setDuration2 = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double price2 = 10;
 * @return {number}
 */
proto.Webadmin.PriceEditRequest.prototype.getPrice2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setPrice2 = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double duration3 = 11;
 * @return {number}
 */
proto.Webadmin.PriceEditRequest.prototype.getDuration3 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setDuration3 = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double price3 = 12;
 * @return {number}
 */
proto.Webadmin.PriceEditRequest.prototype.getPrice3 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setPrice3 = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional double price4 = 13;
 * @return {number}
 */
proto.Webadmin.PriceEditRequest.prototype.getPrice4 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditRequest} returns this
 */
proto.Webadmin.PriceEditRequest.prototype.setPrice4 = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PriceEditList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PriceEditList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PriceEditList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceEditList.toObject = function(includeInstance, msg) {
  var f, obj = {
    priceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    free: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    duration1: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    price1: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    duration2: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    price2: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    duration3: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    price3: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    duration4: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    price4: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PriceEditList}
 */
proto.Webadmin.PriceEditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PriceEditList;
  return proto.Webadmin.PriceEditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PriceEditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PriceEditList}
 */
proto.Webadmin.PriceEditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFree(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration1(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice1(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration2(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice2(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration3(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice3(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDuration4(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice4(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PriceEditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PriceEditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PriceEditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceEditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPriceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFree();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getDuration1();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPrice1();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getDuration2();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getPrice2();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getDuration3();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getPrice3();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getDuration4();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getPrice4();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
};


/**
 * optional string priceid = 1;
 * @return {string}
 */
proto.Webadmin.PriceEditList.prototype.getPriceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceEditList} returns this
 */
proto.Webadmin.PriceEditList.prototype.setPriceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string placeid = 2;
 * @return {string}
 */
proto.Webadmin.PriceEditList.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceEditList} returns this
 */
proto.Webadmin.PriceEditList.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double free = 3;
 * @return {number}
 */
proto.Webadmin.PriceEditList.prototype.getFree = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditList} returns this
 */
proto.Webadmin.PriceEditList.prototype.setFree = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double duration1 = 4;
 * @return {number}
 */
proto.Webadmin.PriceEditList.prototype.getDuration1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditList} returns this
 */
proto.Webadmin.PriceEditList.prototype.setDuration1 = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double price1 = 5;
 * @return {number}
 */
proto.Webadmin.PriceEditList.prototype.getPrice1 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditList} returns this
 */
proto.Webadmin.PriceEditList.prototype.setPrice1 = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double duration2 = 6;
 * @return {number}
 */
proto.Webadmin.PriceEditList.prototype.getDuration2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditList} returns this
 */
proto.Webadmin.PriceEditList.prototype.setDuration2 = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double price2 = 7;
 * @return {number}
 */
proto.Webadmin.PriceEditList.prototype.getPrice2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditList} returns this
 */
proto.Webadmin.PriceEditList.prototype.setPrice2 = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double duration3 = 8;
 * @return {number}
 */
proto.Webadmin.PriceEditList.prototype.getDuration3 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditList} returns this
 */
proto.Webadmin.PriceEditList.prototype.setDuration3 = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double price3 = 9;
 * @return {number}
 */
proto.Webadmin.PriceEditList.prototype.getPrice3 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditList} returns this
 */
proto.Webadmin.PriceEditList.prototype.setPrice3 = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double duration4 = 10;
 * @return {number}
 */
proto.Webadmin.PriceEditList.prototype.getDuration4 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditList} returns this
 */
proto.Webadmin.PriceEditList.prototype.setDuration4 = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double price4 = 11;
 * @return {number}
 */
proto.Webadmin.PriceEditList.prototype.getPrice4 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.PriceEditList} returns this
 */
proto.Webadmin.PriceEditList.prototype.setPrice4 = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.PriceEditResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PriceEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PriceEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PriceEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.PriceEditList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PriceEditResponse}
 */
proto.Webadmin.PriceEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PriceEditResponse;
  return proto.Webadmin.PriceEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PriceEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PriceEditResponse}
 */
proto.Webadmin.PriceEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.PriceEditList;
      reader.readMessage(value,proto.Webadmin.PriceEditList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PriceEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PriceEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PriceEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.PriceEditList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PriceEditResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceEditResponse} returns this
 */
proto.Webadmin.PriceEditResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PriceEditList results = 2;
 * @return {!Array<!proto.Webadmin.PriceEditList>}
 */
proto.Webadmin.PriceEditResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.PriceEditList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.PriceEditList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.PriceEditList>} value
 * @return {!proto.Webadmin.PriceEditResponse} returns this
*/
proto.Webadmin.PriceEditResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.PriceEditList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.PriceEditList}
 */
proto.Webadmin.PriceEditResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.PriceEditList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.PriceEditResponse} returns this
 */
proto.Webadmin.PriceEditResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PriceResetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PriceResetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PriceResetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceResetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    priceid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PriceResetRequest}
 */
proto.Webadmin.PriceResetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PriceResetRequest;
  return proto.Webadmin.PriceResetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PriceResetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PriceResetRequest}
 */
proto.Webadmin.PriceResetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PriceResetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PriceResetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PriceResetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceResetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPriceid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PriceResetRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceResetRequest} returns this
 */
proto.Webadmin.PriceResetRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PriceResetRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceResetRequest} returns this
 */
proto.Webadmin.PriceResetRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PriceResetRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceResetRequest} returns this
 */
proto.Webadmin.PriceResetRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string priceid = 4;
 * @return {string}
 */
proto.Webadmin.PriceResetRequest.prototype.getPriceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceResetRequest} returns this
 */
proto.Webadmin.PriceResetRequest.prototype.setPriceid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PriceResetRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceResetRequest} returns this
 */
proto.Webadmin.PriceResetRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PriceResetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PriceResetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PriceResetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceResetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PriceResetResponse}
 */
proto.Webadmin.PriceResetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PriceResetResponse;
  return proto.Webadmin.PriceResetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PriceResetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PriceResetResponse}
 */
proto.Webadmin.PriceResetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PriceResetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PriceResetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PriceResetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PriceResetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PriceResetResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PriceResetResponse} returns this
 */
proto.Webadmin.PriceResetResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintInViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintInViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintInViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintInViewRequest}
 */
proto.Webadmin.PrintInViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintInViewRequest;
  return proto.Webadmin.PrintInViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintInViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintInViewRequest}
 */
proto.Webadmin.PrintInViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintInViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintInViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintInViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PrintInViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewRequest} returns this
 */
proto.Webadmin.PrintInViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PrintInViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewRequest} returns this
 */
proto.Webadmin.PrintInViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PrintInViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewRequest} returns this
 */
proto.Webadmin.PrintInViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.PrintInViewRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewRequest} returns this
 */
proto.Webadmin.PrintInViewRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PrintInViewRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewRequest} returns this
 */
proto.Webadmin.PrintInViewRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintInViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintInViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintInViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    printid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placename: jspb.Message.getFieldWithDefault(msg, 5, ""),
    title: jspb.Message.getFieldWithDefault(msg, 6, ""),
    header: jspb.Message.getFieldWithDefault(msg, 7, ""),
    footer: jspb.Message.getFieldWithDefault(msg, 8, ""),
    timeformat: jspb.Message.getFieldWithDefault(msg, 9, ""),
    isshowtime: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    updated: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintInViewList}
 */
proto.Webadmin.PrintInViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintInViewList;
  return proto.Webadmin.PrintInViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintInViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintInViewList}
 */
proto.Webadmin.PrintInViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrintid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlacename(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeader(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooter(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeformat(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtime(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintInViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintInViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintInViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrintid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlacename();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHeader();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFooter();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTimeformat();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIsshowtime();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getUpdated();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.PrintInViewList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewList} returns this
 */
proto.Webadmin.PrintInViewList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string placeid = 2;
 * @return {string}
 */
proto.Webadmin.PrintInViewList.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewList} returns this
 */
proto.Webadmin.PrintInViewList.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string printid = 3;
 * @return {string}
 */
proto.Webadmin.PrintInViewList.prototype.getPrintid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewList} returns this
 */
proto.Webadmin.PrintInViewList.prototype.setPrintid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientname = 4;
 * @return {string}
 */
proto.Webadmin.PrintInViewList.prototype.getClientname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewList} returns this
 */
proto.Webadmin.PrintInViewList.prototype.setClientname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placename = 5;
 * @return {string}
 */
proto.Webadmin.PrintInViewList.prototype.getPlacename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewList} returns this
 */
proto.Webadmin.PrintInViewList.prototype.setPlacename = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string title = 6;
 * @return {string}
 */
proto.Webadmin.PrintInViewList.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewList} returns this
 */
proto.Webadmin.PrintInViewList.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string header = 7;
 * @return {string}
 */
proto.Webadmin.PrintInViewList.prototype.getHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewList} returns this
 */
proto.Webadmin.PrintInViewList.prototype.setHeader = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string footer = 8;
 * @return {string}
 */
proto.Webadmin.PrintInViewList.prototype.getFooter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewList} returns this
 */
proto.Webadmin.PrintInViewList.prototype.setFooter = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string timeformat = 9;
 * @return {string}
 */
proto.Webadmin.PrintInViewList.prototype.getTimeformat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewList} returns this
 */
proto.Webadmin.PrintInViewList.prototype.setTimeformat = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool isshowtime = 10;
 * @return {boolean}
 */
proto.Webadmin.PrintInViewList.prototype.getIsshowtime = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintInViewList} returns this
 */
proto.Webadmin.PrintInViewList.prototype.setIsshowtime = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string updated = 11;
 * @return {string}
 */
proto.Webadmin.PrintInViewList.prototype.getUpdated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewList} returns this
 */
proto.Webadmin.PrintInViewList.prototype.setUpdated = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.PrintInViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintInViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintInViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintInViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.PrintInViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintInViewResponse}
 */
proto.Webadmin.PrintInViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintInViewResponse;
  return proto.Webadmin.PrintInViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintInViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintInViewResponse}
 */
proto.Webadmin.PrintInViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.PrintInViewList;
      reader.readMessage(value,proto.Webadmin.PrintInViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintInViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintInViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintInViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.PrintInViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PrintInViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInViewResponse} returns this
 */
proto.Webadmin.PrintInViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PrintInViewList results = 2;
 * @return {!Array<!proto.Webadmin.PrintInViewList>}
 */
proto.Webadmin.PrintInViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.PrintInViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.PrintInViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.PrintInViewList>} value
 * @return {!proto.Webadmin.PrintInViewResponse} returns this
*/
proto.Webadmin.PrintInViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.PrintInViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.PrintInViewList}
 */
proto.Webadmin.PrintInViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.PrintInViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.PrintInViewResponse} returns this
 */
proto.Webadmin.PrintInViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintInEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintInEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintInEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    printid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    title: jspb.Message.getFieldWithDefault(msg, 7, ""),
    header: jspb.Message.getFieldWithDefault(msg, 8, ""),
    footer: jspb.Message.getFieldWithDefault(msg, 9, ""),
    timeformat: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isshowtime: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintInEditRequest}
 */
proto.Webadmin.PrintInEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintInEditRequest;
  return proto.Webadmin.PrintInEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintInEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintInEditRequest}
 */
proto.Webadmin.PrintInEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrintid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeader(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooter(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeformat(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintInEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintInEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintInEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPrintid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getHeader();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFooter();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTimeformat();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsshowtime();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PrintInEditRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditRequest} returns this
 */
proto.Webadmin.PrintInEditRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PrintInEditRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditRequest} returns this
 */
proto.Webadmin.PrintInEditRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PrintInEditRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditRequest} returns this
 */
proto.Webadmin.PrintInEditRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.PrintInEditRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditRequest} returns this
 */
proto.Webadmin.PrintInEditRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PrintInEditRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditRequest} returns this
 */
proto.Webadmin.PrintInEditRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string printid = 6;
 * @return {string}
 */
proto.Webadmin.PrintInEditRequest.prototype.getPrintid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditRequest} returns this
 */
proto.Webadmin.PrintInEditRequest.prototype.setPrintid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string title = 7;
 * @return {string}
 */
proto.Webadmin.PrintInEditRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditRequest} returns this
 */
proto.Webadmin.PrintInEditRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string header = 8;
 * @return {string}
 */
proto.Webadmin.PrintInEditRequest.prototype.getHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditRequest} returns this
 */
proto.Webadmin.PrintInEditRequest.prototype.setHeader = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string footer = 9;
 * @return {string}
 */
proto.Webadmin.PrintInEditRequest.prototype.getFooter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditRequest} returns this
 */
proto.Webadmin.PrintInEditRequest.prototype.setFooter = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string timeformat = 10;
 * @return {string}
 */
proto.Webadmin.PrintInEditRequest.prototype.getTimeformat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditRequest} returns this
 */
proto.Webadmin.PrintInEditRequest.prototype.setTimeformat = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool isshowtime = 11;
 * @return {boolean}
 */
proto.Webadmin.PrintInEditRequest.prototype.getIsshowtime = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintInEditRequest} returns this
 */
proto.Webadmin.PrintInEditRequest.prototype.setIsshowtime = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintInEditList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintInEditList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintInEditList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInEditList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    printid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    header: jspb.Message.getFieldWithDefault(msg, 6, ""),
    footer: jspb.Message.getFieldWithDefault(msg, 7, ""),
    timeformat: jspb.Message.getFieldWithDefault(msg, 8, ""),
    isshowtime: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintInEditList}
 */
proto.Webadmin.PrintInEditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintInEditList;
  return proto.Webadmin.PrintInEditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintInEditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintInEditList}
 */
proto.Webadmin.PrintInEditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrintid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeader(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooter(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeformat(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintInEditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintInEditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintInEditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInEditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrintid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHeader();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFooter();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTimeformat();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIsshowtime();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.PrintInEditList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditList} returns this
 */
proto.Webadmin.PrintInEditList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PrintInEditList.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditList} returns this
 */
proto.Webadmin.PrintInEditList.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string placeid = 3;
 * @return {string}
 */
proto.Webadmin.PrintInEditList.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditList} returns this
 */
proto.Webadmin.PrintInEditList.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string printid = 4;
 * @return {string}
 */
proto.Webadmin.PrintInEditList.prototype.getPrintid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditList} returns this
 */
proto.Webadmin.PrintInEditList.prototype.setPrintid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.Webadmin.PrintInEditList.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditList} returns this
 */
proto.Webadmin.PrintInEditList.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string header = 6;
 * @return {string}
 */
proto.Webadmin.PrintInEditList.prototype.getHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditList} returns this
 */
proto.Webadmin.PrintInEditList.prototype.setHeader = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string footer = 7;
 * @return {string}
 */
proto.Webadmin.PrintInEditList.prototype.getFooter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditList} returns this
 */
proto.Webadmin.PrintInEditList.prototype.setFooter = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string timeformat = 8;
 * @return {string}
 */
proto.Webadmin.PrintInEditList.prototype.getTimeformat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditList} returns this
 */
proto.Webadmin.PrintInEditList.prototype.setTimeformat = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool isshowtime = 9;
 * @return {boolean}
 */
proto.Webadmin.PrintInEditList.prototype.getIsshowtime = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintInEditList} returns this
 */
proto.Webadmin.PrintInEditList.prototype.setIsshowtime = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.PrintInEditResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintInEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintInEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintInEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.PrintInEditList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintInEditResponse}
 */
proto.Webadmin.PrintInEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintInEditResponse;
  return proto.Webadmin.PrintInEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintInEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintInEditResponse}
 */
proto.Webadmin.PrintInEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.PrintInEditList;
      reader.readMessage(value,proto.Webadmin.PrintInEditList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintInEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintInEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintInEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.PrintInEditList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PrintInEditResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInEditResponse} returns this
 */
proto.Webadmin.PrintInEditResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PrintInEditList results = 2;
 * @return {!Array<!proto.Webadmin.PrintInEditList>}
 */
proto.Webadmin.PrintInEditResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.PrintInEditList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.PrintInEditList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.PrintInEditList>} value
 * @return {!proto.Webadmin.PrintInEditResponse} returns this
*/
proto.Webadmin.PrintInEditResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.PrintInEditList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.PrintInEditList}
 */
proto.Webadmin.PrintInEditResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.PrintInEditList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.PrintInEditResponse} returns this
 */
proto.Webadmin.PrintInEditResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintInResetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintInResetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintInResetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInResetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    printid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintInResetRequest}
 */
proto.Webadmin.PrintInResetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintInResetRequest;
  return proto.Webadmin.PrintInResetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintInResetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintInResetRequest}
 */
proto.Webadmin.PrintInResetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrintid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintInResetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintInResetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintInResetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInResetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPrintid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PrintInResetRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInResetRequest} returns this
 */
proto.Webadmin.PrintInResetRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PrintInResetRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInResetRequest} returns this
 */
proto.Webadmin.PrintInResetRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PrintInResetRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInResetRequest} returns this
 */
proto.Webadmin.PrintInResetRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.PrintInResetRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInResetRequest} returns this
 */
proto.Webadmin.PrintInResetRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PrintInResetRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInResetRequest} returns this
 */
proto.Webadmin.PrintInResetRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string printid = 6;
 * @return {string}
 */
proto.Webadmin.PrintInResetRequest.prototype.getPrintid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInResetRequest} returns this
 */
proto.Webadmin.PrintInResetRequest.prototype.setPrintid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintInResetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintInResetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintInResetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInResetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintInResetResponse}
 */
proto.Webadmin.PrintInResetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintInResetResponse;
  return proto.Webadmin.PrintInResetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintInResetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintInResetResponse}
 */
proto.Webadmin.PrintInResetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintInResetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintInResetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintInResetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintInResetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PrintInResetResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintInResetResponse} returns this
 */
proto.Webadmin.PrintInResetResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintOutViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintOutViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintOutViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintOutViewRequest}
 */
proto.Webadmin.PrintOutViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintOutViewRequest;
  return proto.Webadmin.PrintOutViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintOutViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintOutViewRequest}
 */
proto.Webadmin.PrintOutViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintOutViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintOutViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintOutViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PrintOutViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewRequest} returns this
 */
proto.Webadmin.PrintOutViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PrintOutViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewRequest} returns this
 */
proto.Webadmin.PrintOutViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PrintOutViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewRequest} returns this
 */
proto.Webadmin.PrintOutViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.PrintOutViewRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewRequest} returns this
 */
proto.Webadmin.PrintOutViewRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PrintOutViewRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewRequest} returns this
 */
proto.Webadmin.PrintOutViewRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintOutViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintOutViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintOutViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    printid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placename: jspb.Message.getFieldWithDefault(msg, 5, ""),
    title: jspb.Message.getFieldWithDefault(msg, 6, ""),
    header: jspb.Message.getFieldWithDefault(msg, 7, ""),
    footer: jspb.Message.getFieldWithDefault(msg, 8, ""),
    timeformat: jspb.Message.getFieldWithDefault(msg, 9, ""),
    isshowtime: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isshowtimeentry: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isshowtimeout: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isshowtimeduration: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    isshowprice: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    updated: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintOutViewList}
 */
proto.Webadmin.PrintOutViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintOutViewList;
  return proto.Webadmin.PrintOutViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintOutViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintOutViewList}
 */
proto.Webadmin.PrintOutViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrintid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlacename(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeader(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooter(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeformat(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtime(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtimeentry(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtimeout(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtimeduration(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowprice(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintOutViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintOutViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintOutViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrintid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlacename();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHeader();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFooter();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTimeformat();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIsshowtime();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsshowtimeentry();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsshowtimeout();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsshowtimeduration();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsshowprice();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getUpdated();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.PrintOutViewList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string placeid = 2;
 * @return {string}
 */
proto.Webadmin.PrintOutViewList.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string printid = 3;
 * @return {string}
 */
proto.Webadmin.PrintOutViewList.prototype.getPrintid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setPrintid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientname = 4;
 * @return {string}
 */
proto.Webadmin.PrintOutViewList.prototype.getClientname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setClientname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placename = 5;
 * @return {string}
 */
proto.Webadmin.PrintOutViewList.prototype.getPlacename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setPlacename = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string title = 6;
 * @return {string}
 */
proto.Webadmin.PrintOutViewList.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string header = 7;
 * @return {string}
 */
proto.Webadmin.PrintOutViewList.prototype.getHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setHeader = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string footer = 8;
 * @return {string}
 */
proto.Webadmin.PrintOutViewList.prototype.getFooter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setFooter = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string timeformat = 9;
 * @return {string}
 */
proto.Webadmin.PrintOutViewList.prototype.getTimeformat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setTimeformat = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool isshowtime = 10;
 * @return {boolean}
 */
proto.Webadmin.PrintOutViewList.prototype.getIsshowtime = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setIsshowtime = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool isshowtimeentry = 11;
 * @return {boolean}
 */
proto.Webadmin.PrintOutViewList.prototype.getIsshowtimeentry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setIsshowtimeentry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool isshowtimeout = 12;
 * @return {boolean}
 */
proto.Webadmin.PrintOutViewList.prototype.getIsshowtimeout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setIsshowtimeout = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool isshowtimeduration = 13;
 * @return {boolean}
 */
proto.Webadmin.PrintOutViewList.prototype.getIsshowtimeduration = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setIsshowtimeduration = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool isshowprice = 14;
 * @return {boolean}
 */
proto.Webadmin.PrintOutViewList.prototype.getIsshowprice = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setIsshowprice = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional string updated = 15;
 * @return {string}
 */
proto.Webadmin.PrintOutViewList.prototype.getUpdated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewList} returns this
 */
proto.Webadmin.PrintOutViewList.prototype.setUpdated = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.PrintOutViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintOutViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintOutViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintOutViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.PrintOutViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintOutViewResponse}
 */
proto.Webadmin.PrintOutViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintOutViewResponse;
  return proto.Webadmin.PrintOutViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintOutViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintOutViewResponse}
 */
proto.Webadmin.PrintOutViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.PrintOutViewList;
      reader.readMessage(value,proto.Webadmin.PrintOutViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintOutViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintOutViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintOutViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.PrintOutViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PrintOutViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutViewResponse} returns this
 */
proto.Webadmin.PrintOutViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PrintOutViewList results = 2;
 * @return {!Array<!proto.Webadmin.PrintOutViewList>}
 */
proto.Webadmin.PrintOutViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.PrintOutViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.PrintOutViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.PrintOutViewList>} value
 * @return {!proto.Webadmin.PrintOutViewResponse} returns this
*/
proto.Webadmin.PrintOutViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.PrintOutViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.PrintOutViewList}
 */
proto.Webadmin.PrintOutViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.PrintOutViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.PrintOutViewResponse} returns this
 */
proto.Webadmin.PrintOutViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintOutEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintOutEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintOutEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    printid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    title: jspb.Message.getFieldWithDefault(msg, 7, ""),
    header: jspb.Message.getFieldWithDefault(msg, 8, ""),
    footer: jspb.Message.getFieldWithDefault(msg, 9, ""),
    timeformat: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isshowtime: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isshowtimeentry: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isshowtimeout: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    isshowtimeduration: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    isshowprice: jspb.Message.getBooleanFieldWithDefault(msg, 15, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintOutEditRequest}
 */
proto.Webadmin.PrintOutEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintOutEditRequest;
  return proto.Webadmin.PrintOutEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintOutEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintOutEditRequest}
 */
proto.Webadmin.PrintOutEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrintid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeader(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooter(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeformat(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtime(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtimeentry(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtimeout(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtimeduration(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowprice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintOutEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintOutEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintOutEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPrintid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getHeader();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFooter();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTimeformat();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsshowtime();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsshowtimeentry();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsshowtimeout();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsshowtimeduration();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getIsshowprice();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string printid = 6;
 * @return {string}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getPrintid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setPrintid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string title = 7;
 * @return {string}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string header = 8;
 * @return {string}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setHeader = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string footer = 9;
 * @return {string}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getFooter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setFooter = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string timeformat = 10;
 * @return {string}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getTimeformat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setTimeformat = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool isshowtime = 11;
 * @return {boolean}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getIsshowtime = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setIsshowtime = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool isshowtimeentry = 12;
 * @return {boolean}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getIsshowtimeentry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setIsshowtimeentry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool isshowtimeout = 13;
 * @return {boolean}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getIsshowtimeout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setIsshowtimeout = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool isshowtimeduration = 14;
 * @return {boolean}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getIsshowtimeduration = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setIsshowtimeduration = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool isshowprice = 15;
 * @return {boolean}
 */
proto.Webadmin.PrintOutEditRequest.prototype.getIsshowprice = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutEditRequest} returns this
 */
proto.Webadmin.PrintOutEditRequest.prototype.setIsshowprice = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintOutEditList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintOutEditList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintOutEditList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutEditList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    printid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    header: jspb.Message.getFieldWithDefault(msg, 5, ""),
    footer: jspb.Message.getFieldWithDefault(msg, 6, ""),
    timeformat: jspb.Message.getFieldWithDefault(msg, 7, ""),
    isshowtime: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    isshowtimeentry: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    isshowtimeout: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isshowtimeduration: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isshowprice: jspb.Message.getBooleanFieldWithDefault(msg, 12, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintOutEditList}
 */
proto.Webadmin.PrintOutEditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintOutEditList;
  return proto.Webadmin.PrintOutEditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintOutEditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintOutEditList}
 */
proto.Webadmin.PrintOutEditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrintid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeader(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooter(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeformat(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtime(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtimeentry(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtimeout(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowtimeduration(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsshowprice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintOutEditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintOutEditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintOutEditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutEditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrintid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHeader();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFooter();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTimeformat();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIsshowtime();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getIsshowtimeentry();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsshowtimeout();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsshowtimeduration();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsshowprice();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.PrintOutEditList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditList} returns this
 */
proto.Webadmin.PrintOutEditList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string placeid = 2;
 * @return {string}
 */
proto.Webadmin.PrintOutEditList.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditList} returns this
 */
proto.Webadmin.PrintOutEditList.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string printid = 3;
 * @return {string}
 */
proto.Webadmin.PrintOutEditList.prototype.getPrintid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditList} returns this
 */
proto.Webadmin.PrintOutEditList.prototype.setPrintid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.Webadmin.PrintOutEditList.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditList} returns this
 */
proto.Webadmin.PrintOutEditList.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string header = 5;
 * @return {string}
 */
proto.Webadmin.PrintOutEditList.prototype.getHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditList} returns this
 */
proto.Webadmin.PrintOutEditList.prototype.setHeader = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string footer = 6;
 * @return {string}
 */
proto.Webadmin.PrintOutEditList.prototype.getFooter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditList} returns this
 */
proto.Webadmin.PrintOutEditList.prototype.setFooter = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string timeformat = 7;
 * @return {string}
 */
proto.Webadmin.PrintOutEditList.prototype.getTimeformat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditList} returns this
 */
proto.Webadmin.PrintOutEditList.prototype.setTimeformat = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool isshowtime = 8;
 * @return {boolean}
 */
proto.Webadmin.PrintOutEditList.prototype.getIsshowtime = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutEditList} returns this
 */
proto.Webadmin.PrintOutEditList.prototype.setIsshowtime = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool isshowtimeentry = 9;
 * @return {boolean}
 */
proto.Webadmin.PrintOutEditList.prototype.getIsshowtimeentry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutEditList} returns this
 */
proto.Webadmin.PrintOutEditList.prototype.setIsshowtimeentry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool isshowtimeout = 10;
 * @return {boolean}
 */
proto.Webadmin.PrintOutEditList.prototype.getIsshowtimeout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutEditList} returns this
 */
proto.Webadmin.PrintOutEditList.prototype.setIsshowtimeout = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool isshowtimeduration = 11;
 * @return {boolean}
 */
proto.Webadmin.PrintOutEditList.prototype.getIsshowtimeduration = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutEditList} returns this
 */
proto.Webadmin.PrintOutEditList.prototype.setIsshowtimeduration = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool isshowprice = 12;
 * @return {boolean}
 */
proto.Webadmin.PrintOutEditList.prototype.getIsshowprice = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.PrintOutEditList} returns this
 */
proto.Webadmin.PrintOutEditList.prototype.setIsshowprice = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.PrintOutEditResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintOutEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintOutEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintOutEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.PrintOutEditList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintOutEditResponse}
 */
proto.Webadmin.PrintOutEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintOutEditResponse;
  return proto.Webadmin.PrintOutEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintOutEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintOutEditResponse}
 */
proto.Webadmin.PrintOutEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.PrintOutEditList;
      reader.readMessage(value,proto.Webadmin.PrintOutEditList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintOutEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintOutEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintOutEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.PrintOutEditList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PrintOutEditResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutEditResponse} returns this
 */
proto.Webadmin.PrintOutEditResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PrintOutEditList results = 2;
 * @return {!Array<!proto.Webadmin.PrintOutEditList>}
 */
proto.Webadmin.PrintOutEditResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.PrintOutEditList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.PrintOutEditList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.PrintOutEditList>} value
 * @return {!proto.Webadmin.PrintOutEditResponse} returns this
*/
proto.Webadmin.PrintOutEditResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.PrintOutEditList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.PrintOutEditList}
 */
proto.Webadmin.PrintOutEditResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.PrintOutEditList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.PrintOutEditResponse} returns this
 */
proto.Webadmin.PrintOutEditResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintOutResetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintOutResetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintOutResetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutResetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    printid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintOutResetRequest}
 */
proto.Webadmin.PrintOutResetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintOutResetRequest;
  return proto.Webadmin.PrintOutResetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintOutResetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintOutResetRequest}
 */
proto.Webadmin.PrintOutResetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrintid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintOutResetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintOutResetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintOutResetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutResetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPrintid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PrintOutResetRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutResetRequest} returns this
 */
proto.Webadmin.PrintOutResetRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PrintOutResetRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutResetRequest} returns this
 */
proto.Webadmin.PrintOutResetRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PrintOutResetRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutResetRequest} returns this
 */
proto.Webadmin.PrintOutResetRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.PrintOutResetRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutResetRequest} returns this
 */
proto.Webadmin.PrintOutResetRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.PrintOutResetRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutResetRequest} returns this
 */
proto.Webadmin.PrintOutResetRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string printid = 6;
 * @return {string}
 */
proto.Webadmin.PrintOutResetRequest.prototype.getPrintid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutResetRequest} returns this
 */
proto.Webadmin.PrintOutResetRequest.prototype.setPrintid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PrintOutResetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PrintOutResetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PrintOutResetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutResetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PrintOutResetResponse}
 */
proto.Webadmin.PrintOutResetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PrintOutResetResponse;
  return proto.Webadmin.PrintOutResetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PrintOutResetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PrintOutResetResponse}
 */
proto.Webadmin.PrintOutResetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PrintOutResetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PrintOutResetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PrintOutResetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PrintOutResetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PrintOutResetResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PrintOutResetResponse} returns this
 */
proto.Webadmin.PrintOutResetResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GenerateConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GenerateConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GenerateConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GenerateConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GenerateConfigRequest}
 */
proto.Webadmin.GenerateConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GenerateConfigRequest;
  return proto.Webadmin.GenerateConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GenerateConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GenerateConfigRequest}
 */
proto.Webadmin.GenerateConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GenerateConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GenerateConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GenerateConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GenerateConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GenerateConfigRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GenerateConfigRequest} returns this
 */
proto.Webadmin.GenerateConfigRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GenerateConfigRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GenerateConfigRequest} returns this
 */
proto.Webadmin.GenerateConfigRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GenerateConfigRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GenerateConfigRequest} returns this
 */
proto.Webadmin.GenerateConfigRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GenerateConfigRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GenerateConfigRequest} returns this
 */
proto.Webadmin.GenerateConfigRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GenerateConfigRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GenerateConfigRequest} returns this
 */
proto.Webadmin.GenerateConfigRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gateid = 6;
 * @return {string}
 */
proto.Webadmin.GenerateConfigRequest.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GenerateConfigRequest} returns this
 */
proto.Webadmin.GenerateConfigRequest.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GenerateConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GenerateConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GenerateConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GenerateConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GenerateConfigResponse}
 */
proto.Webadmin.GenerateConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GenerateConfigResponse;
  return proto.Webadmin.GenerateConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GenerateConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GenerateConfigResponse}
 */
proto.Webadmin.GenerateConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GenerateConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GenerateConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GenerateConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GenerateConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GenerateConfigResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GenerateConfigResponse} returns this
 */
proto.Webadmin.GenerateConfigResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoryViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoryViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoryViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoryViewRequest}
 */
proto.Webadmin.CategoryViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoryViewRequest;
  return proto.Webadmin.CategoryViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoryViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoryViewRequest}
 */
proto.Webadmin.CategoryViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoryViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoryViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoryViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.CategoryViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryViewRequest} returns this
 */
proto.Webadmin.CategoryViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.CategoryViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryViewRequest} returns this
 */
proto.Webadmin.CategoryViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.CategoryViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryViewRequest} returns this
 */
proto.Webadmin.CategoryViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoryViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoryViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoryViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoryViewList}
 */
proto.Webadmin.CategoryViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoryViewList;
  return proto.Webadmin.CategoryViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoryViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoryViewList}
 */
proto.Webadmin.CategoryViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoryViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoryViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoryViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string categoryid = 1;
 * @return {string}
 */
proto.Webadmin.CategoryViewList.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryViewList} returns this
 */
proto.Webadmin.CategoryViewList.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.CategoryViewList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryViewList} returns this
 */
proto.Webadmin.CategoryViewList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool isactive = 3;
 * @return {boolean}
 */
proto.Webadmin.CategoryViewList.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.CategoryViewList} returns this
 */
proto.Webadmin.CategoryViewList.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.CategoryViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoryViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoryViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoryViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.CategoryViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoryViewResponse}
 */
proto.Webadmin.CategoryViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoryViewResponse;
  return proto.Webadmin.CategoryViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoryViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoryViewResponse}
 */
proto.Webadmin.CategoryViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.CategoryViewList;
      reader.readMessage(value,proto.Webadmin.CategoryViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoryViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoryViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoryViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.CategoryViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.CategoryViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryViewResponse} returns this
 */
proto.Webadmin.CategoryViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CategoryViewList results = 2;
 * @return {!Array<!proto.Webadmin.CategoryViewList>}
 */
proto.Webadmin.CategoryViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.CategoryViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.CategoryViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.CategoryViewList>} value
 * @return {!proto.Webadmin.CategoryViewResponse} returns this
*/
proto.Webadmin.CategoryViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.CategoryViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.CategoryViewList}
 */
proto.Webadmin.CategoryViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.CategoryViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.CategoryViewResponse} returns this
 */
proto.Webadmin.CategoryViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoryAddRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoryAddRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoryAddRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryAddRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoryAddRequest}
 */
proto.Webadmin.CategoryAddRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoryAddRequest;
  return proto.Webadmin.CategoryAddRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoryAddRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoryAddRequest}
 */
proto.Webadmin.CategoryAddRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoryAddRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoryAddRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoryAddRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryAddRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.CategoryAddRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryAddRequest} returns this
 */
proto.Webadmin.CategoryAddRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.CategoryAddRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryAddRequest} returns this
 */
proto.Webadmin.CategoryAddRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.CategoryAddRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryAddRequest} returns this
 */
proto.Webadmin.CategoryAddRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.Webadmin.CategoryAddRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryAddRequest} returns this
 */
proto.Webadmin.CategoryAddRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoryAddList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoryAddList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoryAddList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryAddList.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoryAddList}
 */
proto.Webadmin.CategoryAddList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoryAddList;
  return proto.Webadmin.CategoryAddList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoryAddList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoryAddList}
 */
proto.Webadmin.CategoryAddList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoryAddList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoryAddList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoryAddList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryAddList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string categoryid = 1;
 * @return {string}
 */
proto.Webadmin.CategoryAddList.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryAddList} returns this
 */
proto.Webadmin.CategoryAddList.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.CategoryAddList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryAddList} returns this
 */
proto.Webadmin.CategoryAddList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.CategoryAddResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoryAddResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoryAddResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoryAddResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryAddResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.CategoryAddList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoryAddResponse}
 */
proto.Webadmin.CategoryAddResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoryAddResponse;
  return proto.Webadmin.CategoryAddResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoryAddResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoryAddResponse}
 */
proto.Webadmin.CategoryAddResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.CategoryAddList;
      reader.readMessage(value,proto.Webadmin.CategoryAddList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoryAddResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoryAddResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoryAddResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryAddResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.CategoryAddList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.CategoryAddResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryAddResponse} returns this
 */
proto.Webadmin.CategoryAddResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CategoryAddList results = 2;
 * @return {!Array<!proto.Webadmin.CategoryAddList>}
 */
proto.Webadmin.CategoryAddResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.CategoryAddList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.CategoryAddList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.CategoryAddList>} value
 * @return {!proto.Webadmin.CategoryAddResponse} returns this
*/
proto.Webadmin.CategoryAddResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.CategoryAddList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.CategoryAddList}
 */
proto.Webadmin.CategoryAddResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.CategoryAddList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.CategoryAddResponse} returns this
 */
proto.Webadmin.CategoryAddResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoryEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoryEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoryEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    categoryid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoryEditRequest}
 */
proto.Webadmin.CategoryEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoryEditRequest;
  return proto.Webadmin.CategoryEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoryEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoryEditRequest}
 */
proto.Webadmin.CategoryEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoryEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoryEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoryEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.CategoryEditRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryEditRequest} returns this
 */
proto.Webadmin.CategoryEditRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.CategoryEditRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryEditRequest} returns this
 */
proto.Webadmin.CategoryEditRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.CategoryEditRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryEditRequest} returns this
 */
proto.Webadmin.CategoryEditRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string categoryid = 4;
 * @return {string}
 */
proto.Webadmin.CategoryEditRequest.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryEditRequest} returns this
 */
proto.Webadmin.CategoryEditRequest.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.Webadmin.CategoryEditRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryEditRequest} returns this
 */
proto.Webadmin.CategoryEditRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoryEditList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoryEditList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoryEditList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryEditList.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoryEditList}
 */
proto.Webadmin.CategoryEditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoryEditList;
  return proto.Webadmin.CategoryEditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoryEditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoryEditList}
 */
proto.Webadmin.CategoryEditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoryEditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoryEditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoryEditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryEditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string categoryid = 1;
 * @return {string}
 */
proto.Webadmin.CategoryEditList.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryEditList} returns this
 */
proto.Webadmin.CategoryEditList.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.CategoryEditList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryEditList} returns this
 */
proto.Webadmin.CategoryEditList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.CategoryEditResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoryEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoryEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoryEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.CategoryEditList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoryEditResponse}
 */
proto.Webadmin.CategoryEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoryEditResponse;
  return proto.Webadmin.CategoryEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoryEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoryEditResponse}
 */
proto.Webadmin.CategoryEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.CategoryEditList;
      reader.readMessage(value,proto.Webadmin.CategoryEditList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoryEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoryEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoryEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.CategoryEditList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.CategoryEditResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryEditResponse} returns this
 */
proto.Webadmin.CategoryEditResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CategoryEditList results = 2;
 * @return {!Array<!proto.Webadmin.CategoryEditList>}
 */
proto.Webadmin.CategoryEditResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.CategoryEditList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.CategoryEditList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.CategoryEditList>} value
 * @return {!proto.Webadmin.CategoryEditResponse} returns this
*/
proto.Webadmin.CategoryEditResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.CategoryEditList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.CategoryEditList}
 */
proto.Webadmin.CategoryEditResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.CategoryEditList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.CategoryEditResponse} returns this
 */
proto.Webadmin.CategoryEditResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoryToggleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoryToggleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoryToggleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryToggleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    categoryid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoryToggleRequest}
 */
proto.Webadmin.CategoryToggleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoryToggleRequest;
  return proto.Webadmin.CategoryToggleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoryToggleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoryToggleRequest}
 */
proto.Webadmin.CategoryToggleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoryToggleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoryToggleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoryToggleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryToggleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.CategoryToggleRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryToggleRequest} returns this
 */
proto.Webadmin.CategoryToggleRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.CategoryToggleRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryToggleRequest} returns this
 */
proto.Webadmin.CategoryToggleRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.CategoryToggleRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryToggleRequest} returns this
 */
proto.Webadmin.CategoryToggleRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string categoryid = 4;
 * @return {string}
 */
proto.Webadmin.CategoryToggleRequest.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryToggleRequest} returns this
 */
proto.Webadmin.CategoryToggleRequest.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoryToggleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoryToggleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoryToggleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryToggleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoryToggleResponse}
 */
proto.Webadmin.CategoryToggleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoryToggleResponse;
  return proto.Webadmin.CategoryToggleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoryToggleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoryToggleResponse}
 */
proto.Webadmin.CategoryToggleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoryToggleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoryToggleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoryToggleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoryToggleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.CategoryToggleResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoryToggleResponse} returns this
 */
proto.Webadmin.CategoryToggleResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypeViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypeViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypeViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypeViewRequest}
 */
proto.Webadmin.TypeViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypeViewRequest;
  return proto.Webadmin.TypeViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypeViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypeViewRequest}
 */
proto.Webadmin.TypeViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypeViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypeViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypeViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.TypeViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeViewRequest} returns this
 */
proto.Webadmin.TypeViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.TypeViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeViewRequest} returns this
 */
proto.Webadmin.TypeViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.TypeViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeViewRequest} returns this
 */
proto.Webadmin.TypeViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypeViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypeViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypeViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypeViewList}
 */
proto.Webadmin.TypeViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypeViewList;
  return proto.Webadmin.TypeViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypeViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypeViewList}
 */
proto.Webadmin.TypeViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypeViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypeViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypeViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string typeid = 1;
 * @return {string}
 */
proto.Webadmin.TypeViewList.prototype.getTypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeViewList} returns this
 */
proto.Webadmin.TypeViewList.prototype.setTypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.TypeViewList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeViewList} returns this
 */
proto.Webadmin.TypeViewList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool isactive = 3;
 * @return {boolean}
 */
proto.Webadmin.TypeViewList.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.TypeViewList} returns this
 */
proto.Webadmin.TypeViewList.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.TypeViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypeViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypeViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypeViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.TypeViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypeViewResponse}
 */
proto.Webadmin.TypeViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypeViewResponse;
  return proto.Webadmin.TypeViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypeViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypeViewResponse}
 */
proto.Webadmin.TypeViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.TypeViewList;
      reader.readMessage(value,proto.Webadmin.TypeViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypeViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypeViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypeViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.TypeViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.TypeViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeViewResponse} returns this
 */
proto.Webadmin.TypeViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated TypeViewList results = 2;
 * @return {!Array<!proto.Webadmin.TypeViewList>}
 */
proto.Webadmin.TypeViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.TypeViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.TypeViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.TypeViewList>} value
 * @return {!proto.Webadmin.TypeViewResponse} returns this
*/
proto.Webadmin.TypeViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.TypeViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.TypeViewList}
 */
proto.Webadmin.TypeViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.TypeViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.TypeViewResponse} returns this
 */
proto.Webadmin.TypeViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypeAddRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypeAddRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypeAddRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeAddRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypeAddRequest}
 */
proto.Webadmin.TypeAddRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypeAddRequest;
  return proto.Webadmin.TypeAddRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypeAddRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypeAddRequest}
 */
proto.Webadmin.TypeAddRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypeAddRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypeAddRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypeAddRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeAddRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.TypeAddRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeAddRequest} returns this
 */
proto.Webadmin.TypeAddRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.TypeAddRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeAddRequest} returns this
 */
proto.Webadmin.TypeAddRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.TypeAddRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeAddRequest} returns this
 */
proto.Webadmin.TypeAddRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.Webadmin.TypeAddRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeAddRequest} returns this
 */
proto.Webadmin.TypeAddRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypeAddList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypeAddList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypeAddList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeAddList.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypeAddList}
 */
proto.Webadmin.TypeAddList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypeAddList;
  return proto.Webadmin.TypeAddList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypeAddList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypeAddList}
 */
proto.Webadmin.TypeAddList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypeAddList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypeAddList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypeAddList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeAddList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string typeid = 1;
 * @return {string}
 */
proto.Webadmin.TypeAddList.prototype.getTypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeAddList} returns this
 */
proto.Webadmin.TypeAddList.prototype.setTypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.TypeAddList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeAddList} returns this
 */
proto.Webadmin.TypeAddList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.TypeAddResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypeAddResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypeAddResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypeAddResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeAddResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.TypeAddList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypeAddResponse}
 */
proto.Webadmin.TypeAddResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypeAddResponse;
  return proto.Webadmin.TypeAddResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypeAddResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypeAddResponse}
 */
proto.Webadmin.TypeAddResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.TypeAddList;
      reader.readMessage(value,proto.Webadmin.TypeAddList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypeAddResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypeAddResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypeAddResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeAddResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.TypeAddList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.TypeAddResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeAddResponse} returns this
 */
proto.Webadmin.TypeAddResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated TypeAddList results = 2;
 * @return {!Array<!proto.Webadmin.TypeAddList>}
 */
proto.Webadmin.TypeAddResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.TypeAddList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.TypeAddList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.TypeAddList>} value
 * @return {!proto.Webadmin.TypeAddResponse} returns this
*/
proto.Webadmin.TypeAddResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.TypeAddList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.TypeAddList}
 */
proto.Webadmin.TypeAddResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.TypeAddList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.TypeAddResponse} returns this
 */
proto.Webadmin.TypeAddResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypeEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypeEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypeEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    typeid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypeEditRequest}
 */
proto.Webadmin.TypeEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypeEditRequest;
  return proto.Webadmin.TypeEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypeEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypeEditRequest}
 */
proto.Webadmin.TypeEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypeEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypeEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypeEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTypeid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.TypeEditRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeEditRequest} returns this
 */
proto.Webadmin.TypeEditRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.TypeEditRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeEditRequest} returns this
 */
proto.Webadmin.TypeEditRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.TypeEditRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeEditRequest} returns this
 */
proto.Webadmin.TypeEditRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string typeid = 4;
 * @return {string}
 */
proto.Webadmin.TypeEditRequest.prototype.getTypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeEditRequest} returns this
 */
proto.Webadmin.TypeEditRequest.prototype.setTypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.Webadmin.TypeEditRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeEditRequest} returns this
 */
proto.Webadmin.TypeEditRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypeEditList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypeEditList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypeEditList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeEditList.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypeEditList}
 */
proto.Webadmin.TypeEditList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypeEditList;
  return proto.Webadmin.TypeEditList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypeEditList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypeEditList}
 */
proto.Webadmin.TypeEditList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypeEditList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypeEditList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypeEditList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeEditList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string typeid = 1;
 * @return {string}
 */
proto.Webadmin.TypeEditList.prototype.getTypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeEditList} returns this
 */
proto.Webadmin.TypeEditList.prototype.setTypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.TypeEditList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeEditList} returns this
 */
proto.Webadmin.TypeEditList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.TypeEditResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypeEditResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypeEditResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypeEditResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeEditResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.TypeEditList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypeEditResponse}
 */
proto.Webadmin.TypeEditResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypeEditResponse;
  return proto.Webadmin.TypeEditResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypeEditResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypeEditResponse}
 */
proto.Webadmin.TypeEditResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.TypeEditList;
      reader.readMessage(value,proto.Webadmin.TypeEditList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypeEditResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypeEditResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypeEditResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeEditResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.TypeEditList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.TypeEditResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeEditResponse} returns this
 */
proto.Webadmin.TypeEditResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated TypeEditList results = 2;
 * @return {!Array<!proto.Webadmin.TypeEditList>}
 */
proto.Webadmin.TypeEditResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.TypeEditList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.TypeEditList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.TypeEditList>} value
 * @return {!proto.Webadmin.TypeEditResponse} returns this
*/
proto.Webadmin.TypeEditResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.TypeEditList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.TypeEditList}
 */
proto.Webadmin.TypeEditResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.TypeEditList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.TypeEditResponse} returns this
 */
proto.Webadmin.TypeEditResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypeToggleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypeToggleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypeToggleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeToggleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    typeid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypeToggleRequest}
 */
proto.Webadmin.TypeToggleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypeToggleRequest;
  return proto.Webadmin.TypeToggleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypeToggleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypeToggleRequest}
 */
proto.Webadmin.TypeToggleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypeToggleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypeToggleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypeToggleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeToggleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTypeid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.TypeToggleRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeToggleRequest} returns this
 */
proto.Webadmin.TypeToggleRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.TypeToggleRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeToggleRequest} returns this
 */
proto.Webadmin.TypeToggleRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.TypeToggleRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeToggleRequest} returns this
 */
proto.Webadmin.TypeToggleRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string typeid = 4;
 * @return {string}
 */
proto.Webadmin.TypeToggleRequest.prototype.getTypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeToggleRequest} returns this
 */
proto.Webadmin.TypeToggleRequest.prototype.setTypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypeToggleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypeToggleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypeToggleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeToggleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypeToggleResponse}
 */
proto.Webadmin.TypeToggleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypeToggleResponse;
  return proto.Webadmin.TypeToggleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypeToggleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypeToggleResponse}
 */
proto.Webadmin.TypeToggleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypeToggleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypeToggleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypeToggleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypeToggleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.TypeToggleResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypeToggleResponse} returns this
 */
proto.Webadmin.TypeToggleResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    start: jspb.Message.getFieldWithDefault(msg, 6, ""),
    end: jspb.Message.getFieldWithDefault(msg, 7, ""),
    status: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TransactionRequest}
 */
proto.Webadmin.TransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TransactionRequest;
  return proto.Webadmin.TransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TransactionRequest}
 */
proto.Webadmin.TransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStart(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnd(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStart();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEnd();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.TransactionRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionRequest} returns this
 */
proto.Webadmin.TransactionRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.TransactionRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionRequest} returns this
 */
proto.Webadmin.TransactionRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.TransactionRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionRequest} returns this
 */
proto.Webadmin.TransactionRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.TransactionRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionRequest} returns this
 */
proto.Webadmin.TransactionRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.TransactionRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionRequest} returns this
 */
proto.Webadmin.TransactionRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string start = 6;
 * @return {string}
 */
proto.Webadmin.TransactionRequest.prototype.getStart = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionRequest} returns this
 */
proto.Webadmin.TransactionRequest.prototype.setStart = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string end = 7;
 * @return {string}
 */
proto.Webadmin.TransactionRequest.prototype.getEnd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionRequest} returns this
 */
proto.Webadmin.TransactionRequest.prototype.setEnd = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string status = 8;
 * @return {string}
 */
proto.Webadmin.TransactionRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionRequest} returns this
 */
proto.Webadmin.TransactionRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TransactionList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TransactionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TransactionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TransactionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    placename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    gatein: jspb.Message.getFieldWithDefault(msg, 4, ""),
    gateout: jspb.Message.getFieldWithDefault(msg, 5, ""),
    datein: jspb.Message.getFieldWithDefault(msg, 6, ""),
    dateout: jspb.Message.getFieldWithDefault(msg, 7, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 8, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    fee: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    plate: jspb.Message.getFieldWithDefault(msg, 12, ""),
    vehicle: jspb.Message.getFieldWithDefault(msg, 13, ""),
    imagein: jspb.Message.getFieldWithDefault(msg, 14, ""),
    imageout: jspb.Message.getFieldWithDefault(msg, 15, ""),
    qrdata: jspb.Message.getFieldWithDefault(msg, 16, ""),
    status: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TransactionList}
 */
proto.Webadmin.TransactionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TransactionList;
  return proto.Webadmin.TransactionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TransactionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TransactionList}
 */
proto.Webadmin.TransactionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlacename(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGatein(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateout(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatein(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateout(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDuration(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFee(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlate(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setVehicle(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setImagein(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageout(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setQrdata(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TransactionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TransactionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TransactionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TransactionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPlacename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGatein();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGateout();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDatein();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDateout();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDuration();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getFee();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getPlate();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getVehicle();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getImagein();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getImageout();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getQrdata();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string transactionid = 1;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getTransactionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setTransactionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string clientname = 2;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getClientname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setClientname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string placename = 3;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getPlacename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setPlacename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string gatein = 4;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getGatein = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setGatein = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string gateout = 5;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getGateout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setGateout = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string datein = 6;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getDatein = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setDatein = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string dateout = 7;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getDateout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setDateout = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string duration = 8;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getDuration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setDuration = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional double price = 9;
 * @return {number}
 */
proto.Webadmin.TransactionList.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double fee = 10;
 * @return {number}
 */
proto.Webadmin.TransactionList.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double amount = 11;
 * @return {number}
 */
proto.Webadmin.TransactionList.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional string plate = 12;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getPlate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setPlate = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string vehicle = 13;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getVehicle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setVehicle = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string imagein = 14;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getImagein = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setImagein = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string imageout = 15;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getImageout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setImageout = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string qrdata = 16;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getQrdata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setQrdata = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string status = 17;
 * @return {string}
 */
proto.Webadmin.TransactionList.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionList} returns this
 */
proto.Webadmin.TransactionList.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.TransactionResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.TransactionList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TransactionResponse}
 */
proto.Webadmin.TransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TransactionResponse;
  return proto.Webadmin.TransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TransactionResponse}
 */
proto.Webadmin.TransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.TransactionList;
      reader.readMessage(value,proto.Webadmin.TransactionList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.TransactionList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.TransactionResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TransactionResponse} returns this
 */
proto.Webadmin.TransactionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated TransactionList results = 2;
 * @return {!Array<!proto.Webadmin.TransactionList>}
 */
proto.Webadmin.TransactionResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.TransactionList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.TransactionList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.TransactionList>} value
 * @return {!proto.Webadmin.TransactionResponse} returns this
*/
proto.Webadmin.TransactionResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.TransactionList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.TransactionList}
 */
proto.Webadmin.TransactionResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.TransactionList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.TransactionResponse} returns this
 */
proto.Webadmin.TransactionResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateReportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateReportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateReportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateReportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gateid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    datestart: jspb.Message.getFieldWithDefault(msg, 7, ""),
    dateend: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateReportRequest}
 */
proto.Webadmin.GateReportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateReportRequest;
  return proto.Webadmin.GateReportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateReportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateReportRequest}
 */
proto.Webadmin.GateReportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatestart(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateend(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateReportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateReportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateReportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateReportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGateid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDatestart();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDateend();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.GateReportRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportRequest} returns this
 */
proto.Webadmin.GateReportRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.GateReportRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportRequest} returns this
 */
proto.Webadmin.GateReportRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.GateReportRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportRequest} returns this
 */
proto.Webadmin.GateReportRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.GateReportRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportRequest} returns this
 */
proto.Webadmin.GateReportRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.GateReportRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportRequest} returns this
 */
proto.Webadmin.GateReportRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string gateid = 6;
 * @return {string}
 */
proto.Webadmin.GateReportRequest.prototype.getGateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportRequest} returns this
 */
proto.Webadmin.GateReportRequest.prototype.setGateid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string datestart = 7;
 * @return {string}
 */
proto.Webadmin.GateReportRequest.prototype.getDatestart = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportRequest} returns this
 */
proto.Webadmin.GateReportRequest.prototype.setDatestart = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string dateend = 8;
 * @return {string}
 */
proto.Webadmin.GateReportRequest.prototype.getDateend = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportRequest} returns this
 */
proto.Webadmin.GateReportRequest.prototype.setDateend = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string status = 9;
 * @return {string}
 */
proto.Webadmin.GateReportRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportRequest} returns this
 */
proto.Webadmin.GateReportRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateReportList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateReportList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateReportList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateReportList.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    placename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    gatein: jspb.Message.getFieldWithDefault(msg, 4, ""),
    gateout: jspb.Message.getFieldWithDefault(msg, 5, ""),
    datein: jspb.Message.getFieldWithDefault(msg, 6, ""),
    dateout: jspb.Message.getFieldWithDefault(msg, 7, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 8, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    fee: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    qrdata: jspb.Message.getFieldWithDefault(msg, 12, ""),
    status: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateReportList}
 */
proto.Webadmin.GateReportList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateReportList;
  return proto.Webadmin.GateReportList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateReportList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateReportList}
 */
proto.Webadmin.GateReportList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlacename(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGatein(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateout(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatein(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateout(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDuration(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFee(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setQrdata(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateReportList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateReportList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateReportList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateReportList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPlacename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGatein();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGateout();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDatein();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDateout();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDuration();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getFee();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getQrdata();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string transactionid = 1;
 * @return {string}
 */
proto.Webadmin.GateReportList.prototype.getTransactionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setTransactionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string clientname = 2;
 * @return {string}
 */
proto.Webadmin.GateReportList.prototype.getClientname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setClientname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string placename = 3;
 * @return {string}
 */
proto.Webadmin.GateReportList.prototype.getPlacename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setPlacename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string gatein = 4;
 * @return {string}
 */
proto.Webadmin.GateReportList.prototype.getGatein = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setGatein = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string gateout = 5;
 * @return {string}
 */
proto.Webadmin.GateReportList.prototype.getGateout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setGateout = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string datein = 6;
 * @return {string}
 */
proto.Webadmin.GateReportList.prototype.getDatein = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setDatein = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string dateout = 7;
 * @return {string}
 */
proto.Webadmin.GateReportList.prototype.getDateout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setDateout = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string duration = 8;
 * @return {string}
 */
proto.Webadmin.GateReportList.prototype.getDuration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setDuration = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional double price = 9;
 * @return {number}
 */
proto.Webadmin.GateReportList.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double fee = 10;
 * @return {number}
 */
proto.Webadmin.GateReportList.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setFee = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double amount = 11;
 * @return {number}
 */
proto.Webadmin.GateReportList.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional string qrdata = 12;
 * @return {string}
 */
proto.Webadmin.GateReportList.prototype.getQrdata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setQrdata = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string status = 13;
 * @return {string}
 */
proto.Webadmin.GateReportList.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportList} returns this
 */
proto.Webadmin.GateReportList.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.GateReportResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.GateReportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.GateReportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.GateReportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateReportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.GateReportList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.GateReportResponse}
 */
proto.Webadmin.GateReportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.GateReportResponse;
  return proto.Webadmin.GateReportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.GateReportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.GateReportResponse}
 */
proto.Webadmin.GateReportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.GateReportList;
      reader.readMessage(value,proto.Webadmin.GateReportList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.GateReportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.GateReportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.GateReportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.GateReportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.GateReportList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.GateReportResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.GateReportResponse} returns this
 */
proto.Webadmin.GateReportResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated GateReportList results = 2;
 * @return {!Array<!proto.Webadmin.GateReportList>}
 */
proto.Webadmin.GateReportResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.GateReportList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.GateReportList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.GateReportList>} value
 * @return {!proto.Webadmin.GateReportResponse} returns this
*/
proto.Webadmin.GateReportResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.GateReportList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.GateReportList}
 */
proto.Webadmin.GateReportResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.GateReportList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.GateReportResponse} returns this
 */
proto.Webadmin.GateReportResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminRolesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminRolesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminRolesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminRolesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminRolesRequest}
 */
proto.Webadmin.AdminRolesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminRolesRequest;
  return proto.Webadmin.AdminRolesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminRolesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminRolesRequest}
 */
proto.Webadmin.AdminRolesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminRolesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminRolesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminRolesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminRolesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.AdminRolesRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminRolesRequest} returns this
 */
proto.Webadmin.AdminRolesRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.AdminRolesRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminRolesRequest} returns this
 */
proto.Webadmin.AdminRolesRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.AdminRolesRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminRolesRequest} returns this
 */
proto.Webadmin.AdminRolesRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminRolesList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminRolesList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminRolesList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminRolesList.toObject = function(includeInstance, msg) {
  var f, obj = {
    roleid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminRolesList}
 */
proto.Webadmin.AdminRolesList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminRolesList;
  return proto.Webadmin.AdminRolesList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminRolesList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminRolesList}
 */
proto.Webadmin.AdminRolesList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoleid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminRolesList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminRolesList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminRolesList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminRolesList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoleid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string roleid = 1;
 * @return {string}
 */
proto.Webadmin.AdminRolesList.prototype.getRoleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminRolesList} returns this
 */
proto.Webadmin.AdminRolesList.prototype.setRoleid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.AdminRolesList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminRolesList} returns this
 */
proto.Webadmin.AdminRolesList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.AdminRolesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.AdminRolesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.AdminRolesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.AdminRolesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminRolesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.AdminRolesList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.AdminRolesResponse}
 */
proto.Webadmin.AdminRolesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.AdminRolesResponse;
  return proto.Webadmin.AdminRolesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.AdminRolesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.AdminRolesResponse}
 */
proto.Webadmin.AdminRolesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.AdminRolesList;
      reader.readMessage(value,proto.Webadmin.AdminRolesList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.AdminRolesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.AdminRolesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.AdminRolesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.AdminRolesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.AdminRolesList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.AdminRolesResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.AdminRolesResponse} returns this
 */
proto.Webadmin.AdminRolesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated AdminRolesList results = 2;
 * @return {!Array<!proto.Webadmin.AdminRolesList>}
 */
proto.Webadmin.AdminRolesResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.AdminRolesList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.AdminRolesList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.AdminRolesList>} value
 * @return {!proto.Webadmin.AdminRolesResponse} returns this
*/
proto.Webadmin.AdminRolesResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.AdminRolesList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.AdminRolesList}
 */
proto.Webadmin.AdminRolesResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.AdminRolesList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.AdminRolesResponse} returns this
 */
proto.Webadmin.AdminRolesResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientRolesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientRolesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientRolesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientRolesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientRolesRequest}
 */
proto.Webadmin.ClientRolesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientRolesRequest;
  return proto.Webadmin.ClientRolesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientRolesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientRolesRequest}
 */
proto.Webadmin.ClientRolesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientRolesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientRolesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientRolesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientRolesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientRolesRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientRolesRequest} returns this
 */
proto.Webadmin.ClientRolesRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientRolesRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientRolesRequest} returns this
 */
proto.Webadmin.ClientRolesRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientRolesRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientRolesRequest} returns this
 */
proto.Webadmin.ClientRolesRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientRolesList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientRolesList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientRolesList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientRolesList.toObject = function(includeInstance, msg) {
  var f, obj = {
    roleid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientRolesList}
 */
proto.Webadmin.ClientRolesList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientRolesList;
  return proto.Webadmin.ClientRolesList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientRolesList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientRolesList}
 */
proto.Webadmin.ClientRolesList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoleid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientRolesList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientRolesList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientRolesList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientRolesList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoleid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string roleid = 1;
 * @return {string}
 */
proto.Webadmin.ClientRolesList.prototype.getRoleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientRolesList} returns this
 */
proto.Webadmin.ClientRolesList.prototype.setRoleid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.ClientRolesList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientRolesList} returns this
 */
proto.Webadmin.ClientRolesList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.ClientRolesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientRolesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientRolesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientRolesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientRolesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.ClientRolesList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientRolesResponse}
 */
proto.Webadmin.ClientRolesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientRolesResponse;
  return proto.Webadmin.ClientRolesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientRolesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientRolesResponse}
 */
proto.Webadmin.ClientRolesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.ClientRolesList;
      reader.readMessage(value,proto.Webadmin.ClientRolesList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientRolesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientRolesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientRolesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientRolesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.ClientRolesList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientRolesResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientRolesResponse} returns this
 */
proto.Webadmin.ClientRolesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ClientRolesList results = 2;
 * @return {!Array<!proto.Webadmin.ClientRolesList>}
 */
proto.Webadmin.ClientRolesResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.ClientRolesList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.ClientRolesList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.ClientRolesList>} value
 * @return {!proto.Webadmin.ClientRolesResponse} returns this
*/
proto.Webadmin.ClientRolesResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.ClientRolesList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.ClientRolesList}
 */
proto.Webadmin.ClientRolesResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.ClientRolesList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.ClientRolesResponse} returns this
 */
proto.Webadmin.ClientRolesResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoriesRequest}
 */
proto.Webadmin.CategoriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoriesRequest;
  return proto.Webadmin.CategoriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoriesRequest}
 */
proto.Webadmin.CategoriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoriesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.CategoriesRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoriesRequest} returns this
 */
proto.Webadmin.CategoriesRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.CategoriesRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoriesRequest} returns this
 */
proto.Webadmin.CategoriesRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.CategoriesRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoriesRequest} returns this
 */
proto.Webadmin.CategoriesRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoriesList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoriesList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoriesList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoriesList.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoriesList}
 */
proto.Webadmin.CategoriesList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoriesList;
  return proto.Webadmin.CategoriesList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoriesList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoriesList}
 */
proto.Webadmin.CategoriesList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoriesList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoriesList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoriesList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoriesList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string categoryid = 1;
 * @return {string}
 */
proto.Webadmin.CategoriesList.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoriesList} returns this
 */
proto.Webadmin.CategoriesList.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.CategoriesList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoriesList} returns this
 */
proto.Webadmin.CategoriesList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.CategoriesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CategoriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CategoriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CategoriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.CategoriesList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CategoriesResponse}
 */
proto.Webadmin.CategoriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CategoriesResponse;
  return proto.Webadmin.CategoriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CategoriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CategoriesResponse}
 */
proto.Webadmin.CategoriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.CategoriesList;
      reader.readMessage(value,proto.Webadmin.CategoriesList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CategoriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CategoriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CategoriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CategoriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.CategoriesList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.CategoriesResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CategoriesResponse} returns this
 */
proto.Webadmin.CategoriesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CategoriesList results = 2;
 * @return {!Array<!proto.Webadmin.CategoriesList>}
 */
proto.Webadmin.CategoriesResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.CategoriesList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.CategoriesList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.CategoriesList>} value
 * @return {!proto.Webadmin.CategoriesResponse} returns this
*/
proto.Webadmin.CategoriesResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.CategoriesList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.CategoriesList}
 */
proto.Webadmin.CategoriesResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.CategoriesList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.CategoriesResponse} returns this
 */
proto.Webadmin.CategoriesResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypesRequest}
 */
proto.Webadmin.TypesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypesRequest;
  return proto.Webadmin.TypesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypesRequest}
 */
proto.Webadmin.TypesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.TypesRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypesRequest} returns this
 */
proto.Webadmin.TypesRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.TypesRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypesRequest} returns this
 */
proto.Webadmin.TypesRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.TypesRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypesRequest} returns this
 */
proto.Webadmin.TypesRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypesList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypesList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypesList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypesList.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypesList}
 */
proto.Webadmin.TypesList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypesList;
  return proto.Webadmin.TypesList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypesList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypesList}
 */
proto.Webadmin.TypesList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypesList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypesList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypesList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypesList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string typeid = 1;
 * @return {string}
 */
proto.Webadmin.TypesList.prototype.getTypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypesList} returns this
 */
proto.Webadmin.TypesList.prototype.setTypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.TypesList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypesList} returns this
 */
proto.Webadmin.TypesList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.TypesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TypesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TypesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TypesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.TypesList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TypesResponse}
 */
proto.Webadmin.TypesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TypesResponse;
  return proto.Webadmin.TypesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TypesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TypesResponse}
 */
proto.Webadmin.TypesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.TypesList;
      reader.readMessage(value,proto.Webadmin.TypesList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TypesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TypesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TypesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TypesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.TypesList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.TypesResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TypesResponse} returns this
 */
proto.Webadmin.TypesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated TypesList results = 2;
 * @return {!Array<!proto.Webadmin.TypesList>}
 */
proto.Webadmin.TypesResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.TypesList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.TypesList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.TypesList>} value
 * @return {!proto.Webadmin.TypesResponse} returns this
*/
proto.Webadmin.TypesResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.TypesList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.TypesList}
 */
proto.Webadmin.TypesResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.TypesList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.TypesResponse} returns this
 */
proto.Webadmin.TypesResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CountriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CountriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CountriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CountriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    countryid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CountriesRequest}
 */
proto.Webadmin.CountriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CountriesRequest;
  return proto.Webadmin.CountriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CountriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CountriesRequest}
 */
proto.Webadmin.CountriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CountriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CountriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CountriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CountriesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountryid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.CountriesRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CountriesRequest} returns this
 */
proto.Webadmin.CountriesRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.CountriesRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CountriesRequest} returns this
 */
proto.Webadmin.CountriesRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.CountriesRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CountriesRequest} returns this
 */
proto.Webadmin.CountriesRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string countryid = 4;
 * @return {string}
 */
proto.Webadmin.CountriesRequest.prototype.getCountryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CountriesRequest} returns this
 */
proto.Webadmin.CountriesRequest.prototype.setCountryid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CountriesList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CountriesList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CountriesList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CountriesList.toObject = function(includeInstance, msg) {
  var f, obj = {
    countryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CountriesList}
 */
proto.Webadmin.CountriesList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CountriesList;
  return proto.Webadmin.CountriesList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CountriesList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CountriesList}
 */
proto.Webadmin.CountriesList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CountriesList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CountriesList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CountriesList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CountriesList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string countryid = 1;
 * @return {string}
 */
proto.Webadmin.CountriesList.prototype.getCountryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CountriesList} returns this
 */
proto.Webadmin.CountriesList.prototype.setCountryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.CountriesList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CountriesList} returns this
 */
proto.Webadmin.CountriesList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.CountriesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CountriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CountriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CountriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CountriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.CountriesList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CountriesResponse}
 */
proto.Webadmin.CountriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CountriesResponse;
  return proto.Webadmin.CountriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CountriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CountriesResponse}
 */
proto.Webadmin.CountriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.CountriesList;
      reader.readMessage(value,proto.Webadmin.CountriesList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CountriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CountriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CountriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CountriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.CountriesList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.CountriesResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CountriesResponse} returns this
 */
proto.Webadmin.CountriesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CountriesList results = 2;
 * @return {!Array<!proto.Webadmin.CountriesList>}
 */
proto.Webadmin.CountriesResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.CountriesList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.CountriesList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.CountriesList>} value
 * @return {!proto.Webadmin.CountriesResponse} returns this
*/
proto.Webadmin.CountriesResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.CountriesList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.CountriesList}
 */
proto.Webadmin.CountriesResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.CountriesList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.CountriesResponse} returns this
 */
proto.Webadmin.CountriesResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ProvincesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ProvincesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ProvincesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ProvincesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    countryid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ProvincesRequest}
 */
proto.Webadmin.ProvincesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ProvincesRequest;
  return proto.Webadmin.ProvincesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ProvincesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ProvincesRequest}
 */
proto.Webadmin.ProvincesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ProvincesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ProvincesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ProvincesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ProvincesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountryid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ProvincesRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ProvincesRequest} returns this
 */
proto.Webadmin.ProvincesRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ProvincesRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ProvincesRequest} returns this
 */
proto.Webadmin.ProvincesRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ProvincesRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ProvincesRequest} returns this
 */
proto.Webadmin.ProvincesRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string countryid = 4;
 * @return {string}
 */
proto.Webadmin.ProvincesRequest.prototype.getCountryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ProvincesRequest} returns this
 */
proto.Webadmin.ProvincesRequest.prototype.setCountryid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ProvincesList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ProvincesList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ProvincesList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ProvincesList.toObject = function(includeInstance, msg) {
  var f, obj = {
    provinceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ProvincesList}
 */
proto.Webadmin.ProvincesList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ProvincesList;
  return proto.Webadmin.ProvincesList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ProvincesList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ProvincesList}
 */
proto.Webadmin.ProvincesList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvinceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ProvincesList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ProvincesList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ProvincesList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ProvincesList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvinceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string provinceid = 1;
 * @return {string}
 */
proto.Webadmin.ProvincesList.prototype.getProvinceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ProvincesList} returns this
 */
proto.Webadmin.ProvincesList.prototype.setProvinceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.ProvincesList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ProvincesList} returns this
 */
proto.Webadmin.ProvincesList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.ProvincesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ProvincesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ProvincesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ProvincesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ProvincesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.ProvincesList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ProvincesResponse}
 */
proto.Webadmin.ProvincesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ProvincesResponse;
  return proto.Webadmin.ProvincesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ProvincesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ProvincesResponse}
 */
proto.Webadmin.ProvincesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.ProvincesList;
      reader.readMessage(value,proto.Webadmin.ProvincesList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ProvincesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ProvincesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ProvincesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ProvincesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.ProvincesList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ProvincesResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ProvincesResponse} returns this
 */
proto.Webadmin.ProvincesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ProvincesList results = 2;
 * @return {!Array<!proto.Webadmin.ProvincesList>}
 */
proto.Webadmin.ProvincesResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.ProvincesList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.ProvincesList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.ProvincesList>} value
 * @return {!proto.Webadmin.ProvincesResponse} returns this
*/
proto.Webadmin.ProvincesResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.ProvincesList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.ProvincesList}
 */
proto.Webadmin.ProvincesResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.ProvincesList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.ProvincesResponse} returns this
 */
proto.Webadmin.ProvincesResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CitiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CitiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CitiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CitiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    provinceid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CitiesRequest}
 */
proto.Webadmin.CitiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CitiesRequest;
  return proto.Webadmin.CitiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CitiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CitiesRequest}
 */
proto.Webadmin.CitiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvinceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CitiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CitiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CitiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CitiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProvinceid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.CitiesRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CitiesRequest} returns this
 */
proto.Webadmin.CitiesRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.CitiesRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CitiesRequest} returns this
 */
proto.Webadmin.CitiesRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.CitiesRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CitiesRequest} returns this
 */
proto.Webadmin.CitiesRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string provinceid = 4;
 * @return {string}
 */
proto.Webadmin.CitiesRequest.prototype.getProvinceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CitiesRequest} returns this
 */
proto.Webadmin.CitiesRequest.prototype.setProvinceid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CitiesList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CitiesList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CitiesList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CitiesList.toObject = function(includeInstance, msg) {
  var f, obj = {
    cityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CitiesList}
 */
proto.Webadmin.CitiesList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CitiesList;
  return proto.Webadmin.CitiesList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CitiesList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CitiesList}
 */
proto.Webadmin.CitiesList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CitiesList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CitiesList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CitiesList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CitiesList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string cityid = 1;
 * @return {string}
 */
proto.Webadmin.CitiesList.prototype.getCityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CitiesList} returns this
 */
proto.Webadmin.CitiesList.prototype.setCityid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Webadmin.CitiesList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CitiesList} returns this
 */
proto.Webadmin.CitiesList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.CitiesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.CitiesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.CitiesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.CitiesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CitiesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.CitiesList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.CitiesResponse}
 */
proto.Webadmin.CitiesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.CitiesResponse;
  return proto.Webadmin.CitiesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.CitiesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.CitiesResponse}
 */
proto.Webadmin.CitiesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.CitiesList;
      reader.readMessage(value,proto.Webadmin.CitiesList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.CitiesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.CitiesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.CitiesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.CitiesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.CitiesList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.CitiesResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.CitiesResponse} returns this
 */
proto.Webadmin.CitiesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CitiesList results = 2;
 * @return {!Array<!proto.Webadmin.CitiesList>}
 */
proto.Webadmin.CitiesResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.CitiesList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.CitiesList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.CitiesList>} value
 * @return {!proto.Webadmin.CitiesResponse} returns this
*/
proto.Webadmin.CitiesResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.CitiesList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.CitiesList}
 */
proto.Webadmin.CitiesResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.CitiesList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.CitiesResponse} returns this
 */
proto.Webadmin.CitiesResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientsRequest}
 */
proto.Webadmin.ClientsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientsRequest;
  return proto.Webadmin.ClientsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientsRequest}
 */
proto.Webadmin.ClientsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.ClientsRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientsRequest} returns this
 */
proto.Webadmin.ClientsRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.ClientsRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientsRequest} returns this
 */
proto.Webadmin.ClientsRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.ClientsRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientsRequest} returns this
 */
proto.Webadmin.ClientsRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientsList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientname: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientsList}
 */
proto.Webadmin.ClientsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientsList;
  return proto.Webadmin.ClientsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientsList}
 */
proto.Webadmin.ClientsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.ClientsList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientsList} returns this
 */
proto.Webadmin.ClientsList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string clientname = 2;
 * @return {string}
 */
proto.Webadmin.ClientsList.prototype.getClientname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientsList} returns this
 */
proto.Webadmin.ClientsList.prototype.setClientname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.ClientsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.ClientsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.ClientsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.ClientsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.ClientsList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.ClientsResponse}
 */
proto.Webadmin.ClientsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.ClientsResponse;
  return proto.Webadmin.ClientsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.ClientsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.ClientsResponse}
 */
proto.Webadmin.ClientsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.ClientsList;
      reader.readMessage(value,proto.Webadmin.ClientsList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.ClientsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.ClientsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.ClientsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.ClientsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.ClientsList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.ClientsResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.ClientsResponse} returns this
 */
proto.Webadmin.ClientsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ClientsList results = 2;
 * @return {!Array<!proto.Webadmin.ClientsList>}
 */
proto.Webadmin.ClientsResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.ClientsList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.ClientsList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.ClientsList>} value
 * @return {!proto.Webadmin.ClientsResponse} returns this
*/
proto.Webadmin.ClientsResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.ClientsList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.ClientsList}
 */
proto.Webadmin.ClientsResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.ClientsList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.ClientsResponse} returns this
 */
proto.Webadmin.ClientsResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlacesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlacesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlacesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlacesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlacesRequest}
 */
proto.Webadmin.PlacesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlacesRequest;
  return proto.Webadmin.PlacesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlacesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlacesRequest}
 */
proto.Webadmin.PlacesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlacesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlacesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlacesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlacesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.PlacesRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlacesRequest} returns this
 */
proto.Webadmin.PlacesRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.PlacesRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlacesRequest} returns this
 */
proto.Webadmin.PlacesRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.PlacesRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlacesRequest} returns this
 */
proto.Webadmin.PlacesRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.PlacesRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlacesRequest} returns this
 */
proto.Webadmin.PlacesRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlacesList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlacesList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlacesList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlacesList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    placename: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlacesList}
 */
proto.Webadmin.PlacesList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlacesList;
  return proto.Webadmin.PlacesList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlacesList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlacesList}
 */
proto.Webadmin.PlacesList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlacename(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlacesList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlacesList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlacesList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlacesList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPlacename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.PlacesList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlacesList} returns this
 */
proto.Webadmin.PlacesList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string placeid = 2;
 * @return {string}
 */
proto.Webadmin.PlacesList.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlacesList} returns this
 */
proto.Webadmin.PlacesList.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string placename = 3;
 * @return {string}
 */
proto.Webadmin.PlacesList.prototype.getPlacename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlacesList} returns this
 */
proto.Webadmin.PlacesList.prototype.setPlacename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.PlacesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.PlacesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.PlacesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.PlacesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlacesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.PlacesList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.PlacesResponse}
 */
proto.Webadmin.PlacesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.PlacesResponse;
  return proto.Webadmin.PlacesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.PlacesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.PlacesResponse}
 */
proto.Webadmin.PlacesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.PlacesList;
      reader.readMessage(value,proto.Webadmin.PlacesList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.PlacesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.PlacesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.PlacesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.PlacesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.PlacesList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.PlacesResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.PlacesResponse} returns this
 */
proto.Webadmin.PlacesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PlacesList results = 2;
 * @return {!Array<!proto.Webadmin.PlacesList>}
 */
proto.Webadmin.PlacesResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.PlacesList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.PlacesList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.PlacesList>} value
 * @return {!proto.Webadmin.PlacesResponse} returns this
*/
proto.Webadmin.PlacesResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.PlacesList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.PlacesList}
 */
proto.Webadmin.PlacesResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.PlacesList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.PlacesResponse} returns this
 */
proto.Webadmin.PlacesResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TimeFormatsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TimeFormatsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TimeFormatsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TimeFormatsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TimeFormatsRequest}
 */
proto.Webadmin.TimeFormatsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TimeFormatsRequest;
  return proto.Webadmin.TimeFormatsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TimeFormatsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TimeFormatsRequest}
 */
proto.Webadmin.TimeFormatsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TimeFormatsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TimeFormatsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TimeFormatsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TimeFormatsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.TimeFormatsRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TimeFormatsRequest} returns this
 */
proto.Webadmin.TimeFormatsRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.TimeFormatsRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TimeFormatsRequest} returns this
 */
proto.Webadmin.TimeFormatsRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.TimeFormatsRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TimeFormatsRequest} returns this
 */
proto.Webadmin.TimeFormatsRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TimeFormatsList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TimeFormatsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TimeFormatsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TimeFormatsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    format: jspb.Message.getFieldWithDefault(msg, 2, ""),
    example: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TimeFormatsList}
 */
proto.Webadmin.TimeFormatsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TimeFormatsList;
  return proto.Webadmin.TimeFormatsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TimeFormatsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TimeFormatsList}
 */
proto.Webadmin.TimeFormatsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormat(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExample(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TimeFormatsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TimeFormatsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TimeFormatsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TimeFormatsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFormat();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExample();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string timeid = 1;
 * @return {string}
 */
proto.Webadmin.TimeFormatsList.prototype.getTimeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TimeFormatsList} returns this
 */
proto.Webadmin.TimeFormatsList.prototype.setTimeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string format = 2;
 * @return {string}
 */
proto.Webadmin.TimeFormatsList.prototype.getFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TimeFormatsList} returns this
 */
proto.Webadmin.TimeFormatsList.prototype.setFormat = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string example = 3;
 * @return {string}
 */
proto.Webadmin.TimeFormatsList.prototype.getExample = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TimeFormatsList} returns this
 */
proto.Webadmin.TimeFormatsList.prototype.setExample = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.TimeFormatsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.TimeFormatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.TimeFormatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.TimeFormatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TimeFormatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.TimeFormatsList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.TimeFormatsResponse}
 */
proto.Webadmin.TimeFormatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.TimeFormatsResponse;
  return proto.Webadmin.TimeFormatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.TimeFormatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.TimeFormatsResponse}
 */
proto.Webadmin.TimeFormatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.TimeFormatsList;
      reader.readMessage(value,proto.Webadmin.TimeFormatsList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.TimeFormatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.TimeFormatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.TimeFormatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.TimeFormatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.TimeFormatsList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.TimeFormatsResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.TimeFormatsResponse} returns this
 */
proto.Webadmin.TimeFormatsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated TimeFormatsList results = 2;
 * @return {!Array<!proto.Webadmin.TimeFormatsList>}
 */
proto.Webadmin.TimeFormatsResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.TimeFormatsList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.TimeFormatsList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.TimeFormatsList>} value
 * @return {!proto.Webadmin.TimeFormatsResponse} returns this
*/
proto.Webadmin.TimeFormatsResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.TimeFormatsList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.TimeFormatsList}
 */
proto.Webadmin.TimeFormatsResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.TimeFormatsList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.TimeFormatsResponse} returns this
 */
proto.Webadmin.TimeFormatsResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.LogViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.LogViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.LogViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LogViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    database: jspb.Message.getFieldWithDefault(msg, 4, ""),
    date: jspb.Message.getFieldWithDefault(msg, 5, ""),
    filter: jspb.Message.getFieldWithDefault(msg, 6, ""),
    data: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.LogViewRequest}
 */
proto.Webadmin.LogViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.LogViewRequest;
  return proto.Webadmin.LogViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.LogViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.LogViewRequest}
 */
proto.Webadmin.LogViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.LogViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.LogViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.LogViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LogViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDatabase();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.LogViewRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewRequest} returns this
 */
proto.Webadmin.LogViewRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.LogViewRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewRequest} returns this
 */
proto.Webadmin.LogViewRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.LogViewRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewRequest} returns this
 */
proto.Webadmin.LogViewRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string database = 4;
 * @return {string}
 */
proto.Webadmin.LogViewRequest.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewRequest} returns this
 */
proto.Webadmin.LogViewRequest.prototype.setDatabase = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string date = 5;
 * @return {string}
 */
proto.Webadmin.LogViewRequest.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewRequest} returns this
 */
proto.Webadmin.LogViewRequest.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string filter = 6;
 * @return {string}
 */
proto.Webadmin.LogViewRequest.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewRequest} returns this
 */
proto.Webadmin.LogViewRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string data = 7;
 * @return {string}
 */
proto.Webadmin.LogViewRequest.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewRequest} returns this
 */
proto.Webadmin.LogViewRequest.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.LogViewList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.LogViewList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.LogViewList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LogViewList.toObject = function(includeInstance, msg) {
  var f, obj = {
    application: jspb.Message.getFieldWithDefault(msg, 1, ""),
    datetime: jspb.Message.getFieldWithDefault(msg, 2, ""),
    traceid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    loglevel: jspb.Message.getFieldWithDefault(msg, 4, ""),
    modules: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pb_function: jspb.Message.getFieldWithDefault(msg, 6, ""),
    identity: jspb.Message.getFieldWithDefault(msg, 7, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 8, ""),
    message: jspb.Message.getFieldWithDefault(msg, 9, ""),
    error: jspb.Message.getFieldWithDefault(msg, 10, ""),
    status: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.LogViewList}
 */
proto.Webadmin.LogViewList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.LogViewList;
  return proto.Webadmin.LogViewList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.LogViewList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.LogViewList}
 */
proto.Webadmin.LogViewList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplication(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatetime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoglevel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setModules(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFunction(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.LogViewList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.LogViewList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.LogViewList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LogViewList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplication();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDatetime();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTraceid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLoglevel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getModules();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFunction();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string application = 1;
 * @return {string}
 */
proto.Webadmin.LogViewList.prototype.getApplication = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewList} returns this
 */
proto.Webadmin.LogViewList.prototype.setApplication = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string datetime = 2;
 * @return {string}
 */
proto.Webadmin.LogViewList.prototype.getDatetime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewList} returns this
 */
proto.Webadmin.LogViewList.prototype.setDatetime = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string traceid = 3;
 * @return {string}
 */
proto.Webadmin.LogViewList.prototype.getTraceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewList} returns this
 */
proto.Webadmin.LogViewList.prototype.setTraceid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string loglevel = 4;
 * @return {string}
 */
proto.Webadmin.LogViewList.prototype.getLoglevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewList} returns this
 */
proto.Webadmin.LogViewList.prototype.setLoglevel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string modules = 5;
 * @return {string}
 */
proto.Webadmin.LogViewList.prototype.getModules = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewList} returns this
 */
proto.Webadmin.LogViewList.prototype.setModules = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string function = 6;
 * @return {string}
 */
proto.Webadmin.LogViewList.prototype.getFunction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewList} returns this
 */
proto.Webadmin.LogViewList.prototype.setFunction = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string identity = 7;
 * @return {string}
 */
proto.Webadmin.LogViewList.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewList} returns this
 */
proto.Webadmin.LogViewList.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string remoteip = 8;
 * @return {string}
 */
proto.Webadmin.LogViewList.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewList} returns this
 */
proto.Webadmin.LogViewList.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string message = 9;
 * @return {string}
 */
proto.Webadmin.LogViewList.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewList} returns this
 */
proto.Webadmin.LogViewList.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string error = 10;
 * @return {string}
 */
proto.Webadmin.LogViewList.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewList} returns this
 */
proto.Webadmin.LogViewList.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string status = 11;
 * @return {string}
 */
proto.Webadmin.LogViewList.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewList} returns this
 */
proto.Webadmin.LogViewList.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.LogViewResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.LogViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.LogViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.LogViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LogViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.LogViewList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.LogViewResponse}
 */
proto.Webadmin.LogViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.LogViewResponse;
  return proto.Webadmin.LogViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.LogViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.LogViewResponse}
 */
proto.Webadmin.LogViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.LogViewList;
      reader.readMessage(value,proto.Webadmin.LogViewList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.LogViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.LogViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.LogViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.LogViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.LogViewList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.LogViewResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.LogViewResponse} returns this
 */
proto.Webadmin.LogViewResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated LogViewList results = 2;
 * @return {!Array<!proto.Webadmin.LogViewList>}
 */
proto.Webadmin.LogViewResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.LogViewList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.LogViewList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.LogViewList>} value
 * @return {!proto.Webadmin.LogViewResponse} returns this
*/
proto.Webadmin.LogViewResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.LogViewList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.LogViewList}
 */
proto.Webadmin.LogViewResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.LogViewList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.LogViewResponse} returns this
 */
proto.Webadmin.LogViewResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.MonitorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.MonitorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.MonitorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.MonitorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remoteip: jspb.Message.getFieldWithDefault(msg, 2, ""),
    adminid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.MonitorRequest}
 */
proto.Webadmin.MonitorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.MonitorRequest;
  return proto.Webadmin.MonitorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.MonitorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.MonitorRequest}
 */
proto.Webadmin.MonitorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteip(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.MonitorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.MonitorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.MonitorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.MonitorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRemoteip();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdminid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string sessionid = 1;
 * @return {string}
 */
proto.Webadmin.MonitorRequest.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.MonitorRequest} returns this
 */
proto.Webadmin.MonitorRequest.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string remoteip = 2;
 * @return {string}
 */
proto.Webadmin.MonitorRequest.prototype.getRemoteip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.MonitorRequest} returns this
 */
proto.Webadmin.MonitorRequest.prototype.setRemoteip = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string adminid = 3;
 * @return {string}
 */
proto.Webadmin.MonitorRequest.prototype.getAdminid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.MonitorRequest} returns this
 */
proto.Webadmin.MonitorRequest.prototype.setAdminid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string clientid = 4;
 * @return {string}
 */
proto.Webadmin.MonitorRequest.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.MonitorRequest} returns this
 */
proto.Webadmin.MonitorRequest.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string placeid = 5;
 * @return {string}
 */
proto.Webadmin.MonitorRequest.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.MonitorRequest} returns this
 */
proto.Webadmin.MonitorRequest.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.MonitorServiceList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.MonitorServiceList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.MonitorServiceList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.MonitorServiceList.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicename: jspb.Message.getFieldWithDefault(msg, 1, ""),
    servicestatus: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.MonitorServiceList}
 */
proto.Webadmin.MonitorServiceList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.MonitorServiceList;
  return proto.Webadmin.MonitorServiceList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.MonitorServiceList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.MonitorServiceList}
 */
proto.Webadmin.MonitorServiceList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicename(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setServicestatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.MonitorServiceList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.MonitorServiceList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.MonitorServiceList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.MonitorServiceList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServicestatus();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string servicename = 1;
 * @return {string}
 */
proto.Webadmin.MonitorServiceList.prototype.getServicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.MonitorServiceList} returns this
 */
proto.Webadmin.MonitorServiceList.prototype.setServicename = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool servicestatus = 2;
 * @return {boolean}
 */
proto.Webadmin.MonitorServiceList.prototype.getServicestatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Webadmin.MonitorServiceList} returns this
 */
proto.Webadmin.MonitorServiceList.prototype.setServicestatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.MonitorList.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.MonitorList.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.MonitorList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.MonitorList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.MonitorList.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    placeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clientname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    placename: jspb.Message.getFieldWithDefault(msg, 4, ""),
    servicesList: jspb.Message.toObjectList(msg.getServicesList(),
    proto.Webadmin.MonitorServiceList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.MonitorList}
 */
proto.Webadmin.MonitorList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.MonitorList;
  return proto.Webadmin.MonitorList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.MonitorList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.MonitorList}
 */
proto.Webadmin.MonitorList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlacename(value);
      break;
    case 5:
      var value = new proto.Webadmin.MonitorServiceList;
      reader.readMessage(value,proto.Webadmin.MonitorServiceList.deserializeBinaryFromReader);
      msg.addServices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.MonitorList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.MonitorList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.MonitorList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.MonitorList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlaceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPlacename();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getServicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.Webadmin.MonitorServiceList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string clientid = 1;
 * @return {string}
 */
proto.Webadmin.MonitorList.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.MonitorList} returns this
 */
proto.Webadmin.MonitorList.prototype.setClientid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string placeid = 2;
 * @return {string}
 */
proto.Webadmin.MonitorList.prototype.getPlaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.MonitorList} returns this
 */
proto.Webadmin.MonitorList.prototype.setPlaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string clientname = 3;
 * @return {string}
 */
proto.Webadmin.MonitorList.prototype.getClientname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.MonitorList} returns this
 */
proto.Webadmin.MonitorList.prototype.setClientname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string placename = 4;
 * @return {string}
 */
proto.Webadmin.MonitorList.prototype.getPlacename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.MonitorList} returns this
 */
proto.Webadmin.MonitorList.prototype.setPlacename = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated MonitorServiceList services = 5;
 * @return {!Array<!proto.Webadmin.MonitorServiceList>}
 */
proto.Webadmin.MonitorList.prototype.getServicesList = function() {
  return /** @type{!Array<!proto.Webadmin.MonitorServiceList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.MonitorServiceList, 5));
};


/**
 * @param {!Array<!proto.Webadmin.MonitorServiceList>} value
 * @return {!proto.Webadmin.MonitorList} returns this
*/
proto.Webadmin.MonitorList.prototype.setServicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.Webadmin.MonitorServiceList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.MonitorServiceList}
 */
proto.Webadmin.MonitorList.prototype.addServices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.Webadmin.MonitorServiceList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.MonitorList} returns this
 */
proto.Webadmin.MonitorList.prototype.clearServicesList = function() {
  return this.setServicesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Webadmin.MonitorResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Webadmin.MonitorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Webadmin.MonitorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Webadmin.MonitorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.MonitorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.Webadmin.MonitorList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Webadmin.MonitorResponse}
 */
proto.Webadmin.MonitorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Webadmin.MonitorResponse;
  return proto.Webadmin.MonitorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Webadmin.MonitorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Webadmin.MonitorResponse}
 */
proto.Webadmin.MonitorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.Webadmin.MonitorList;
      reader.readMessage(value,proto.Webadmin.MonitorList.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Webadmin.MonitorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Webadmin.MonitorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Webadmin.MonitorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Webadmin.MonitorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Webadmin.MonitorList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.Webadmin.MonitorResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Webadmin.MonitorResponse} returns this
 */
proto.Webadmin.MonitorResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated MonitorList results = 2;
 * @return {!Array<!proto.Webadmin.MonitorList>}
 */
proto.Webadmin.MonitorResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.Webadmin.MonitorList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Webadmin.MonitorList, 2));
};


/**
 * @param {!Array<!proto.Webadmin.MonitorList>} value
 * @return {!proto.Webadmin.MonitorResponse} returns this
*/
proto.Webadmin.MonitorResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Webadmin.MonitorList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Webadmin.MonitorList}
 */
proto.Webadmin.MonitorResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Webadmin.MonitorList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Webadmin.MonitorResponse} returns this
 */
proto.Webadmin.MonitorResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


goog.object.extend(exports, proto.Webadmin);
