/**
 * @fileoverview gRPC-Web generated client stub for Webadmin
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: webadmin.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.Webadmin = require('./webadmin_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.Webadmin.WebadminServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.Webadmin.WebadminServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.LoginRequest,
 *   !proto.Webadmin.LoginResponse>}
 */
const methodDescriptor_WebadminService_DoLogin = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoLogin',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.LoginRequest,
  proto.Webadmin.LoginResponse,
  /**
   * @param {!proto.Webadmin.LoginRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.LoginResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.LoginRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.LoginResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.LoginResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doLogin =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoLogin',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoLogin,
      callback);
};


/**
 * @param {!proto.Webadmin.LoginRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.LoginResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doLogin =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoLogin',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoLogin);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.LogoutRequest,
 *   !proto.Webadmin.LogoutResponse>}
 */
const methodDescriptor_WebadminService_DoLogout = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoLogout',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.LogoutRequest,
  proto.Webadmin.LogoutResponse,
  /**
   * @param {!proto.Webadmin.LogoutRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.LogoutResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.LogoutRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.LogoutResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.LogoutResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doLogout =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoLogout',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoLogout,
      callback);
};


/**
 * @param {!proto.Webadmin.LogoutRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.LogoutResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doLogout =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoLogout',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoLogout);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.CheckSessionRequest,
 *   !proto.Webadmin.CheckSessionResponse>}
 */
const methodDescriptor_WebadminService_DoCheckSession = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoCheckSession',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.CheckSessionRequest,
  proto.Webadmin.CheckSessionResponse,
  /**
   * @param {!proto.Webadmin.CheckSessionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.CheckSessionResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.CheckSessionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.CheckSessionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.CheckSessionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doCheckSession =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoCheckSession',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoCheckSession,
      callback);
};


/**
 * @param {!proto.Webadmin.CheckSessionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.CheckSessionResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doCheckSession =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoCheckSession',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoCheckSession);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.AdminUserViewRequest,
 *   !proto.Webadmin.AdminUserViewResponse>}
 */
const methodDescriptor_WebadminService_DoAdminUserView = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoAdminUserView',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.AdminUserViewRequest,
  proto.Webadmin.AdminUserViewResponse,
  /**
   * @param {!proto.Webadmin.AdminUserViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.AdminUserViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.AdminUserViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.AdminUserViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.AdminUserViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doAdminUserView =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoAdminUserView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoAdminUserView,
      callback);
};


/**
 * @param {!proto.Webadmin.AdminUserViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.AdminUserViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doAdminUserView =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoAdminUserView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoAdminUserView);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.AdminUserAddRequest,
 *   !proto.Webadmin.AdminUserAddResponse>}
 */
const methodDescriptor_WebadminService_DoAdminUserAdd = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoAdminUserAdd',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.AdminUserAddRequest,
  proto.Webadmin.AdminUserAddResponse,
  /**
   * @param {!proto.Webadmin.AdminUserAddRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.AdminUserAddResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.AdminUserAddRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.AdminUserAddResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.AdminUserAddResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doAdminUserAdd =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoAdminUserAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoAdminUserAdd,
      callback);
};


/**
 * @param {!proto.Webadmin.AdminUserAddRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.AdminUserAddResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doAdminUserAdd =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoAdminUserAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoAdminUserAdd);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.AdminUserEditRequest,
 *   !proto.Webadmin.AdminUserEditResponse>}
 */
const methodDescriptor_WebadminService_DoAdminUserEdit = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoAdminUserEdit',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.AdminUserEditRequest,
  proto.Webadmin.AdminUserEditResponse,
  /**
   * @param {!proto.Webadmin.AdminUserEditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.AdminUserEditResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.AdminUserEditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.AdminUserEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.AdminUserEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doAdminUserEdit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoAdminUserEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoAdminUserEdit,
      callback);
};


/**
 * @param {!proto.Webadmin.AdminUserEditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.AdminUserEditResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doAdminUserEdit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoAdminUserEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoAdminUserEdit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.AdminUserResetPasswordRequest,
 *   !proto.Webadmin.AdminUserResetPasswordResponse>}
 */
const methodDescriptor_WebadminService_DoAdminUserResetPassword = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoAdminUserResetPassword',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.AdminUserResetPasswordRequest,
  proto.Webadmin.AdminUserResetPasswordResponse,
  /**
   * @param {!proto.Webadmin.AdminUserResetPasswordRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.AdminUserResetPasswordResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.AdminUserResetPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.AdminUserResetPasswordResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.AdminUserResetPasswordResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doAdminUserResetPassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoAdminUserResetPassword',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoAdminUserResetPassword,
      callback);
};


/**
 * @param {!proto.Webadmin.AdminUserResetPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.AdminUserResetPasswordResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doAdminUserResetPassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoAdminUserResetPassword',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoAdminUserResetPassword);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.AdminUserToggleRequest,
 *   !proto.Webadmin.AdminUserToggleResponse>}
 */
const methodDescriptor_WebadminService_DoAdminUserToggle = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoAdminUserToggle',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.AdminUserToggleRequest,
  proto.Webadmin.AdminUserToggleResponse,
  /**
   * @param {!proto.Webadmin.AdminUserToggleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.AdminUserToggleResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.AdminUserToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.AdminUserToggleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.AdminUserToggleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doAdminUserToggle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoAdminUserToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoAdminUserToggle,
      callback);
};


/**
 * @param {!proto.Webadmin.AdminUserToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.AdminUserToggleResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doAdminUserToggle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoAdminUserToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoAdminUserToggle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.AdminUserDeleteRequest,
 *   !proto.Webadmin.AdminUserDeleteResponse>}
 */
const methodDescriptor_WebadminService_DoAdminUserDelete = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoAdminUserDelete',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.AdminUserDeleteRequest,
  proto.Webadmin.AdminUserDeleteResponse,
  /**
   * @param {!proto.Webadmin.AdminUserDeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.AdminUserDeleteResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.AdminUserDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.AdminUserDeleteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.AdminUserDeleteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doAdminUserDelete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoAdminUserDelete',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoAdminUserDelete,
      callback);
};


/**
 * @param {!proto.Webadmin.AdminUserDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.AdminUserDeleteResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doAdminUserDelete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoAdminUserDelete',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoAdminUserDelete);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientUserViewRequest,
 *   !proto.Webadmin.ClientUserViewResponse>}
 */
const methodDescriptor_WebadminService_DoClientUserView = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoClientUserView',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientUserViewRequest,
  proto.Webadmin.ClientUserViewResponse,
  /**
   * @param {!proto.Webadmin.ClientUserViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientUserViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientUserViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientUserViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientUserViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doClientUserView =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientUserView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientUserView,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientUserViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientUserViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doClientUserView =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientUserView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientUserView);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientUserAddRequest,
 *   !proto.Webadmin.ClientUserAddResponse>}
 */
const methodDescriptor_WebadminService_DoClientUserAdd = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoClientUserAdd',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientUserAddRequest,
  proto.Webadmin.ClientUserAddResponse,
  /**
   * @param {!proto.Webadmin.ClientUserAddRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientUserAddResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientUserAddRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientUserAddResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientUserAddResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doClientUserAdd =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientUserAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientUserAdd,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientUserAddRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientUserAddResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doClientUserAdd =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientUserAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientUserAdd);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientUserEditRequest,
 *   !proto.Webadmin.ClientUserEditResponse>}
 */
const methodDescriptor_WebadminService_DoClientUserEdit = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoClientUserEdit',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientUserEditRequest,
  proto.Webadmin.ClientUserEditResponse,
  /**
   * @param {!proto.Webadmin.ClientUserEditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientUserEditResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientUserEditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientUserEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientUserEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doClientUserEdit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientUserEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientUserEdit,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientUserEditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientUserEditResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doClientUserEdit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientUserEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientUserEdit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientUserResetPasswordRequest,
 *   !proto.Webadmin.ClientUserResetPasswordResponse>}
 */
const methodDescriptor_WebadminService_DoClientUserResetPassword = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoClientUserResetPassword',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientUserResetPasswordRequest,
  proto.Webadmin.ClientUserResetPasswordResponse,
  /**
   * @param {!proto.Webadmin.ClientUserResetPasswordRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientUserResetPasswordResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientUserResetPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientUserResetPasswordResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientUserResetPasswordResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doClientUserResetPassword =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientUserResetPassword',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientUserResetPassword,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientUserResetPasswordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientUserResetPasswordResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doClientUserResetPassword =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientUserResetPassword',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientUserResetPassword);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientUserToggleRequest,
 *   !proto.Webadmin.ClientUserToggleResponse>}
 */
const methodDescriptor_WebadminService_DoClientUserToggle = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoClientUserToggle',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientUserToggleRequest,
  proto.Webadmin.ClientUserToggleResponse,
  /**
   * @param {!proto.Webadmin.ClientUserToggleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientUserToggleResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientUserToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientUserToggleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientUserToggleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doClientUserToggle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientUserToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientUserToggle,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientUserToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientUserToggleResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doClientUserToggle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientUserToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientUserToggle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientUserDeleteRequest,
 *   !proto.Webadmin.ClientUserDeleteResponse>}
 */
const methodDescriptor_WebadminService_DoClientUserDelete = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoClientUserDelete',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientUserDeleteRequest,
  proto.Webadmin.ClientUserDeleteResponse,
  /**
   * @param {!proto.Webadmin.ClientUserDeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientUserDeleteResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientUserDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientUserDeleteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientUserDeleteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doClientUserDelete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientUserDelete',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientUserDelete,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientUserDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientUserDeleteResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doClientUserDelete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientUserDelete',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientUserDelete);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientViewRequest,
 *   !proto.Webadmin.ClientViewResponse>}
 */
const methodDescriptor_WebadminService_DoClientView = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoClientView',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientViewRequest,
  proto.Webadmin.ClientViewResponse,
  /**
   * @param {!proto.Webadmin.ClientViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doClientView =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientView,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doClientView =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientView);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientAddRequest,
 *   !proto.Webadmin.ClientAddResponse>}
 */
const methodDescriptor_WebadminService_DoClientAdd = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoClientAdd',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientAddRequest,
  proto.Webadmin.ClientAddResponse,
  /**
   * @param {!proto.Webadmin.ClientAddRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientAddResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientAddRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientAddResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientAddResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doClientAdd =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientAdd,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientAddRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientAddResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doClientAdd =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientAdd);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientEditRequest,
 *   !proto.Webadmin.ClientEditResponse>}
 */
const methodDescriptor_WebadminService_DoClientEdit = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoClientEdit',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientEditRequest,
  proto.Webadmin.ClientEditResponse,
  /**
   * @param {!proto.Webadmin.ClientEditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientEditResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientEditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doClientEdit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientEdit,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientEditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientEditResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doClientEdit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientEdit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientToggleRequest,
 *   !proto.Webadmin.ClientToggleResponse>}
 */
const methodDescriptor_WebadminService_DoClientToggle = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoClientToggle',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientToggleRequest,
  proto.Webadmin.ClientToggleResponse,
  /**
   * @param {!proto.Webadmin.ClientToggleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientToggleResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientToggleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientToggleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doClientToggle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientToggle,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientToggleResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doClientToggle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientToggle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientDeleteRequest,
 *   !proto.Webadmin.ClientDeleteResponse>}
 */
const methodDescriptor_WebadminService_DoClientDelete = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoClientDelete',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientDeleteRequest,
  proto.Webadmin.ClientDeleteResponse,
  /**
   * @param {!proto.Webadmin.ClientDeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientDeleteResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientDeleteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientDeleteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doClientDelete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientDelete',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientDelete,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientDeleteResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doClientDelete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoClientDelete',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoClientDelete);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PlaceViewRequest,
 *   !proto.Webadmin.PlaceViewResponse>}
 */
const methodDescriptor_WebadminService_DoPlaceView = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPlaceView',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PlaceViewRequest,
  proto.Webadmin.PlaceViewResponse,
  /**
   * @param {!proto.Webadmin.PlaceViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PlaceViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PlaceViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PlaceViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PlaceViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPlaceView =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPlaceView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPlaceView,
      callback);
};


/**
 * @param {!proto.Webadmin.PlaceViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PlaceViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPlaceView =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPlaceView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPlaceView);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PlaceAddRequest,
 *   !proto.Webadmin.PlaceAddResponse>}
 */
const methodDescriptor_WebadminService_DoPlaceAdd = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPlaceAdd',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PlaceAddRequest,
  proto.Webadmin.PlaceAddResponse,
  /**
   * @param {!proto.Webadmin.PlaceAddRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PlaceAddResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PlaceAddRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PlaceAddResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PlaceAddResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPlaceAdd =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPlaceAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPlaceAdd,
      callback);
};


/**
 * @param {!proto.Webadmin.PlaceAddRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PlaceAddResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPlaceAdd =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPlaceAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPlaceAdd);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PlaceEditRequest,
 *   !proto.Webadmin.PlaceEditResponse>}
 */
const methodDescriptor_WebadminService_DoPlaceEdit = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPlaceEdit',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PlaceEditRequest,
  proto.Webadmin.PlaceEditResponse,
  /**
   * @param {!proto.Webadmin.PlaceEditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PlaceEditResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PlaceEditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PlaceEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PlaceEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPlaceEdit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPlaceEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPlaceEdit,
      callback);
};


/**
 * @param {!proto.Webadmin.PlaceEditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PlaceEditResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPlaceEdit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPlaceEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPlaceEdit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PlaceToggleRequest,
 *   !proto.Webadmin.PlaceToggleResponse>}
 */
const methodDescriptor_WebadminService_DoPlaceToggle = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPlaceToggle',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PlaceToggleRequest,
  proto.Webadmin.PlaceToggleResponse,
  /**
   * @param {!proto.Webadmin.PlaceToggleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PlaceToggleResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PlaceToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PlaceToggleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PlaceToggleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPlaceToggle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPlaceToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPlaceToggle,
      callback);
};


/**
 * @param {!proto.Webadmin.PlaceToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PlaceToggleResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPlaceToggle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPlaceToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPlaceToggle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PlaceDeleteRequest,
 *   !proto.Webadmin.PlaceDeleteResponse>}
 */
const methodDescriptor_WebadminService_DoPlaceDelete = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPlaceDelete',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PlaceDeleteRequest,
  proto.Webadmin.PlaceDeleteResponse,
  /**
   * @param {!proto.Webadmin.PlaceDeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PlaceDeleteResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PlaceDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PlaceDeleteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PlaceDeleteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPlaceDelete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPlaceDelete',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPlaceDelete,
      callback);
};


/**
 * @param {!proto.Webadmin.PlaceDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PlaceDeleteResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPlaceDelete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPlaceDelete',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPlaceDelete);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.GateViewRequest,
 *   !proto.Webadmin.GateViewResponse>}
 */
const methodDescriptor_WebadminService_DoGateView = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGateView',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.GateViewRequest,
  proto.Webadmin.GateViewResponse,
  /**
   * @param {!proto.Webadmin.GateViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.GateViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.GateViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.GateViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.GateViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGateView =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateView,
      callback);
};


/**
 * @param {!proto.Webadmin.GateViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.GateViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGateView =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateView);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.GateAddRequest,
 *   !proto.Webadmin.GateAddResponse>}
 */
const methodDescriptor_WebadminService_DoGateAdd = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGateAdd',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.GateAddRequest,
  proto.Webadmin.GateAddResponse,
  /**
   * @param {!proto.Webadmin.GateAddRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.GateAddResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.GateAddRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.GateAddResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.GateAddResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGateAdd =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateAdd,
      callback);
};


/**
 * @param {!proto.Webadmin.GateAddRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.GateAddResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGateAdd =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateAdd);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.GateEditRequest,
 *   !proto.Webadmin.GateEditResponse>}
 */
const methodDescriptor_WebadminService_DoGateEdit = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGateEdit',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.GateEditRequest,
  proto.Webadmin.GateEditResponse,
  /**
   * @param {!proto.Webadmin.GateEditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.GateEditResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.GateEditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.GateEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.GateEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGateEdit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateEdit,
      callback);
};


/**
 * @param {!proto.Webadmin.GateEditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.GateEditResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGateEdit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateEdit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.GateToggleRequest,
 *   !proto.Webadmin.GateToggleResponse>}
 */
const methodDescriptor_WebadminService_DoGateToggle = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGateToggle',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.GateToggleRequest,
  proto.Webadmin.GateToggleResponse,
  /**
   * @param {!proto.Webadmin.GateToggleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.GateToggleResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.GateToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.GateToggleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.GateToggleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGateToggle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateToggle,
      callback);
};


/**
 * @param {!proto.Webadmin.GateToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.GateToggleResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGateToggle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateToggle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.GateDeleteRequest,
 *   !proto.Webadmin.GateDeleteResponse>}
 */
const methodDescriptor_WebadminService_DoGateDelete = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGateDelete',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.GateDeleteRequest,
  proto.Webadmin.GateDeleteResponse,
  /**
   * @param {!proto.Webadmin.GateDeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.GateDeleteResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.GateDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.GateDeleteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.GateDeleteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGateDelete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateDelete',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateDelete,
      callback);
};


/**
 * @param {!proto.Webadmin.GateDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.GateDeleteResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGateDelete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateDelete',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateDelete);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.GateSettingViewRequest,
 *   !proto.Webadmin.GateSettingViewResponse>}
 */
const methodDescriptor_WebadminService_DoGateSettingView = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGateSettingView',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.GateSettingViewRequest,
  proto.Webadmin.GateSettingViewResponse,
  /**
   * @param {!proto.Webadmin.GateSettingViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.GateSettingViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.GateSettingViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.GateSettingViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.GateSettingViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGateSettingView =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateSettingView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateSettingView,
      callback);
};


/**
 * @param {!proto.Webadmin.GateSettingViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.GateSettingViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGateSettingView =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateSettingView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateSettingView);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.GateSettingEditRequest,
 *   !proto.Webadmin.GateSettingEditResponse>}
 */
const methodDescriptor_WebadminService_DoGateSettingEdit = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGateSettingEdit',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.GateSettingEditRequest,
  proto.Webadmin.GateSettingEditResponse,
  /**
   * @param {!proto.Webadmin.GateSettingEditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.GateSettingEditResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.GateSettingEditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.GateSettingEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.GateSettingEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGateSettingEdit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateSettingEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateSettingEdit,
      callback);
};


/**
 * @param {!proto.Webadmin.GateSettingEditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.GateSettingEditResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGateSettingEdit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateSettingEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateSettingEdit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.GateSettingResetRequest,
 *   !proto.Webadmin.GateSettingResetResponse>}
 */
const methodDescriptor_WebadminService_DoGateSettingReset = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGateSettingReset',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.GateSettingResetRequest,
  proto.Webadmin.GateSettingResetResponse,
  /**
   * @param {!proto.Webadmin.GateSettingResetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.GateSettingResetResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.GateSettingResetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.GateSettingResetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.GateSettingResetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGateSettingReset =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateSettingReset',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateSettingReset,
      callback);
};


/**
 * @param {!proto.Webadmin.GateSettingResetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.GateSettingResetResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGateSettingReset =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateSettingReset',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateSettingReset);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.GateHardwareViewRequest,
 *   !proto.Webadmin.GateHardwareViewResponse>}
 */
const methodDescriptor_WebadminService_DoGateHardwareView = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGateHardwareView',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.GateHardwareViewRequest,
  proto.Webadmin.GateHardwareViewResponse,
  /**
   * @param {!proto.Webadmin.GateHardwareViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.GateHardwareViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.GateHardwareViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.GateHardwareViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.GateHardwareViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGateHardwareView =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateHardwareView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateHardwareView,
      callback);
};


/**
 * @param {!proto.Webadmin.GateHardwareViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.GateHardwareViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGateHardwareView =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateHardwareView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateHardwareView);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.GateHardwareEditRequest,
 *   !proto.Webadmin.GateHardwareEditResponse>}
 */
const methodDescriptor_WebadminService_DoGateHardwareEdit = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGateHardwareEdit',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.GateHardwareEditRequest,
  proto.Webadmin.GateHardwareEditResponse,
  /**
   * @param {!proto.Webadmin.GateHardwareEditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.GateHardwareEditResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.GateHardwareEditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.GateHardwareEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.GateHardwareEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGateHardwareEdit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateHardwareEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateHardwareEdit,
      callback);
};


/**
 * @param {!proto.Webadmin.GateHardwareEditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.GateHardwareEditResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGateHardwareEdit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateHardwareEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateHardwareEdit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.GateHardwareResetRequest,
 *   !proto.Webadmin.GateHardwareResetResponse>}
 */
const methodDescriptor_WebadminService_DoGateHardwareReset = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGateHardwareReset',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.GateHardwareResetRequest,
  proto.Webadmin.GateHardwareResetResponse,
  /**
   * @param {!proto.Webadmin.GateHardwareResetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.GateHardwareResetResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.GateHardwareResetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.GateHardwareResetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.GateHardwareResetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGateHardwareReset =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateHardwareReset',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateHardwareReset,
      callback);
};


/**
 * @param {!proto.Webadmin.GateHardwareResetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.GateHardwareResetResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGateHardwareReset =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateHardwareReset',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateHardwareReset);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.GenerateConfigRequest,
 *   !proto.Webadmin.GenerateConfigResponse>}
 */
const methodDescriptor_WebadminService_DoGateGenerateConfig = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGateGenerateConfig',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.GenerateConfigRequest,
  proto.Webadmin.GenerateConfigResponse,
  /**
   * @param {!proto.Webadmin.GenerateConfigRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.GenerateConfigResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.GenerateConfigRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.GenerateConfigResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.GenerateConfigResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGateGenerateConfig =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateGenerateConfig',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateGenerateConfig,
      callback);
};


/**
 * @param {!proto.Webadmin.GenerateConfigRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.GenerateConfigResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGateGenerateConfig =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGateGenerateConfig',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGateGenerateConfig);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PriceViewRequest,
 *   !proto.Webadmin.PriceViewResponse>}
 */
const methodDescriptor_WebadminService_DoPriceView = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPriceView',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PriceViewRequest,
  proto.Webadmin.PriceViewResponse,
  /**
   * @param {!proto.Webadmin.PriceViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PriceViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PriceViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PriceViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PriceViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPriceView =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPriceView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPriceView,
      callback);
};


/**
 * @param {!proto.Webadmin.PriceViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PriceViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPriceView =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPriceView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPriceView);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PriceEditRequest,
 *   !proto.Webadmin.PriceEditResponse>}
 */
const methodDescriptor_WebadminService_DoPriceEdit = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPriceEdit',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PriceEditRequest,
  proto.Webadmin.PriceEditResponse,
  /**
   * @param {!proto.Webadmin.PriceEditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PriceEditResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PriceEditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PriceEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PriceEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPriceEdit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPriceEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPriceEdit,
      callback);
};


/**
 * @param {!proto.Webadmin.PriceEditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PriceEditResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPriceEdit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPriceEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPriceEdit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PriceResetRequest,
 *   !proto.Webadmin.PriceResetResponse>}
 */
const methodDescriptor_WebadminService_DoPriceReset = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPriceReset',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PriceResetRequest,
  proto.Webadmin.PriceResetResponse,
  /**
   * @param {!proto.Webadmin.PriceResetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PriceResetResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PriceResetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PriceResetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PriceResetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPriceReset =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPriceReset',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPriceReset,
      callback);
};


/**
 * @param {!proto.Webadmin.PriceResetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PriceResetResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPriceReset =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPriceReset',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPriceReset);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PrintInViewRequest,
 *   !proto.Webadmin.PrintInViewResponse>}
 */
const methodDescriptor_WebadminService_DoPrintInView = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPrintInView',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PrintInViewRequest,
  proto.Webadmin.PrintInViewResponse,
  /**
   * @param {!proto.Webadmin.PrintInViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PrintInViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PrintInViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PrintInViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PrintInViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPrintInView =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPrintInView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPrintInView,
      callback);
};


/**
 * @param {!proto.Webadmin.PrintInViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PrintInViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPrintInView =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPrintInView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPrintInView);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PrintInEditRequest,
 *   !proto.Webadmin.PrintInEditResponse>}
 */
const methodDescriptor_WebadminService_DoPrintInEdit = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPrintInEdit',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PrintInEditRequest,
  proto.Webadmin.PrintInEditResponse,
  /**
   * @param {!proto.Webadmin.PrintInEditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PrintInEditResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PrintInEditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PrintInEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PrintInEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPrintInEdit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPrintInEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPrintInEdit,
      callback);
};


/**
 * @param {!proto.Webadmin.PrintInEditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PrintInEditResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPrintInEdit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPrintInEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPrintInEdit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PrintInResetRequest,
 *   !proto.Webadmin.PrintInResetResponse>}
 */
const methodDescriptor_WebadminService_DoPrintInReset = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPrintInReset',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PrintInResetRequest,
  proto.Webadmin.PrintInResetResponse,
  /**
   * @param {!proto.Webadmin.PrintInResetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PrintInResetResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PrintInResetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PrintInResetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PrintInResetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPrintInReset =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPrintInReset',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPrintInReset,
      callback);
};


/**
 * @param {!proto.Webadmin.PrintInResetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PrintInResetResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPrintInReset =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPrintInReset',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPrintInReset);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PrintOutViewRequest,
 *   !proto.Webadmin.PrintOutViewResponse>}
 */
const methodDescriptor_WebadminService_DoPrintOutView = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPrintOutView',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PrintOutViewRequest,
  proto.Webadmin.PrintOutViewResponse,
  /**
   * @param {!proto.Webadmin.PrintOutViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PrintOutViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PrintOutViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PrintOutViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PrintOutViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPrintOutView =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPrintOutView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPrintOutView,
      callback);
};


/**
 * @param {!proto.Webadmin.PrintOutViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PrintOutViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPrintOutView =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPrintOutView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPrintOutView);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PrintOutEditRequest,
 *   !proto.Webadmin.PrintOutEditResponse>}
 */
const methodDescriptor_WebadminService_DoPrintOutEdit = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPrintOutEdit',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PrintOutEditRequest,
  proto.Webadmin.PrintOutEditResponse,
  /**
   * @param {!proto.Webadmin.PrintOutEditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PrintOutEditResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PrintOutEditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PrintOutEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PrintOutEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPrintOutEdit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPrintOutEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPrintOutEdit,
      callback);
};


/**
 * @param {!proto.Webadmin.PrintOutEditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PrintOutEditResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPrintOutEdit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPrintOutEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPrintOutEdit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PrintOutResetRequest,
 *   !proto.Webadmin.PrintOutResetResponse>}
 */
const methodDescriptor_WebadminService_DoPrintOutReset = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoPrintOutReset',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PrintOutResetRequest,
  proto.Webadmin.PrintOutResetResponse,
  /**
   * @param {!proto.Webadmin.PrintOutResetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PrintOutResetResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PrintOutResetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PrintOutResetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PrintOutResetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doPrintOutReset =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPrintOutReset',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPrintOutReset,
      callback);
};


/**
 * @param {!proto.Webadmin.PrintOutResetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PrintOutResetResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doPrintOutReset =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoPrintOutReset',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoPrintOutReset);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.CategoryViewRequest,
 *   !proto.Webadmin.CategoryViewResponse>}
 */
const methodDescriptor_WebadminService_DoCategoryView = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoCategoryView',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.CategoryViewRequest,
  proto.Webadmin.CategoryViewResponse,
  /**
   * @param {!proto.Webadmin.CategoryViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.CategoryViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.CategoryViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.CategoryViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.CategoryViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doCategoryView =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoCategoryView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoCategoryView,
      callback);
};


/**
 * @param {!proto.Webadmin.CategoryViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.CategoryViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doCategoryView =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoCategoryView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoCategoryView);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.CategoryAddRequest,
 *   !proto.Webadmin.CategoryAddResponse>}
 */
const methodDescriptor_WebadminService_DoCategoryAdd = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoCategoryAdd',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.CategoryAddRequest,
  proto.Webadmin.CategoryAddResponse,
  /**
   * @param {!proto.Webadmin.CategoryAddRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.CategoryAddResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.CategoryAddRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.CategoryAddResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.CategoryAddResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doCategoryAdd =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoCategoryAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoCategoryAdd,
      callback);
};


/**
 * @param {!proto.Webadmin.CategoryAddRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.CategoryAddResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doCategoryAdd =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoCategoryAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoCategoryAdd);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.CategoryEditRequest,
 *   !proto.Webadmin.CategoryEditResponse>}
 */
const methodDescriptor_WebadminService_DoCategoryEdit = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoCategoryEdit',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.CategoryEditRequest,
  proto.Webadmin.CategoryEditResponse,
  /**
   * @param {!proto.Webadmin.CategoryEditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.CategoryEditResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.CategoryEditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.CategoryEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.CategoryEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doCategoryEdit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoCategoryEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoCategoryEdit,
      callback);
};


/**
 * @param {!proto.Webadmin.CategoryEditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.CategoryEditResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doCategoryEdit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoCategoryEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoCategoryEdit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.CategoryToggleRequest,
 *   !proto.Webadmin.CategoryToggleResponse>}
 */
const methodDescriptor_WebadminService_DoCategoryToggle = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoCategoryToggle',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.CategoryToggleRequest,
  proto.Webadmin.CategoryToggleResponse,
  /**
   * @param {!proto.Webadmin.CategoryToggleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.CategoryToggleResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.CategoryToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.CategoryToggleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.CategoryToggleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doCategoryToggle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoCategoryToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoCategoryToggle,
      callback);
};


/**
 * @param {!proto.Webadmin.CategoryToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.CategoryToggleResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doCategoryToggle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoCategoryToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoCategoryToggle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.TypeViewRequest,
 *   !proto.Webadmin.TypeViewResponse>}
 */
const methodDescriptor_WebadminService_DoTypeView = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoTypeView',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.TypeViewRequest,
  proto.Webadmin.TypeViewResponse,
  /**
   * @param {!proto.Webadmin.TypeViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.TypeViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.TypeViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.TypeViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.TypeViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doTypeView =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoTypeView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoTypeView,
      callback);
};


/**
 * @param {!proto.Webadmin.TypeViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.TypeViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doTypeView =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoTypeView',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoTypeView);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.TypeAddRequest,
 *   !proto.Webadmin.TypeAddResponse>}
 */
const methodDescriptor_WebadminService_DoTypeAdd = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoTypeAdd',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.TypeAddRequest,
  proto.Webadmin.TypeAddResponse,
  /**
   * @param {!proto.Webadmin.TypeAddRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.TypeAddResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.TypeAddRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.TypeAddResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.TypeAddResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doTypeAdd =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoTypeAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoTypeAdd,
      callback);
};


/**
 * @param {!proto.Webadmin.TypeAddRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.TypeAddResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doTypeAdd =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoTypeAdd',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoTypeAdd);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.TypeEditRequest,
 *   !proto.Webadmin.TypeEditResponse>}
 */
const methodDescriptor_WebadminService_DoTypeEdit = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoTypeEdit',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.TypeEditRequest,
  proto.Webadmin.TypeEditResponse,
  /**
   * @param {!proto.Webadmin.TypeEditRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.TypeEditResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.TypeEditRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.TypeEditResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.TypeEditResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doTypeEdit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoTypeEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoTypeEdit,
      callback);
};


/**
 * @param {!proto.Webadmin.TypeEditRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.TypeEditResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doTypeEdit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoTypeEdit',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoTypeEdit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.TypeToggleRequest,
 *   !proto.Webadmin.TypeToggleResponse>}
 */
const methodDescriptor_WebadminService_DoTypeToggle = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoTypeToggle',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.TypeToggleRequest,
  proto.Webadmin.TypeToggleResponse,
  /**
   * @param {!proto.Webadmin.TypeToggleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.TypeToggleResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.TypeToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.TypeToggleResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.TypeToggleResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doTypeToggle =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoTypeToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoTypeToggle,
      callback);
};


/**
 * @param {!proto.Webadmin.TypeToggleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.TypeToggleResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doTypeToggle =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoTypeToggle',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoTypeToggle);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.TransactionRequest,
 *   !proto.Webadmin.TransactionResponse>}
 */
const methodDescriptor_WebadminService_DoTransaction = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoTransaction',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.TransactionRequest,
  proto.Webadmin.TransactionResponse,
  /**
   * @param {!proto.Webadmin.TransactionRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.TransactionResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.TransactionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.TransactionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.TransactionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doTransaction =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoTransaction',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoTransaction,
      callback);
};


/**
 * @param {!proto.Webadmin.TransactionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.TransactionResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doTransaction =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoTransaction',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoTransaction);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.AdminRolesRequest,
 *   !proto.Webadmin.AdminRolesResponse>}
 */
const methodDescriptor_WebadminService_DoGetAdminRoles = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGetAdminRoles',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.AdminRolesRequest,
  proto.Webadmin.AdminRolesResponse,
  /**
   * @param {!proto.Webadmin.AdminRolesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.AdminRolesResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.AdminRolesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.AdminRolesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.AdminRolesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGetAdminRoles =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetAdminRoles',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetAdminRoles,
      callback);
};


/**
 * @param {!proto.Webadmin.AdminRolesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.AdminRolesResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGetAdminRoles =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetAdminRoles',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetAdminRoles);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientRolesRequest,
 *   !proto.Webadmin.ClientRolesResponse>}
 */
const methodDescriptor_WebadminService_DoGetClientRoles = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGetClientRoles',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientRolesRequest,
  proto.Webadmin.ClientRolesResponse,
  /**
   * @param {!proto.Webadmin.ClientRolesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientRolesResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientRolesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientRolesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientRolesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGetClientRoles =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetClientRoles',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetClientRoles,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientRolesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientRolesResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGetClientRoles =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetClientRoles',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetClientRoles);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.CategoriesRequest,
 *   !proto.Webadmin.CategoriesResponse>}
 */
const methodDescriptor_WebadminService_DoGetCategories = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGetCategories',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.CategoriesRequest,
  proto.Webadmin.CategoriesResponse,
  /**
   * @param {!proto.Webadmin.CategoriesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.CategoriesResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.CategoriesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.CategoriesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.CategoriesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGetCategories =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetCategories',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetCategories,
      callback);
};


/**
 * @param {!proto.Webadmin.CategoriesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.CategoriesResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGetCategories =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetCategories',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetCategories);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.TypesRequest,
 *   !proto.Webadmin.TypesResponse>}
 */
const methodDescriptor_WebadminService_DoGetTypes = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGetTypes',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.TypesRequest,
  proto.Webadmin.TypesResponse,
  /**
   * @param {!proto.Webadmin.TypesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.TypesResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.TypesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.TypesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.TypesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGetTypes =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetTypes',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetTypes,
      callback);
};


/**
 * @param {!proto.Webadmin.TypesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.TypesResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGetTypes =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetTypes',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetTypes);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.CountriesRequest,
 *   !proto.Webadmin.CountriesResponse>}
 */
const methodDescriptor_WebadminService_DoGetCountries = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGetCountries',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.CountriesRequest,
  proto.Webadmin.CountriesResponse,
  /**
   * @param {!proto.Webadmin.CountriesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.CountriesResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.CountriesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.CountriesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.CountriesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGetCountries =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetCountries',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetCountries,
      callback);
};


/**
 * @param {!proto.Webadmin.CountriesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.CountriesResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGetCountries =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetCountries',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetCountries);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ProvincesRequest,
 *   !proto.Webadmin.ProvincesResponse>}
 */
const methodDescriptor_WebadminService_DoGetProvinces = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGetProvinces',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ProvincesRequest,
  proto.Webadmin.ProvincesResponse,
  /**
   * @param {!proto.Webadmin.ProvincesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ProvincesResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ProvincesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ProvincesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ProvincesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGetProvinces =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetProvinces',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetProvinces,
      callback);
};


/**
 * @param {!proto.Webadmin.ProvincesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ProvincesResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGetProvinces =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetProvinces',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetProvinces);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.CitiesRequest,
 *   !proto.Webadmin.CitiesResponse>}
 */
const methodDescriptor_WebadminService_DoGetCities = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGetCities',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.CitiesRequest,
  proto.Webadmin.CitiesResponse,
  /**
   * @param {!proto.Webadmin.CitiesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.CitiesResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.CitiesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.CitiesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.CitiesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGetCities =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetCities',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetCities,
      callback);
};


/**
 * @param {!proto.Webadmin.CitiesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.CitiesResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGetCities =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetCities',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetCities);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.ClientsRequest,
 *   !proto.Webadmin.ClientsResponse>}
 */
const methodDescriptor_WebadminService_DoGetClients = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGetClients',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.ClientsRequest,
  proto.Webadmin.ClientsResponse,
  /**
   * @param {!proto.Webadmin.ClientsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.ClientsResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.ClientsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.ClientsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.ClientsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGetClients =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetClients',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetClients,
      callback);
};


/**
 * @param {!proto.Webadmin.ClientsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.ClientsResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGetClients =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetClients',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetClients);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.PlacesRequest,
 *   !proto.Webadmin.PlacesResponse>}
 */
const methodDescriptor_WebadminService_DoGetPlaces = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGetPlaces',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.PlacesRequest,
  proto.Webadmin.PlacesResponse,
  /**
   * @param {!proto.Webadmin.PlacesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.PlacesResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.PlacesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.PlacesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.PlacesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGetPlaces =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetPlaces',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetPlaces,
      callback);
};


/**
 * @param {!proto.Webadmin.PlacesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.PlacesResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGetPlaces =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetPlaces',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetPlaces);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.TimeFormatsRequest,
 *   !proto.Webadmin.TimeFormatsResponse>}
 */
const methodDescriptor_WebadminService_DoGetTimeFormats = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGetTimeFormats',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.TimeFormatsRequest,
  proto.Webadmin.TimeFormatsResponse,
  /**
   * @param {!proto.Webadmin.TimeFormatsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.TimeFormatsResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.TimeFormatsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.TimeFormatsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.TimeFormatsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGetTimeFormats =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetTimeFormats',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetTimeFormats,
      callback);
};


/**
 * @param {!proto.Webadmin.TimeFormatsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.TimeFormatsResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGetTimeFormats =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetTimeFormats',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetTimeFormats);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.LogViewRequest,
 *   !proto.Webadmin.LogViewResponse>}
 */
const methodDescriptor_WebadminService_DoGetLog = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGetLog',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.LogViewRequest,
  proto.Webadmin.LogViewResponse,
  /**
   * @param {!proto.Webadmin.LogViewRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.LogViewResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.LogViewRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.LogViewResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.LogViewResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGetLog =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetLog',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetLog,
      callback);
};


/**
 * @param {!proto.Webadmin.LogViewRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.LogViewResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGetLog =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetLog',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetLog);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.Webadmin.MonitorRequest,
 *   !proto.Webadmin.MonitorResponse>}
 */
const methodDescriptor_WebadminService_DoGetMonitor = new grpc.web.MethodDescriptor(
  '/Webadmin.WebadminService/DoGetMonitor',
  grpc.web.MethodType.UNARY,
  proto.Webadmin.MonitorRequest,
  proto.Webadmin.MonitorResponse,
  /**
   * @param {!proto.Webadmin.MonitorRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.Webadmin.MonitorResponse.deserializeBinary
);


/**
 * @param {!proto.Webadmin.MonitorRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.Webadmin.MonitorResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.Webadmin.MonitorResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.Webadmin.WebadminServiceClient.prototype.doGetMonitor =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetMonitor',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetMonitor,
      callback);
};


/**
 * @param {!proto.Webadmin.MonitorRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.Webadmin.MonitorResponse>}
 *     Promise that resolves to the response
 */
proto.Webadmin.WebadminServicePromiseClient.prototype.doGetMonitor =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/Webadmin.WebadminService/DoGetMonitor',
      request,
      metadata || {},
      methodDescriptor_WebadminService_DoGetMonitor);
};


module.exports = proto.Webadmin;

